,Unnamed: 0,Document_No,Dominant_Topic,Topic_Perc_Contrib,Keywords,Text,Question
0,0,0,29.0,0.3089999854564667,"for, time, complexity, search, runtime, function, none, follow, correct, give","['runtime', 'for', 'follow', 'code', 'fragment', 'for', 'for', 'for']","The runtime for the following code fragment is ?(f(n)). What is f(n)?for (int i=0; i<n; i++) for (int j=0; j<i/10; j++) for (int k=1; k<n; k=2*k) System.out.println(i);
"
1,1,1,29.0,0.11330000311136244,"need, top, last, much, tell, company, operate, copy, push, stock","['give', 'binary', 'search', 'algorithm', 'teach', 'first', 'last', 'index', 'many', 'iteration', 'need', 'find', 'element']","Given the binary search algorithm, as taught in the lecture, and an array with the followingnumbers (from first to last index):5, 9, 11, 99, 110, 111, 200, 300, 500, 1000, 1001.How many iterations does the algorithm need to find the element 5?
"
2,2,2,29.0,0.29679998755455017,"for, time, complexity, search, runtime, function, none, follow, correct, give","['complexity', 'use', 'definition', 'give', 'week', 'fix', 'assume', 'low', 'possible', 'value', 'for', 'definition', 'hold']","An algorithm has time complexity . Using the Definition of Big-Oh as given in the 2019 Week 1a Lecture (slide 14), fix B = 4.Assuming, what is the lowest possible value of b for which the definition holds?
"
3,3,3,29.0,0.16259999573230746,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'quick', 'for', 'almost', 'sorted', 'array']","Which one of the following sorting algorithms is the quickest for an almost sorted array?
"
4,4,4,36.0,0.21389999985694885,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['give', 'tree', 'hwhat', 'order', 'traversal']","Given the tree: a / \ b c / \ / \ e f g hWhat is the in order traversal?
"
5,5,5,27.0,0.2515000104904175,"would, use, result, determine, create, sequence, state, maxheap, num, body","['consider', 'create', 'for', 'directed', 'would', 'able', 'determine', 'matrix', 'create', 'multiplying', 'would', 'able', 'determine', 'if']","Consider we have created an Adjacency Matrix M for some directed graph.a) What would we be able to determine from the matrix created by multiplying M by itself?b) What would we be able to determine if we did this again?
"
6,6,6,27.0,0.10840000212192537,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['algorithm', 'without']","What is the time complexity of Dijkstra's Algorithm without a min-priority queue?
"
7,7,7,25.0,0.14579999446868894,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['link', 'list', 'time', 'complexity', 'insert', 'remove', 'if', 'give', 'reference', 'previous', 'element']","In a linked list what is the time complexity to insert(x) and remove(y) if you were given the reference to the previous element:
"
8,8,8,49.0,0.4722999930381775,"operation, great, remain, put, var, ask, power, much, relation, box","['many', 'beer', 'while', 'fly', 'sleigh', 'back', 'pole', 'police', 'pull', 'police', 'ask', 'for', 'commercial', 'pilot', 'license', 'cpl', 'realise', 'leave', 'remain', 'gift', 'box', 'gift', 'box', 'need', 'find', 'label', 'location', 'put', 'pile', 'remain', 'total', 'pile', 'order', 'name', 'gift', 'box', 'pile', 'use', 'binary', 'search', 'bad', 'case', 'complexity']","Santa has had one too many beers while flying the sleigh back to the North Pole when the police pull him over. The police ask for hisEASA Part-FCL commercial pilot license (CPL) and he realises that he left it in one of 60 remaining gift boxes. The gift box he needs to find is labelled ""Santa Claus"" with ""North Pole"" on. Each location ""e.g Africa"" is put into its own pile, there are 12 remaining piles in total. Each pile is ordered by name ""e.g Mrs Claus"", there are 5 gift boxes in each pile. Using a binary search, what is the worst-case complexity?
"
9,9,9,49.0,0.01669999957084656,"vertex, edge, graph, change, show, matrix, also, if, formula, name",[],"Is the below tree AVL? 5 3 7 2 6 81 9
"
10,10,10,29.0,0.17020000517368314,"for, time, complexity, search, runtime, function, none, follow, correct, give","['time', 'complexity', 'for', 'complete', 'search', 'balance', 'binary', 'search', 'tree']","What is the time complexity for completing 'n' searches in a balanced binary search tree?
"
11,11,11,29.0,0.17030000686645508,"for, time, complexity, search, runtime, function, none, follow, correct, give","['time', 'complexity', 'for', 'complete', 'search', 'balance', 'binary', 'search', 'tree']","What is the time complexity for completing 'n' searches in a balanced binary search tree?
"
12,12,12,52.0,0.21879999339580536,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['correct', 'post', 'order', 'traversal', 'tree']","Which is the correct post-order traversal of the tree? a / \ b c / \ \ d e f
"
13,13,13,52.0,0.09040000289678574,"value, balance, rotation, unbalanced, clockwise, become, dependant, occur, bst, insert","['datum', 'structure', 'describe', 'value', 'node', 'value', 'child']","Which data structure is described by:the value at each node is = the values at its two children.
"
14,14,14,29.0,0.1615000069141388,"for, time, complexity, search, runtime, function, none, follow, correct, give","['average', 'time', 'complexity', 'perform', 'search', 'hash', 'table']","What's average time complexity of performing a search in a hash table?
"
15,15,15,29.0,0.13609999418258667,"vertex, edge, graph, change, show, matrix, also, if, formula, name","['dense', 'sparse', 'graph', 'number', 'vertice', 'number', 'edge']","The asymptotic memory usage of dense and sparse graphs where v is the number of vertices and e is the number of edges is:
"
16,16,16,30.0,0.1679999977350235,"number, find, take, step, item, average, many, give, second, if","['complexity', 'take', 'second', 'complete', 'long', 'take', 'complete']","An algorithm has a time complexity of?(n^3), when n = 2 it takes 2 seconds to complete how long does it take to complete when n = 4
"
17,17,17,23.0,0.33889999985694885,"hash, table, bucket, open, insert, close, key, function, slot, closed","['use', 'hash', 'function', 'add', 'function', 'open', 'hash', 'table', 'hash', 'table', 'index', 'bucket', 'length', 'if', 'bucket', 'overflow', 'full', 'element', 'add', 'element', 'add', 'overflow', 'buckethow', 'many', 'element', 'insert', 'overflow', 'bucket', 'follow', 'element', 'insert', 'leave', 'right', 'ie', 'first', 'insert', 'last', 'insert']","I am using the hash function H(x) = x % 7 to add functions to an open hash table. This hash table is indexed 0 to 6, with each bucket having a max length of 3.If a bucket ""overflows"", ie it is full and another element is added, this element is added to an overflow bucket.How many elements are inserted into the overflow bucket after the following elements are inserted?Elements inserted left to right (ie 29 is first insert 69 is last insert) : 29, 64, 63, 16, 48, 74, 143, 39, 80, 281, 4, 69.
"
18,18,18,23.0,0.20739999413490293,"number, find, take, step, item, average, many, give, second, if","['give', 'average', 'number', 'step', 'for', 'closed', 'hash', 'table', 'linear_probing', 'find', 'item']","Given a load factor of 0.3 what is the average number of steps for a Closed Hash table with linear probing to find an item.
"
19,19,19,40.0,0.15790000557899475,"high, iteration, note, randomly, look_like, condition, often, unanswerable, answerable, deal","['approach', 'company', 'recommend', 'fast', 'efficient', 'sort', 'often', 'deal', 'large', 'inputs', 'numerical', 'datum', 'limited', 'storage', 'sort', 'algorithm', 'suitable']","You have been approached by a company to recommend a fast and efficient sorting algorithm to use in Java. They often deal with large inputs of numerical data, and have limited storage. Which sorting algorithm is most suitable?
"
20,20,20,36.0,0.02459999918937683,"order, traversal, tree, post, follow, pre, level, output, use, traverse",['follow'],"What is the time complexity of the following algorithm : 0.00001n4 + 100n2 + 19nlogn + (10n2* 5n3 ) ?
"
21,21,21,52.0,0.02500000037252903,"order, traversal, tree, post, follow, pre, level, output, use, traverse",['follow'],"What is the time complexity of the following algorithm : 0.00001n4 + 100n2 + 19nlogn + (10n2* 5n3 ) ?
"
22,22,22,36.0,0.0746999979019165,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'statement', 'regard', 'sort', 'incorrect']","Which one of the following statements regarding sorting is incorrect?
"
23,23,23,36.0,0.16249999403953552,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['give', 'least', 'exactly', 'apply', 'follow', 'true']","Given the functionsf(x) = 0.1 n5g(x) = 50 nlognh(x) = 0.5 2nhint ( O = at least , ? = at most, O = exactly (both O and? apply))Which of the following is true ?
"
24,24,24,2.0,0.19130000472068787,"tree, binary, node, avl, search, child, root, follow, height, leaf","['build', 'avl', 'tree', 'follow', 'value', 'value', 'root', 'node', 'point']","Build an AVL Tree with the following values:15, 20, 24, 10, 13, 7, 30, 36, 25Which value does the root node point to?
"
25,25,25,2.0,0.17630000412464142,"number, find, take, step, item, average, many, give, second, if","['closed', 'hash', 'linear_probing', 'take', 'average', 'step', 'array', 'size', 'many', 'item', 'array']","A Closed Hash w/Linear Probing takes 11/2 average steps and the array is size 10.How many items are in the array?
"
26,26,26,36.0,0.18870000541210172,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['give', 'integ', 'randomly', 'order', 'bad', 'case', 'time', 'complexity', 'sort', 'come', 'efficient', 'sort', 'algorithm', 'give', 'condition']","Given an integer array of randomly ordered 0's and 1's what is the worst case time complexity to sort them so that all the 0's come before the 1's. Use the most efficient sorting algorithm given the conditions of the array.
"
27,27,27,36.0,0.17100000381469727,"tree, binary, node, avl, search, child, root, follow, height, leaf","['list', 'number', 'create', 'balanced', 'avl', 'tree', 'follow', 'list', 'number', 'print', 'if', 'traverse', 'balanced', 'avl', 'tree', 'use', 'post', 'order', 'method']","The list of numbers below create a balanced AVL Tree. Which of the following lists of numbers is printed out if you traverse the balanced AVL Tree using the post order method.4, 6.7, 2, 1, 1.5, 3, 5, 7, 6, 7.5
"
28,28,28,29.0,0.18649999797344208,"for, time, complexity, search, runtime, function, none, follow, correct, give","['use', 'array', 'list', 'average', 'time', 'complexity', 'for', 'function', 'find', 'for', 'unsorted', 'array']","When using an array list what is the average time complexity for the function find(o) for an unsorted array
"
29,29,29,36.0,0.24560000002384186,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['look', 'complexity', 'bubble', 'sort', 'best', 'bad', 'case']","When looking at the complexity of doing a bubble sort, what is the best and worst case
"
30,30,30,36.0,0.1940000057220459,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['consider', 'avl', 'tree', 'follow', 'insert', 'give', 'order', 'remove', 'would', 'output', 'order', 'traversal', 'tree']","Consider an AVL tree where the following have been inserted (in the given order):10, 2, 21, 55, 69, 9, 79, 10After removing 55, what would the output of the In Order traversal of the tree be ?
"
31,31,31,52.0,0.11969999969005585,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['follow', 'rule', 'for', 'big', 'false']","Which of the following rules for big O is FALSE?
"
32,32,32,29.0,0.1386999934911728,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['big', 'many', 'customer', 'customer', 'typically', 'send', 'payment', 'several', 'peoplewhich', 'type', 'graph', 'representation', 'would']","Big Bank has many customers (about 20,000) but its customers typically only send payments to several people.Which type of graph representation would you use?
"
33,33,33,0.0,0.18449999392032626,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['give', 'tree', 'node', 'look', 'order', 'kind', 'traversal', 'describe']","Given the tree: 16 / \ 9 19 / \ / \ 2 10 17 24 /1The nodes looked at are in the order:1, 2, 10, 9, 17, 24, 19, 16What kind of traversal does this describe?
"
34,34,34,52.0,0.01669999957084656,"vertex, edge, graph, change, show, matrix, also, if, formula, name",[],"What is ""big O"" of heapify?
"
35,35,35,0.0,0.4742000102996826,"vertex, edge, graph, change, show, matrix, also, if, formula, name","['organise', 'party', 'close', 'friend', 'workplace', 'try', 'figure', 'work', 'send', 'invite', 'invitee', 'know', 'number', 'friendship', 'large', 'number', 'invitee', 'think', 'graph', 'would', 'help', 'figure', 'invitee', 'vertex', 'friendship', 'person', 'edgesalice', 'also', 'want', 'store', 'name', 'along', 'employee', 'would', 'number', 'digit', 'number', 'order', 'send', 'email', 'invite', 'for', 'partywhich', 'data', 'structure', 'suitable', 'for', 'use']","Alice is organising a dinner party between a few close friends at her workplace. She is trying to figure out the seating plan and working on sending the invites. Most of the invitees know each other, so the number of friendships is larger than the number of invitees. Alice thinks a graph would help her figure out the seating plan where all the invitees are vertices and friendships of each person are edges.Alice also wants to store names along with employee ID numbers, which are 5 digit numbers, in order to send out email invites for the party.Which data structures are most suitable for each of these uses?
"
36,36,36,0.0,0.14640000462532046,"hash, table, bucket, open, insert, close, key, function, slot, closed","['define', 'load', 'hash', 'table']","Define the load of a hash table.
"
37,37,37,23.0,0.01669999957084656,"vertex, edge, graph, change, show, matrix, also, if, formula, name",[],"What is the time complexity of this algorithm: 5n3+ 100n2+ 0.1n3.5 + 1000n?
"
38,38,38,29.0,0.10670000314712524,"for, time, complexity, search, runtime, function, none, follow, correct, give","['feature', 'asymptotic', 'complexity']","What are the features of asymptotic complexity?
"
39,39,39,29.0,0.06350000202655792,"number, find, take, step, item, average, many, give, second, if","['big_theta', 'complexity', 'equation']","Big Theta Complexity Equation:
"
40,40,40,36.0,0.17630000412464142,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['list', 'operation', 'best', 'average', 'bad', 'case', 'runtime', 'complexity']","Which Array List operation has the same best, average and worst case runtime complexity?
"
41,41,41,36.0,0.10909999907016754,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['bad', 'case', 'run', 'time', 'try', 'find', 'element', 'avl', 'tree', 'consist', 'element']","What is the worst case run time when trying to find an element in an AVL tree that consists of m * 2n elements ?
"
42,42,42,29.0,0.16179999709129333,"for, time, complexity, search, runtime, function, none, follow, correct, give","['follow', 'good', 'describe', 'run', 'time', 'for', 'while', 'good', 'luck', 'exam', 'for']","Which of the following best describes the run time of this algorithm:for(int i = 0; i<N; i++){ int j = -1; while(j<i){ System.out.println(""Good luck in your exams""); j++; } for(k=0; k<T; k++){ System.out.println(""You'll smash them!""); }}
"
43,43,43,51.0,0.17430000007152555,"store, close, want, difficulty, label, stepsopen, hashtable, collisionsthis, counter, presume","['consider', 'close', 'hashtable', 'linear_probe', 'suppose', 'want', 'store', 'item', 'want', 'step', 'find', 'item', 'less', 'consider', 'loadl', 'small', 'whole', 'number', 'bucket']","Consider a closed hashtable H with linear probing. Suppose we want to store up to 900 items in H, and we want theaverageamount of steps to find any item to be less than 2.By considering the loadL, what is the smallest (whole) number of buckets H can have?
"
44,44,44,21.0,0.22769999504089355,"option, heap, select, insertionsort, let, selectionsort, technique, design, joke, funny","['many', 'method', 'consider', 'design', 'select', 'option', 'proper', 'design', 'technique']","There are many methods to consider when designing an algorithm. Please select the option that is not a proper design technique.
"
45,45,45,21.0,0.22769999504089355,"option, heap, select, insertionsort, let, selectionsort, technique, design, joke, funny","['many', 'method', 'consider', 'design', 'select', 'option', 'proper', 'design', 'technique']","There are many methods to consider when designing an algorithm. Please select the option that is not a proper design technique.
"
46,46,46,21.0,0.22059999406337735,"int, if, for, while, return, follow, code, mean, sum, new","['complexity', 'follow', 'algorithmfor', 'int', 'for', 'int', 'return']","What is the complexity of the following algorithm?for(int i=0;i<n;i++) for (int j=0;j<i;j++) return i+j; }}
"
47,47,47,36.0,0.38339999318122864,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'equivalent', 'best', 'bad', 'average', 'time', 'unstable', 'for', 'example', 'selection', 'sort', 'best', 'bad', 'average', 'time', 'complexity', 'also', 'stable', 'thus', 'would', 'correct', 'answer', 'if']","Of the following sorting algorithms, which one has equivalent Best, Worst and Average time complexitiesandis not unstable?(For example, Selection Sort has a Best, Worst and Average time complexity of n^2. It is also stable, and thus would be a correct answer if it were there.)
"
48,48,48,36.0,0.41760000586509705,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'process', 'datum', 'structure', 'singly', 'link', 'list', 'array', 'complete', 'follow', 'task', 'describe', 'fast', 'task', 'get', 'item', 'datum', 'structuretask', 'insert', 'new', 'item', 'front', 'data', 'structuretask', 'remove', 'item', 'middle', 'datum', 'answer', 'would', 'imply', 'link', 'list', 'perform', 'task', 'fast', 'array', 'perform', 'task', 'fastest', 'link', 'list', 'perform', 'task', 'fastest', 'correct', 'answer']","Of the following processes, which data structure (Singly Linked Lists or Arrays) can complete the following tasks described faster:Task 1: Getting to the 1000th item in the data structure.Task 2: Inserting a new item at the front of the data structure.Task 2: Removing an item from the middle of the data structure.Example: An answer of [LL : A : LL] would imply that the Linked List performed task 1 fastest, the Array performed task 2 fastest, and the Linked List performed task 3 fastest.(Not the correct answer).
"
49,49,49,25.0,0.13660000264644626,"number, find, take, step, item, average, many, give, second, if","['calculate', 'give', 'hint', 'fact']","Calculate given that . (Hint: Use the fact that [x^p= x mod p] when p is prime).
"
50,50,50,40.0,0.01669999957084656,"vertex, edge, graph, change, show, matrix, also, if, formula, name",[],"What isDijkstra's algorithm?
"
51,51,51,36.0,0.01669999957084656,"vertex, edge, graph, change, show, matrix, also, if, formula, name",[],"What isDijkstra's algorithm?
"
52,52,52,27.0,0.09390000253915788,"would, use, result, determine, create, sequence, state, maxheap, num, body","['would', 'result', 'order', 'apply', 'follow', 'tree']","What would the result be when an in-order traversal is applied to the following tree? 15 / \ / \ / \ 9 13/ \ / \6 3 4 2
"
53,53,53,36.0,0.2143999934196472,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['bad', 'case', 'run', 'time', 'insertion', 'sort']","What is the worst case run time of insertion sort?
"
54,54,54,36.0,0.13279999792575836,"remove, base, set, implementation, insert, may, allow, incorrect, entity, limited","['timsort', 'utilise', 'implementation']","What other 2 algorithms does Hybrid sort ( timsort ) utilise in its implementation?
"
55,55,55,36.0,0.3050999939441681,"hash, table, bucket, open, insert, close, key, function, slot, closed","['give', 'follow', 'hash', 'table', 'use', 'linear_probing', 'hash', 'function', 'use', 'would', 'state', 'hash', 'table', 'insert']","Given the following hash table, using linear probing, where the hash function being used is ...0 1 2 3 4 5 6 7 8 9-------------------------------|5 |35| | | | | |42| | |-------------------------------...what would the state of the hash table be after inserting 32, 27 and then 6?
"
56,56,56,23.0,0.26350000500679016,"maximum, problem, random, integer, solve, fill, interface, product, similar, anywhere","['consider', 'follow', 'problem', 'give', 'array', 'integer', 'find', 'maximum', 'product', 'integer', 'array', 'for', 'example', 'consider', 'array', 'maximum', 'product', 'form', 'pairwhat', 'complexity', 'efficient', 'algorithm', 'solve', 'problem']","Consider the following problem:Given an array of integers, find the maximum product of two integers in the array. For example, consider the array [ -10, -3, 5, 6 , -2 ]. The maximum product is formed by either the (-10, 3) or (5, 6) pair.What is the complexity of the most efficient algorithm that solves this problem?
"
57,57,57,23.0,0.2642999887466431,"hash, table, bucket, open, insert, close, key, function, slot, closed","['follow', 'would', 'solution', 'hash', 'collision', 'insert', 'hash', 'table']","Which of the following would NOT be a solution to a hash collision when inserting into a hash table?
"
58,58,58,23.0,0.21780000627040866,"would, use, result, determine, create, sequence, state, maxheap, num, body","['consider', 'unordered', 'complete', 'binary', 'tree', 'contain', 'letter', 'know', 'traversal', 'tree', 'result', 'sequence', 'postorder', 'traversal', 'result', 'sequence', 'result', 'inorder', 'traversal']","Consider an unordered complete binary tree containing all letters from A to G. Knowing that a preorder traversal of the tree results in the sequence [ B, G, C, D, A, E, F ] and a postorder traversal results in the sequence [C, D, G, E, F, A, B ], what results from an inorder traversal?
"
59,59,59,27.0,0.17919999361038208,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'could', 'reason', 'for', 'choose', 'skip', 'list', 'link', 'list']","Which of the following COULD be a reason for choosing to use a skip list over a linked list?
"
60,60,60,25.0,0.1736000031232834,"tree, binary, node, avl, search, child, root, follow, height, leaf","['maximum', 'height', 'perfectly_balanced', 'search', 'tree', 'size']","What is the maximum height of a perfectly balanced search tree of size n (2019 Lecture 8a slide 28)
"
61,61,61,24.0,0.226500004529953,"value, balance, rotation, unbalanced, clockwise, become, dependant, occur, bst, insert","['consider', 'balanced', 'avl', 'tree', 'avl', 'tree', 'attempt', 'balance', 'whenever', 'become', 'unbalanced', 'use', 'rotation', 'algorithmif', 'insert', 'number', 'tree', 'perform', 'post', 'order', 'traversal', 'printing', 'value', 'output']","Consider a balanced AVL Tree as below: 5 / \ 3 6 \ 7This AVL Tree will attempt to balance itself whenever it become unbalanced using a rotation algorithm.If we insert the number 9 to the tree and then perform a post order traversal printing the values in the tree.What is the output?
"
62,62,62,24.0,0.09700000286102296,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'input', 'make', 'insertion', 'sort', 'descend', 'order', 'perform', 'large', 'number', 'operation']","Which of the following input arrays makes insertion sort in descending order perform the largest number of operations?
"
63,63,63,36.0,0.0908999964594841,"tree, binary, node, avl, search, child, root, follow, height, leaf","['maximum', 'possible', 'number', 'element', 'binary', 'tree', 'depth']","What is the maximum possible number of elements in a binary tree of depth 7?
"
64,64,64,23.0,0.2678999900817871,"hash, table, bucket, open, insert, close, key, function, slot, closed","['many', 'different', 'insertion', 'sequence', 'key', 'value', 'use', 'hash', 'function', 'close', 'hash', 'table', 'linear_probing', 'give']","How many different insertion sequences of the key values, using the hash function h(k)=k mod 10, will result in the closed hash table with linear probing given below?
"
65,65,65,23.0,0.01669999957084656,"vertex, edge, graph, change, show, matrix, also, if, formula, name",[],"What is the method forSelection Sort?
"
66,66,66,29.0,0.2070000022649765,"for, time, complexity, search, runtime, function, none, follow, correct, give","['take', 'for', 'for', 'for', 'asymptotic', 'complexity', 'likely']","An algorithm takes 1s for n = 200, 1000s for n = 2000 and 8000s for n = 4000.Which asymptotic complexity does it likely have?
"
67,67,67,29.0,0.08479999750852585,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['list', 'quick', 'average', 'run', 'time', 'for', 'insert', 'if']","Which one of the List has the quickest average run time for insert() if n >= 1000;
"
68,68,68,25.0,0.08020000159740448,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'statement', 'sort', 'algorthms', 'false']","Which of the following statements about sorting algorthms is false?
"
69,69,69,36.0,0.2558000087738037,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['insert', 'value', 'searchtree', 'bad', 'case', 'average', 'case', 'time', 'complexity']","When inserting a value into aBinary SearchTree, what is the worst case and average case time complexity?
"
70,70,70,38.0,0.661300003528595,"datum, structure, data, space, implement, possible, memory, store, work, for","['hire', 'housing', 'create', 'system', 'allow', 'keep', 'track', 'address', 'currently', 'available', 'spend', 'many', 'decade', 'support', 'people', 'area', 'find', 'perfect', 'home', 'recently', 'begin', 'fall', 'behind', 'new', 'tech', 'base', 'company', 'determine', 'catch', 'ensure', 'provide', 'high', 'quality', 'service', 'canthe', 'system', 'require', 'follow', 'quality', 'must', 'quick', 'search', 'for', 'give', 'address', 'find', 'whether', 'currently', 'store', 'system', 'access', 'detail', 'speed', 'important', 'space', 'use', 'ensure', 'user', 'leave', 'wait', 'for', 'long', 'while', 'system', 'run', 'easy', 'add', 'new', 'address', 'system', 'become', 'available', 'remove', 'take', 'market', 'datum', 'need', 'sorted', 'employee', 'personally', 'work', 'customer', 'recommend', 'different', 'home', 'search', 'for', 'entry', 'directly', 'rough', 'estimate', 'many', 'address', 'need', 'store', 'give', 'time', 'number', 'tend', 'vary', 'large', 'margin', 'throughout', 'year', 'due', 'seasonal', 'buyerswhich', 'datum', 'structure', 'implement', 'new', 'system']","You have been hired by the Housing Opportunities of Northern Delaware Association to create a system which allows them to keep track of which addresses they currently have available. They have spent many decades supporting the people of the area in finding the perfect home, but have recently began to fall behind newer tech-based companies, and are determined to catch up and ensure they provide the highest quality service they can.The system is required to have the following qualities:- It must be quick to search for a given address, to find whether or not it is currently stored in the system, and to access its details. Speed is more important than space used, to ensure users are not left waiting for too long while the system runs.- It should be easy to add new addresses to the system as they become available, and to remove them once they are taken off the market.- The data does not need to be sorted, as employees personally work with each customer to recommend different homes, and so will be searching for entries directly.- You have only a rough estimate of how many addresses will need to be stored at a given time, and the number tends to vary by a large margin throughout the year due to seasonal buyers.Which data structure should you implement in the new system?
"
71,71,71,38.0,0.17239999771118164,"need, top, last, much, tell, company, operate, copy, push, stock","['datum', 'structure', 'operate', 'last', 'last', 'fashion']","A “stack” data structure operates in a last in last out fashion.
"
72,72,72,57.0,0.16599999368190765,"tree, binary, node, avl, search, child, root, follow, height, leaf","['many', 'case', 'remove', 'node', 'binary', 'search', 'tree']","How many cases are there when we are removing a node from a binary search tree?
"
73,73,73,2.0,0.15940000116825104,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'data', 'structure', 'bad', 'case', 'space', 'complexity']","Which of the following data structures has a worst case space complexity of O(n log n)?
"
74,74,74,25.0,0.2071000039577484,"for, time, complexity, search, runtime, function, none, follow, correct, give","['exponential', 'time', 'complexity', 'slow', 'factorial', 'time', 'complexity']","Exponential time complexity is slower than factorial time complexity
"
75,75,75,29.0,0.08959999680519104,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['example', 'follow', 'type', 'algorithm']","Dijkstra algorithm is a example of which of the following type of algorithm
"
76,76,76,12.0,0.0869000032544136,"value, balance, rotation, unbalanced, clockwise, become, dependant, occur, bst, insert","['rotation', 'operation', 'would', 'need', 'perform', 'balance', 'avl', 'tree']","Which rotation operations would need to be performed to balance this AVL Tree? F / \ A M / \ H X / \ G J
"
77,77,77,46.0,0.4205999970436096,"multiple, map, see, travel, happen, initially, direct, slope, lift, ski","['finished', 'level', 'map', 'ski', 'lift', 'travel', 'slope', 'see', 'case', 'use', 'multiple', 'ski', 'lift', 'quicker', 'use', 'direct', 'lineuse', 'short', 'route', 'slope', 'base', 'camp']","You have just finished your A-levels and are on a gap yaaa in Switzerland skiing,You have a map that showsyou the ski lifts to travel between slopes, seen aboveIn some cases, using multiple ski lifts is quicker than using the direct line.Using Dijkstras algorithm, calculate the length of the shortest route to each slope from the base camp.
"
78,78,78,46.0,0.249099999666214,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['pre', 'order', 'follow', 'tree', 'give', 'output']","Pre-Order traversal on the following tree will give which output? 9 / \ 6 15 / \ \ 1 8 21 / \ 7 25
"
79,79,79,2.0,0.2513000071048737,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'option', 'advantage', 'use', 'avl', 'tree', 'rather', 'binary', 'search', 'tree']","Which one of the following options is an advantage of using an AVL Tree rather than a Binary Search Tree?
"
80,80,80,2.0,0.11180000007152556,"hash, table, bucket, open, insert, close, key, function, slot, closed","['great', 'hash', 'table', 'low', 'number', 'step', 'require', 'search', 'table', 'for', 'value']","The greater the load factor of a hash table, the lower the number of steps required to search the table for a value.
"
81,81,81,23.0,0.15489999949932098,"for, time, complexity, search, runtime, function, none, follow, correct, give","['follow', 'data', 'structure', 'slow', 'average', 'time', 'complexity', 'for', 'insert', 'item']","Which of the following data structures has the slowest average time complexity for inserting an item?
"
82,82,82,25.0,0.15559999644756314,"for, time, complexity, search, runtime, function, none, follow, correct, give","['average', 'bad', 'case', 'search', 'time', 'for', 'give', 'element', 'skip', 'list']","What is the average and worst case search time for a given element in a skip list?
"
83,83,83,36.0,0.2380000054836273,"hash, table, bucket, open, insert, close, key, function, slot, closed","['use', 'hash', 'function', 'add', 'function', 'open', 'hash', 'table', 'hash', 'table', 'index', 'store', 'pointer', 'head', 'element', 'singly', 'link', 'list', 'store', 'value', 'add', 'hash', 'tableafter', 'follow', 'element', 'insert', 'order', 'write', 'many', 'value', 'store', 'link', 'list', 'point', 'index', 'index', 'respectively', 'note', 'head', 'pointer', 'count', 'value', 'store', 'value', 'add', 'hash', 'table']","I am using the hash function H(x) = x % 7 to add functions to an open hash table. This hash table itself is indexed 0 to 6 and stores pointers to the head elements of singly linked lists which store the values added to the hash table.After the following elements are inserted (in the order they are written), how many values are stored in the linked lists that are pointed to by index 0 and index 6 respectively? (Please note that the head pointer does NOT count as a value stored)Values to add to the hash table: 49, 22, 36, 135, 48, 73, 209, 105, 1042, 591, 5, 256.
"
84,84,84,23.0,0.28200000524520874,"choose, log, type, small, wrong, memory, requirement, meet, back, book","['take', 'follow', 'pseudocode', 'for', 'sort', 'book', 'height', 'shelf', 'shelf', 'book', 'for', 'find', 'small', 'book', 'slot', 'swap', 'small', 'type', 'occur']","Take the following pseudocode for sorting books by height on a shelf:void sort(shelf of N books){ for i = 1 to N { find the smallest book between slots i and N swap this smallest book with book i; }}Which type of sort has occurred?
"
85,85,85,36.0,0.19380000233650208,"tree, binary, node, avl, search, child, root, follow, height, leaf","['if', 'balance', 'factor', 'tree', 'node', 'equal', 'rebalance', 'avl', 'tree', 'follow', 'hold', 'true']","If the balance factor of a tree node equals to 2, when rebalancing an AVL tree, which of the following pseudo-code holds true?
"
86,86,86,2.0,0.10689999908208847,"hash, table, bucket, open, insert, close, key, function, slot, closed","['for', 'hash', 'table']","The load factor for a hash table is:
"
87,87,87,36.0,0.3102000057697296,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'algorithm', 'best', 'average', 'bad', 'case', 'time', 'complexity']","Which two sorting algorithms have a best (O), average (?), and worst-case (O) time complexity of n(log(n))?
"
88,88,88,36.0,0.2861999869346619,"retrieve, deletion, patient, hold, extremely, surgery, longer, allow, feature, busy","['hire', 'surgery', 'create', 'system', 'hold', 'patient', 'record', 'surgery', 'extremely', 'busy', 'retrieve', 'record', 'must', 'fast', 'possible', 'surgery', 'state', 'previous', 'system', 'allow', 'sort', 'record', 'feature', 'longer', 'require', 'many', 'patient', 'join', 'leave', 'insertion', 'deletion', 'must', 'fast']","You have been hired by a surgery to create a system that can hold patient records. The surgery is extremely busy, so retrieving records must be as fast as possible. The surgery has stated that the previous system allowed them to sort records, but this feature was no longer required. As many patients join and leave, insertion and deletion must both be very fast.
"
89,89,89,59.0,0.16030000150203705,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'arrlength', 'for', 'int', 'for', 'int', 'if', 'name', 'bad', 'complexity', 'average', 'complexity', 'good', 'complexity']","Analyse the sorting algorithm belowvoid sort(int arr[]){ int n = arr.length; for (int i = 0; i < n-1; i++) { int min_idx = i; for (int j = i+1; j < n; j++) if (arr[j] < arr[min_idx]) min_idx = j; int temp = arr[min_idx]; arr[min_idx] = arr[i]; arr[i] = temp;}State the name of the algorithm, the worst complexity, average complexity and best complexity
"
90,90,90,36.0,0.3158999979496002,"method, size, input, go, exist, elementary_operation, likely, give, use, alphabetical","['like', 'book', 'alphabetically', 'go', 'away', 'mother', 'buy', 'book', 'for', 'monthhowever', 'stick', 'emma', 'system', 'slide', 'book', 'wherever', 'convenient', 'rearrange', 'exist', 'come', 'home', 'vacation', 'want', 'sort', 'book', 'back', 'alphabetical', 'orderwhat', 'fast', 'could']","Emma likes to organise her book collection alphabetically. When she goes away to Uni, her mother buys a few books for her every month.However, she doesn't stick to Emma's system and just slides the books wherever it's more convenient. She doesn't rearrange the existing books.When Emma comes home on vacation, she wants to sort her books back into alphabetical order.What's the fastest algorithm that Emma could use?
"
91,91,91,20.0,0.10130000114440918,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['equivalent', 'sort']","A shell sort where h=1 is equivalent to which other sort?
"
92,92,92,36.0,0.2142000049352646,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['complexity', 'insertion', 'sort', 'already', 'sort', 'array']","What is the complexity of insertion sort on an already sorted array?
"
93,93,93,36.0,0.08160000294446945,"for, time, complexity, search, runtime, function, none, follow, correct, give","['follow', 'function', 'stack']","Which of the following is not a function of a stack?
"
94,94,94,6.0,0.1421000063419342,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['consider', 'follow', 'binary', 'tree', 'would', 'outcome', 'print', 'node', 'via', 'order', 'traversal']","Consider the following binary tree:What would be the outcome of printing each node via in-order traversal?
"
95,95,95,29.0,0.17430000007152555,"for, time, complexity, search, runtime, function, none, follow, correct, give","['possible', 'search', 'for', 'word', 'english', 'language', 'constant', 'time', 'complexity']","Is it possible to search for any word in the english language in constant time complexity ?
"
96,96,96,42.0,0.12049999833106995,"low, require, many, swap, perform, static, hard, partition, growth_rate, sortbubble","['if', 'perform', 'bubble', 'sort', 'list', 'many', 'swap', 'carry', 'pass']","If you perform a bubble sort on the list:62, 90, 14, 43, 54, 94, 18, 74, 3, 49How many swaps will have been carried out after the 5th pass?
"
97,97,97,23.0,0.2412000000476837,"hash, table, bucket, open, insert, close, key, function, slot, closed","['give', 'hash', 'function', 'open', 'hashing', 'table', 'item', 'take', 'comparison', 'find', 'if', 'follow', 'item', 'add', 'use', 'give', 'hashing', 'function']","Given the hash function of % 11 into an open hashing table, which item will take the most comparisons to find if the following items are added using the given hashing function?11, 17, 32, 132, 4, 9, 100, 34, 25, 98, 165, 77, 40.
"
98,98,98,23.0,0.09380000084638596,"tree, binary, node, avl, search, child, root, follow, height, leaf","['condition', 'need', 'meet', 'for', 'binary', 'tree']","What conditions need to be met for a binary tree to be perfectly balanced
"
99,99,99,17.0,0.14550000429153442,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['binary', 'tree', 'traversal', 'similar', 'expression', 'evaluation']","Which binary tree traversal is similar to expression evaluation?
"
100,100,100,52.0,0.25290000438690186,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'algorithm', 'good', 'case', 'time', 'complexity']","Which two sorting algorithms have a best case time complexity of O(n)
"
101,101,101,36.0,0.25799998641014105,"hash, table, bucket, open, insert, close, key, function, slot, closed","['consider', 'implement', 'hash', 'table', 'possible', 'bucket', 'intend', 'add', 'maximum', 'key', 'tablethe', 'hash', 'table', 'closed', 'use', 'linear', 'average', 'number', 'step', 'take', 'insert', 'find', 'item', 'hash', 'table']","Consider you are implementing a hash table with 200 possible buckets, and intend to add a maximum of 150 keys to the table.The hash table is closed and uses linear probing.What is the average number of steps taken to insert/find an item in this hash table?
"
102,102,102,23.0,0.12449999898672105,"pass, send, initial, replace, message, public_key, alice, necessary, publish, generate","['sort', 'show', 'initial', 'list', 'pass', 'pass', 'sort', 'use']","The result of each pass of a sorting algorithm is shown below:Initial list: 3 4 2 1 7 5 8 61st pass: 2 1 3 4 7 5 8 62nd pass: 1 2 3 4 7 5 8 63rd pass: 1 2 3 4 5 6 7 84th pass: 1 2 3 4 5 6 7 8Which sorting algorithm was used?
"
103,103,103,36.0,0.22349999845027926,"datum, structure, data, space, implement, possible, memory, store, work, for","['datum', 'structure', 'implement', 'enable', 'add', 'begin', 'remove', 'end', 'complexity']","Which data structure can be implemented to enable both adding at the beginning and removing at the end to have O(1) complexity?
"
104,104,104,38.0,0.11940000206232072,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['would', 'path', 'pre', 'order', 'search', 'follow', 'tree']","What would be the path of a pre-order search on the following tree? 5 / \ 3 7 / \ \ 2 6 9 / \ \ \ 1 4 8 10
"
105,105,105,17.0,0.13819999992847445,"right, leave, node, process, sub, current, subtree, describe, differ, left","['datum', 'structure', 'node', 'leave', 'branch']","Which data structure has nodes, leaves and branches?
"
106,106,106,25.0,0.16779999434947968,"datum, structure, data, space, implement, possible, memory, store, work, for","['datum', 'structure', 'degenerate', 'binary', 'tree', 'similar']","Which data structure is a degenerate binary tree most similar to?
"
107,107,107,38.0,0.09799999743700027,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['search', 'link', 'list', 'start', 'position']","Searching a linked list starts from which position?
"
108,108,108,36.0,0.244499996304512,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'good', 'time', 'complexity', 'ofo', 'log']","Which sort doesn't have a best time complexity ofO(n log(n)).
"
109,109,109,36.0,0.0584000013768673,"value, balance, rotation, unbalanced, clockwise, become, dependant, occur, bst, insert","['divisible', 'small', 'possible', 'value']","(529 - x) is divisible by 29, x>0. What is the smallest possible value of x?
"
110,110,110,24.0,0.0584000013768673,"value, balance, rotation, unbalanced, clockwise, become, dependant, occur, bst, insert","['divisible', 'small', 'possible', 'value']","(529 - x) is divisible by 29, x>0. What is the smallest possible value of x?
"
111,111,111,52.0,0.2299000024795532,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['give', 'follow', 'tree', 'would', 'result', 'post', 'order', 'traversal']","Given the following tree, what would be the result of a post-order traversal?
"
112,112,112,6.0,0.3418000042438507,"node, next, previous, constant, object, pointerthe, follow, private, nodenext, head","['abstract', 'structure', 'use', 'node', 'contain', 'element', 'pointer', 'indicate', 'head', 'lead', 'element', 'potentially', 'indicate', 'tail', 'element', 'node', 'contain', 'reference', 'node', 'ahead', 'behind']","This abstract data structure uses nodes to contains its elements, has a pointer that indicates its head, or leading, element (and potentially one to indicate its tail element) and each of its nodes contains a reference to both the node ahead of it and behind it. What is it?
"
113,113,113,39.0,0.4397000074386597,"run, large, fast, term, quicksort, exact, record, partition, question, information","['own', 'large', 'selection', 'vinyl', 'record', 'inherit', 'record', 'recently', 'decease', 'motherhis', 'mother', 'exact', 'amount', 'double', 'decide', 'good', 'time', 'finally', 'sort', 'collection', 'arranging', 'record', 'alphabetical', 'order', 'whilst', 'add', 'new', 'onesjimmy', 'preference', 'come', 'sort', 'collection', 'space', 'for', 'sort', 'enough', 'storage', 'for', 'record', 'less', 'large', 'number', 'item', 'sort', 'want', 'do', 'fast', 'possible']","Jimmy owns a large selection of vinyl records. He has just inherited more records from his recently deceased mother.His mother had the exact amount of records that Jimmy has, doubling Jimmy's collection.Jimmy has decided that now is a good time to finally sort his collection by arranging the records in alphabetical order, whilst adding the new ones.Jimmy has some preferences when it comes to sorting the collection:- He doesn't have any more space for sorting. He has enough storage for all of the records, no more, no less.- With a large number of items to sort, he wants this done as fast as possible.
"
114,114,114,39.0,0.12099999934434892,"for, time, complexity, search, runtime, function, none, follow, correct, give","['follow', 'correct', 'balance', 'factor', 'for', 'follow', 'tree', 'balance']","Which of the following are the correct balance factors for the following tree? 6 / \ 3 10 / \ 2 4 \ 5And is it balanced?
"
115,115,115,2.0,0.10209999978542328,"int, if, for, while, return, follow, code, mean, sum, new","['sort', 'for', 'while']","What sorting algorithm is for the code belowfor (i = 1; i < n; i++){key = arr[i];j = i - 1;while (j >= 0 && arr[j] > key){arr[j + 1] = arr[j];j = j - 1;}arr[j + 1] = key;}}
"
116,116,116,35.0,0.2432000041007996,"int, if, for, while, return, follow, code, mean, sum, new","['runtime', 'for', 'section', 'codefor', 'int', 'for', 'int', 'pickle']","What is the runtime for this section of code?for(int i=1; i<n; i*=2) for(int j=0; j<10; j++) System.out.println(""any pickles?"");
"
117,117,117,35.0,0.061000000685453415,"value, balance, rotation, unbalanced, clockwise, become, dependant, occur, bst, insert","['if', 'divisible', 'value']","If 617 – x is divisible by 17.What is the value of x?
"
118,118,118,29.0,0.11980000138282774,"for, time, complexity, search, runtime, function, none, follow, correct, give","['follow', 'statement', 'regard', 'complexity', 'isnot', 'correct']","Which of the following statements regarding complexity isnot correct?
"
119,119,119,29.0,0.09619999676942824,"measurement, precision, accuracy, difference, image, significant, definition, regard, accuracylow, accuracyhigh","['statement', 'regard', 'tree', 'irrelevant']","Which statement regarding trees is irrelevant?
"
120,120,120,2.0,0.13580000400543213,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['traversal', 'method', 'use', 'print', 'element', 'binary', 'search', 'tree', 'ascend', 'order']","What traversal method should be used to print the elements of a binary search tree in ascending order?
"
121,121,121,52.0,0.1316000074148178,"element, add, index, end, move, place, ie, first, assume, contain","['time', 'insert', 'element', 'end', 'length', 'if', 'array']","The time complexity to insert an element at the end of an array is O(1)Where 'n' is the length if the array
"
122,122,122,50.0,0.1678999960422516,"tree, binary, node, avl, search, child, root, follow, height, leaf","['value', 'insert', 'follow', 'binary', 'tree']","Where should the value ""8"" be inserted into the following binary tree? 9 / \ 3 11 / \ / \1 5 10 13 / \ / \ A B C D
"
123,123,123,25.0,0.19499999284744265,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['doubly', 'link', 'list', 'time', 'want', 'insert', 'delete', 'need', 'update', 'set', 'reference', 'order', 'want', 'store', 'pointer', 'beforehand', 'lose', 'part', 'link', 'list']","In a Doubly-Linked List, each time we want to insert or delete a new node we need to update three sets of references but in what order ?We do not want to store any pointer beforehand, nor lose any part of the linked list.
"
124,124,124,6.0,0.11230000108480452,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['consider', 'function', 'log', 'log', 'follow', 'statement', 'true']","Consider the functions f(n) = log(n), g(n) = 10*log(n), h(n) = 100*log2(n), y(n) = n. Which of the following statements is true?
"
125,125,125,35.0,0.21040000021457672,"int, if, for, while, return, follow, code, mean, sum, new","['follow', 'complexity', 'int', 'count', 'for', 'int', 'for', 'count', 'for', 'int', 'count', 'return', 'count']","The following algorithm has time complexity O(f(n))int count = 0;for(int i = 0; i<n; i++){ for(int j = 0; j<(10*n); j++){ count++; } }for(int k = 0; k<n; k++){ count++; }return count;what is f(n)?
"
126,126,126,35.0,0.20430000126361847,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['follow', 'output', 'pre', 'order', 'apply', 'tree']","Which of the following is the output of Pre-order traversal when applied to the tree:
"
127,127,127,52.0,0.16050000488758087,"tree, binary, node, avl, search, child, root, follow, height, leaf","['complete', 'binary', 'tree', 'number', 'node', 'tree', 'depth', 'equal']","In a complete binary tree, the number of nodes in a tree of depth n equals
"
128,128,128,2.0,0.18709999322891235,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'tree', 'avl', 'tree']","Is the following tree an AVL Tree
"
129,129,129,2.0,0.16920000314712524,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['see', 'unbalanced', 'tree', 'tree', 'balance', 'right', 'left', 'case', 'output', 'if', 'newly', 'balance', 'tree', 'use', 'order', 'traversal']","Below we see an unbalanced tree. 5 / \ 1 6 \ 4 / 3The tree is balanced with the Right Left case, what is the output if we traverse the newly balanced tree using in order traversal?
"
130,130,130,52.0,0.13809999823570251,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['let', 'time', 'taken', 'heap', 'sort', 'number', 'element', 'sort', 'follow', 'true']","Let the time taken to execute a heap sort be T(n) (where n is the number of elements to be sorted).Which of the following is true?
"
131,131,131,36.0,0.08470000326633452,"would, use, result, determine, create, sequence, state, maxheap, num, body","['adaptation', 'would', 'allow', 'long', 'path', 'find', 'use', 'djikstra', 'algorithm']","Which of these adaptations would not allow the longest path to be found using Djikstra's algorithm?
"
132,132,132,52.0,0.17389999330043793,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['traversal', 'generate', 'output', 'follow', 'tree']","What tree traversal is generates the output: 75, 63, 83, 34, 65, 91, 23, 38, 90, 94 from the following tree:
"
133,133,133,52.0,0.14239999651908875,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['follow', 'cryptographic', 'tool']","Which one of the following is NOT a cryptographic tool?
"
134,134,134,52.0,0.06379999965429306,"value, balance, rotation, unbalanced, clockwise, become, dependant, occur, bst, insert","['calculate', 'value']","Calculate the value of Dijkstra(A) from A to D
"
135,135,135,36.0,0.2353000044822693,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'good', 'fit', 'description', 'stableb', 'case', 'average', 'case', 'bad', 'case']","Which sorting algorithm best fits this description:StableBest case: (n2)Average case: (n2)Worst case: (n2)
"
136,136,136,36.0,0.17489999532699585,"number, find, take, step, item, average, many, give, second, if","['take', 'second', 'run', 'long', 'take', 'run']","An algorithm of complexity ?(2^n) takes 2 seconds to run at n=4. How long will it take to run at n=10?
"
137,137,137,40.0,0.13600000739097595,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['bad', 'case', 'time', 'week', 'slide']","What is the worst case time complexity of a heap sort (2019 week 7a slide 5)
"
138,138,138,2.0,0.19789999723434448,"tree, binary, node, avl, search, child, root, follow, height, leaf","['statement', 'always', 'true', 'for', 'height', 'balanced', 'binary', 'tree']","Which statement is always true for a height-balanced binary tree?
"
139,139,139,2.0,0.09319999814033507,"datum, structure, data, space, implement, possible, memory, store, work, for","['tree', 'usage', 'for', 'database']","Whichisn'tan advantage of B-tree usage for databases?
"
140,140,140,35.0,0.1890999972820282,"int, if, for, while, return, follow, code, mean, sum, new","['time', 'follow', 'function', 'int', 'int', 'int', 'count', 'for', 'for', 'count', 'return', 'count']","What is the time complexity of the following function:int f(int n){ int count = 0; for(int i = 0; i<=n; i++){ for(int j = i; j>0; i++){ j/=2; count++; } } return count;}
"
141,141,141,23.0,0.27869999408721924,"hash, table, bucket, open, insert, close, key, function, slot, closed","['consider', 'open', 'hash', 'table', 'bucket', 'hash', 'function', 'would', 'table', 'look_like', 'insert', 'follow', 'element', 'order']","Consider an Open Hash Table with 7 buckets and hash function h(x) = 3x % 7. What would the table look like after inserting the following elements: 8,3,15,22,9 in that order?
"
142,142,142,52.0,0.28949999809265137,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['see', 'unbalanced', 'tree', 'correct', 'case', 'for', 'balance', 'output', 'if', 'traverse', 'tree', 'use', 'post', 'order', 'traversal']","Below we see an unbalanced tree. 5 / \ 1 6 \ 4 / 3What is the correct case for balancing and what is the output if we traverse the tree using post order traversal?
"
143,143,143,52.0,0.09399999678134917,"number, find, take, step, item, average, many, give, second, if","['if', 'order', 'sqrt', 'take', 'second', 'run', 'expect', 'time', 'for']","If an algorithm of order O( sqrt(n) ) takes 4 seconds to run at n = 50, what is the expected time for n = 200?
"
144,144,144,40.0,0.19380000233650208,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['bad', 'case', 'time', 'complexity', 'high', 'average', 'casekey', 'index']","Which array function has a worst case time complexity which is higher than its average case?Key:o = objecti = index
"
145,145,145,25.0,0.1404000073671341,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['information', 'update', 'singly', 'link', 'list']","What information is updated when you insert a node into a singly linked list?
"
146,146,146,6.0,0.10689999908208847,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['mean', 'sort', 'stable']","What is meant by a sorting algorithm being 'stable'?
"
147,147,147,36.0,0.2277999967336655,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'tree', 'balanced', 'avl', 'binary', 'tree', 'true', 'false']","The following tree is a balanced AVL binary tree. True or False? 98 / \ 12 101 / \ \ 9 31 102 / \3 10
"
148,148,148,2.0,0.06369999796152115,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['represent', 'valid']","Does this array represent a valid min heap?[3, 10, 6, 17, 43, 50, 8]
"
149,149,149,23.0,0.19740000367164606,"hash, table, bucket, open, insert, close, key, function, slot, closed","['consider', 'closed', 'hash', 'table', 'index', 'insert', 'follow', 'data', 'value', 'occupy', 'place', 'index']","Consider a closed hash table where h(x) = x% 8 where the index is 0 through 7. When inserting the following data, which value occupies the place indexed 4?27, 145, 87, 45, 23, 56, 79, 135
"
150,150,150,23.0,0.09449999779462814,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['result', 'use', 'traversal', 'graph', 'printing', 'node', 'visit']","What is the result of using a breadth first traversal on this graph, printing every node visited?
"
151,151,151,30.0,0.1476999968290329,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['follow', 'statement', 'true']","Which of the following statements is true?
"
152,152,152,36.0,0.32820001244544983,"hash, table, bucket, open, insert, close, key, function, slot, closed","['closed', 'hash', 'function', 'slot', 'element', 'insert', 'hash', 'table', 'slot', 'respectively']","A closed hash function h(x) = x%13 has slots 0 through to 12. When the elements (2, 55, 4, 26, 11, 14, 37, 30, 43, 40, 44, 6, 23) are inserted into the Hash table, in what slots are 43, 6 and 44 respectively?
"
153,153,153,23.0,0.17640000581741333,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['binary', 'tree', 'correct', 'for', 'sequence', 'belowin', 'order', 'epre', 'order']","Which binary tree is correct for the sequences below?In-order : B, A, D, C, Epre-order : A, B, C, D, E
"
154,154,154,36.0,0.2842999994754791,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'best', 'average', 'bad', 'time', 'complexity', 'matter', 'datum']","Which of the following sorting algorithms has the same best, average and worst time complexity (no matter what the data is)
"
155,155,155,36.0,0.10199999809265137,"tree, binary, node, avl, search, child, root, follow, height, leaf","['avl', 'tree', 'unbalanced', 'case']","This AVL Tree is unbalanced, which case is it in? 10 / \ / \ 5 15 / \ / \ 1 7 / / 6
"
156,156,156,2.0,0.06679999828338623,"would, use, result, determine, create, sequence, state, maxheap, num, body",['result'],"What is the result of ?(n2)+?(n)?
"
157,157,157,2.0,0.21889999508857727,"tree, binary, node, avl, search, child, root, follow, height, leaf","['tree', 'number', 'key', 'indicate', 'separation', 'child', 'node', 'internal', 'node', 'tree', 'key', 'use', 'say', 'follow', 'statement', 'correct']","In an internal node of a 2-3 B-tree, the number of keys will indicate the separation of subtrees.For 3 child nodes of an internal node of this 2-3 B-Tree, 2 keys will be used, say X1 and X2.Which of the following statements, is correct?
"
158,158,158,17.0,0.19699999690055847,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['follow', 'correct', 'post', 'order', 'traversal', 'binary', 'tree', 'show']","Which of the following is the correct post-order traversal of the binary tree shown below? 2 / \ 31 14 / \ / \12 7 25 16
"
159,159,159,25.0,0.3443000018596649,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['suppose', 'store', 'element', 'array', 'list', 'singly', 'link', 'list', 'probabilistic', 'skip', 'list', 'follow', 'statement', 'false']","Suppose we store 50 elements in an Array List, a Singly Linked List and a Probabilistic Skip List. Which of the following statements is false?
"
160,160,160,25.0,0.14090000092983246,"for, time, complexity, search, runtime, function, none, follow, correct, give","['consider', 'follow', 'statement', 'follow', 'function', 'follow', 'statement', 'correct']","Consider the following statements about the following functions: , , and .Which one of the following statements is correct?
"
161,161,161,17.0,0.35830000042915344,"right, leave, node, process, sub, current, subtree, describe, differ, left","['describe', 'follow', 'step', 'process', 'node', 'leave', 'subtree', 'process', 'node', 'subtree', 'process', 'current', 'node']","Which type of traversal is described by the following steps?1. process the nodes in the left subtree2. process the nodes in the right subtree3. process the current node
"
162,162,162,17.0,0.1306000053882599,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['consider', 'follow', 'array', 'apply', 'array', 'sort', 'order', 'array', 'first', 'iteration']","Consider the following array[53, 165, 202, 129, 32, 85, 98, 177, 195, 71]A Shellsort algorithm is applied. In the first iteration of the array, a '5-sort' is performed.What is the order of the array after this first iteration?
"
163,163,163,29.0,0.1746000051498413,"for, time, complexity, search, runtime, function, none, follow, correct, give","['average', 'time', 'complexity', 'for', 'quicksort']","What is the average Big Theta time complexity for Quicksort?
"
164,164,164,29.0,0.1736000031232834,"tree, binary, node, avl, search, child, root, follow, height, leaf","['consider', 'maximum', 'height', 'perfectly_balanced', 'search', 'tree']","What is considered a maximum height of a perfectly balanced search tree?
"
165,165,165,2.0,0.09390000253915788,"vertex, edge, graph, change, show, matrix, also, if, formula, name","['store', 'would', 'show', 'vertex', 'exactly', 'edges_apart']","With a graph stored as an adjacency matrix, which of these would show you which vertices are exactly two edges apart?
"
166,166,166,29.0,0.2723999917507172,"for, time, complexity, search, runtime, function, none, follow, correct, give","['consider', 'follow', 'asymptotic', 'time', 'complexity', 'for', 'for', 'for']","Consider the following algorithm with asymptotic time complexity O(f(n)).for (int i=0; i<20*n; i++) for(int j=0; j<n; j++) System.out.println(""A"");for (int i=1; i<n; i++) System.out.println(""B"");What is f(n)?
"
167,167,167,29.0,0.2723999917507172,"for, time, complexity, search, runtime, function, none, follow, correct, give","['consider', 'follow', 'asymptotic', 'time', 'complexity', 'for', 'for', 'for']","Consider the following algorithm with asymptotic time complexity O(f(n)).for (int i=0; i<20*n; i++) for(int j=0; j<n; j++) System.out.println(""A"");for (int i=1; i<n; i++) System.out.println(""B"");What is f(n)?
"
168,168,168,29.0,0.09849999845027924,"tree, binary, node, avl, search, child, root, follow, height, leaf","['binary', 'tree', 'would', 'suggest', 'consider']","What characteristics of a binary tree would suggest that it is considered min-heap?
"
169,169,169,2.0,0.2678999900817871,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['make', 'xor', 'memory', 'efficient', 'doubly', 'link', 'list', 'different', 'standard', 'doubly', 'link', 'list']","What makes an XOR or memory-efficient doubly-linked list different from a standard doubly-linked list?
"
170,170,170,36.0,0.2245000004768372,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['link', 'list', 'operation', 'best', 'average', 'bad', 'case', 'time', 'complexity']","Which of these Linked List operations has a best, average and worst case time complexity of O(1)?
"
171,171,171,36.0,0.1022000014781952,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['let', 'complexity', 'big', 'notation']","Let , . What is the complexity in big O notation of ?
"
172,172,172,30.0,0.01669999957084656,"vertex, edge, graph, change, show, matrix, also, if, formula, name",[],"What is 16^71 mod 71?16^71 = x mod71.x=?
"
173,173,173,36.0,0.2806999981403351,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'bad', 'case', 'time', 'complexity', 'quick', 'sort']","Which of the following is the worst case time complexity of quick sort?
"
174,174,174,36.0,0.22830000519752505,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['give', 'follow', 'tree', 'if', 'post', 'order', 'would', 'output']","Given the following tree, if we were to use post order traversal, what would the output be? Declan / \ Beth Finola / \ / \ Alex Corrie Emma Georgia
"
175,175,175,52.0,0.2215999960899353,"hash, table, bucket, open, insert, close, key, function, slot, closed","['hash', 'table', 'call', 'element', 'would', 'assign', 'bucket', 'give', 'hash', 'function']","In a hash table, what is it called when 2 or more elements would be assigned to the same bucket given their hash function?
"
176,176,176,23.0,0.24140000343322754,"number, find, take, step, item, average, many, give, second, if","['take', 'second', 'run', 'input', 'take', 'second', 'run', 'input', 'if', 'input', 'long', 'likely', 'take']","An algorithm takes 3 seconds to run with an input n = 10 and it takes 81 seconds to run with an input n = 30. If we run the algorithm with an input of n = 100, how long is it most likely to take?
"
177,177,177,40.0,0.17339999973773956,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['field', 'store', 'node', 'doubly', 'link', 'list']","What fields are stored in the nodes of a doubly linked list?
"
178,178,178,6.0,0.19679999351501465,"pass, send, initial, replace, message, public_key, alice, necessary, publish, generate","['want', 'send', 'message', 'kk', 'slider', 'use', 'public_key', 'make']","Tom Nook wants to send a message to KK Slider using RSA encryption. What is the Public Key made of?p = a prime numberq = a prime numbern = pqe = a small exponent, where 1 < e < (p - 1)(q - 1)
"
179,179,179,36.0,0.21940000355243686,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['good', 'case', 'time', 'complexity', 'insertion']","What is the best case time complexity of insertion sort?
"
180,180,180,36.0,0.11659999936819075,"datum, structure, data, space, implement, possible, memory, store, work, for","['disadvantage', 'implement', 'binary', 'tree', 'use', 'normal', 'array']","What is/are the disadvantages of implementing Binary tree using normal arrays?
"
181,181,181,2.0,0.13140000402927401,"run, large, fast, term, quicksort, exact, record, partition, question, information","['follow', 'desirable', 'fast', 'runtime', 'for', 'large']","Which of the following has the most desirable runtime?i.e which will be the fastest runtime for large n?
"
182,182,182,31.0,0.1850000023841858,"high, iteration, note, randomly, look_like, condition, often, unanswerable, answerable, deal","['use', 'selection', 'sort', 'sort', 'lowest', 'high', 'following', 'list', 'look_like', 'iteration']","Using selection sort and sorting from lowest to highest, what will the following list look like after 3 iterations?[50,35,79,63,24,90,101,143,256,3]
"
183,183,183,31.0,0.1518000066280365,"for, time, complexity, search, runtime, function, none, follow, correct, give","['for', 'array', 'list', 'size', 'best', 'bad', 'average', 'runtime', 'complexity', 'for', 'operation']","For an array list of size n what are the best, worst and average runtime complexities for each of it's operations?
"
184,184,184,29.0,0.14429999887943268,"tree, binary, node, avl, search, child, root, follow, height, leaf","['runtime', 'binary', 'search', 'tree', 'search']","What is the runtime of a Binary Search Tree Search?
"
185,185,185,36.0,0.16850000619888306,"tree, binary, node, avl, search, child, root, follow, height, leaf","['if', 'binary', 'tree', 'label', 'complete', 'binary', 'tree']","Which, if any, of the Binary Trees labelled A-H is a complete binary tree?
"
186,186,186,2.0,0.06679999828338623,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection",['sort'],"Which of the followingO(n logn)sorting algorithm is the slowest ?
"
187,187,187,52.0,0.2617999911308289,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['processing', 'follow', 'tree', 'post', 'order', 'give', 'outcome']","Processing the following tree in post-order gives which outcome?
"
188,188,188,52.0,0.20239999890327454,"tree, binary, node, avl, search, child, root, follow, height, leaf","['need', 'rotate', 'follow', 'avl', 'tree', 'become', 'balanced']","Which node needs to be rotated in the following AVL tree to become balanced: 25 / \ 20 30 / \ \10 22 40 \ 50
"
189,189,189,2.0,0.195700004696846,"must, least, additional, generic, smallest, think, underestimate, satisfied, prove, stand","['stand', 'bad', 'configuration', 'must', 'order', 'sven', 'go', 'adventure', 'sort', 'sort', 'least', 'amount', 'time']","Kristoff has 9823598273 reindeer. The reindeer are stood in the worst configuration. He must order his reindeer before he and Sven can go on an adventure, which sort should he use to sort them in the least amount of time?
"
190,190,190,36.0,0.13770000636577606,"low, require, many, swap, perform, static, hard, partition, growth_rate, sortbubble","['consider', 'array', 'use', 'bubble', 'sort', 'many', 'pass', 'array', 'require', 'sort', 'low', 'highestnote', 'include', 'final', 'pass', 'confirm', 'correct', 'order']","Consider the array: 4, 1, 3, 2, 5.Using Bubble sort, how many passes through the array are required to sort it from lowest to highest?Note: not including a final pass to confirm correct order.
"
191,191,191,29.0,0.2879999876022339,"for, time, complexity, search, runtime, function, none, follow, correct, give","['consider', 'follow', 'time', 'complexity', 'for', 'input', 'asymptotic', 'time', 'complexity', 'function']","Consider an algorithm with the following time complexity for an input n:What is the asymptotic time complexity of this function?
"
192,192,192,29.0,0.26640000939369196,"consider, total, first, call, line, nee, decide, xtotal, via, organise","['ash', 'decide', 'organise', 'pokemon', 'tree', 'tree', 'traversal', 'first', 'line', 'caterpie', 'last', 'bulbasaur']","Ash decides to organise his Pokemon in a tree. Which tree traversal should he use such that Charizard is first in line and Caterpie is last? Bulbasaur / \ Pikachu Caterpie / \ Charizard Pidgeotto
"
193,193,193,56.0,0.06679999828338623,"consider, total, first, call, line, nee, decide, xtotal, via, organise",['consider'],"What kind of algorithm is a Merge sort considered to be?
"
194,194,194,56.0,0.06360000371932982,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['represent', 'correct']","Does the array below represent a correct max heap?[1,7,13,16,21,28,35,33,29,26,20,14,3]
"
195,195,195,50.0,0.1022000014781952,"hash, table, bucket, open, insert, close, key, function, slot, closed","['hash', 'mean', 'array', 'bucket']","In Hash Tables, a load factor of 0.45 means that your array has 45% more buckets than you need.True or False?
"
196,196,196,23.0,0.10100000351667404,"tree, binary, node, avl, search, child, root, follow, height, leaf","['tree', 'use', 'output', 'follow', 'tree']","What tree traversal is used to output: 666, 8, 1, 96, 6000000from the following tree: 666 / \ 8 6000000 / \ 1 96
"
197,197,197,52.0,0.15309999883174896,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['singly', 'link', 'list']","What is stored in each node of a singly linked list?
"
198,198,198,47.0,0.2581000030040741,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['for', 'graph', 'follow', 'path', 'length', 'traversable', 'way', 'length', 'node']","For the graph with the following path lengths, which are traversable both ways:A<->B 2A<->C 3B<->C 6B<->E 4C<->D 8D<->E 2D<->F 1E<->F 4What is the length of the shortest path between Nodes A and F?
"
199,199,199,2.0,0.2906999886035919,"tree, binary, node, avl, search, child, root, follow, height, leaf","['give', 'follow', 'integer', 'binary', 'search', 'tree', 'new', 'element', 'insert', 'orderfor', 'new', 'element', 'node', 'new', 'element', 'child', 'offor', 'example', 'would', 'mean', 'child', 'child', 'child']","Given the following integer binary search tree, three new elements 12, 8 and 5 are inserted in that order.For each new element which node is each of the new elements a child of?For example, ""4, 49, 2"" would mean that 12 is a child of 4, 8 is a child of 49 and 5 is a child of 2.
"
200,200,200,2.0,0.13109999895095825,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'avl', 'tree', 'true']","Which of the following about AVL trees is not true?
"
201,201,201,2.0,0.2698999941349029,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'fastest', 'good', 'case', 'time', 'complexity']","Which of the following sorting algorithms has the fastest best case time complexity?
"
202,202,202,36.0,0.1728000044822693,"tree, binary, node, avl, search, child, root, follow, height, leaf","['reason', 'for', 'avl', 'tree', 'rebalance', 'insertion', 'deletion', 'node']","What is the reason for AVL Trees rebalancing after insertion/deletion of a node?
"
203,203,203,52.0,0.30070000886917114,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['if', 'post', 'order', 'traversal', 'binart', 'tree', 'pre', 'order', 'traversal']","If the post order traversal of a binart tree is DEBFCA. What is the pre order traversal?
"
204,204,204,52.0,0.07959999889135361,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['number', 'swap', 'need', 'swap', 'list', 'number', 'ascend', 'order', 'use', 'bubble', 'sort']","What is the number of swaps needed to swap this list of numbers:8, 22, 7, 9, 31, 5, 13 in ascending order using bubble sort?
"
205,205,205,25.0,0.1243000030517578,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['consider', 'singly', 'link', 'list', 'time', 'complexity', 'for', 'operation']","Consider the algorithm forinsertioninto a singly-linked list. What is the time complexity for this operation?
"
206,206,206,36.0,0.14180000126361847,"int, if, for, while, return, follow, code, mean, sum, new","['follow', 'algorithmint', 'int', 'while']","What is the time complexity of the following algorithm?int m = 0;int i = n;while (i > 0) { m = m + 2i; i = i / 2;}
"
207,207,207,36.0,0.15320000052452087,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'algorithm', 'stable']","Which of these sorting algorithms is stable
"
208,208,208,36.0,0.18279999494552607,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'unstable', 'element', 'value', 'remain', 'order', 'sort']","Which one of the following sorting algorithms is unstable(elements with same value will remain in the same order after sort)?
"
209,209,209,36.0,0.17839999496936798,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['result', 'pre', 'order', 'traversal', 'tree']","What is the result of pre-order traversal of this tree?
"
210,210,210,52.0,0.12780000269412994,"number, find, take, step, item, average, many, give, second, if","['perform', 'bst', 'search', 'value', 'average', 'many', 'step', 'require', 'find', 'value']","When performing a BST search on N values, on average how many steps are required to find our value?
"
211,211,211,20.0,0.3747999966144562,"method, size, input, go, exist, elementary_operation, likely, give, use, alphabetical","['certain', 'quadratic', 'time', 'algorithm', 'use', 'elementary_operation', 'process', 'input', 'size', 'likely', 'number', 'elementary_operation', 'if', 'give', 'input', 'size']","A certain quadratic time algorithm uses 50 elementary operations to process an input of size 20. What is the most likely number of elementary operations it will use if given an input of size 2000?
"
212,212,212,20.0,0.1850000023841858,"high, iteration, note, randomly, look_like, condition, often, unanswerable, answerable, deal","['use', 'selection', 'sort', 'sort', 'lowest', 'high', 'following', 'list', 'look_like', 'iteration']","Using selection sort and sorting from lowest to highest, what will the following list look like after 3 iterations?[ 900, 321, 400, 60, 702, 9, 572, 18, 104]
"
213,213,213,40.0,0.25519999861717224,"number, find, take, step, item, average, many, give, second, if","['consider', 'closed', 'hash', 'table', 'linear', 'probingcompute', 'average', 'number', 'step', 'take', 'insert', 'item', 'hash', 'table', 'total', 'number', 'available', 'bucket', 'number', 'unused', 'bucket']","Consider a closed hash table with linear probing.Compute the average number of steps taken to insert an item into a hash table with total number of available buckets being 10,000 and the number of unused buckets being 1,500.
"
214,214,214,40.0,0.3718999922275543,"method, size, input, go, exist, elementary_operation, likely, give, use, alphabetical","['quadratic', 'time', 'use', 'elementary_operation', 'process', 'aninput', 'size', 'likely', 'number', 'elementary_operation', 'if', 'give', 'input', 'size']","A quadratic time algorithm uses 50 elementary operations to process aninput of size 10. What is the most likely number of elementary operations it will use if given an input of size 10,000?
"
215,215,215,20.0,0.225600004196167,"start, could, dijkstra, buffer, page, twice, overwrite, circular, nodestraverse, nodetraverse","['consider', 'dijkstra', 'find', 'short', 'path', 'node', 'start', 'node', 'follow', 'ordering', 'node', 'could', 'use', 'dijkstra', 'short', 'path', 'start', 'start']","Consider graph F. Assume that we use Dijkstra's algorithm to find shortest paths from node START to any other node in F. Which of the following orderings on the nodes of F could be used by Dijkstra's algorithm to compute the shortest paths that start at START?
"
216,216,216,32.0,0.2430000007152557,"hash, table, bucket, open, insert, close, key, function, slot, closed","['if', 'open', 'hash', 'table', 'key', 'insert', 'bucket', 'average', 'number', 'step', 'take', 'find', 'element', 'table']","If we have an open hash table with 10 keys inserted and 20 buckets, what is the average number of steps taken to find an element in the table?
"
217,217,217,23.0,0.15440000593662262,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['bad', 'case', 'time', 'complexity', 'insert', 'node', 'doubly', 'link', 'list']","What is the worst case time complexity of inserting a node in a doubly linked list?
"
218,218,218,2.0,0.2222999930381775,"tree, binary, node, avl, search, child, root, follow, height, leaf","['main', 'property', 'binary', 'search', 'tree']","A main property of a Binary search tree is
"
219,219,219,17.0,0.2576000094413757,"tree, binary, node, avl, search, child, root, follow, height, leaf","['use', 'follow', 'binary', 'search', 'tree', 'sort', 'alphabetically', 'order', 'store', 'car', 'name', 'order', 'increase', 'name', 'efficiency', 'avl', 'tree', 'however', 'want', 'insert', 'datatherefore', 'choose', 'carry', 'rotation', 'get', 'valid', 'avl', 'minimun', 'number', 'rotation', 'must', 'carry', 'produce', 'valid', 'avl', 'tree']","Honda uses the following binary search tree (sorted alphabetically) in order to store their car names: Amaze / \Accord Jazz / Grace / \ Brio InsightIn order to increase naming efficiency, they wish to convert this into an AVL tree, however do not want to re-insert all of the data.Therefore they choose to carry out 'rotations' to get a valid AVL tree.What is the minimun number of each rotation that must be carried out to produce a valid AVL tree?
"
220,220,220,2.0,0.09529999643564224,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['consider', 'list', 'if', 'begin', 'sort', 'list', 'order', 'low', 'high', 'value', 'use', 'selection', 'sort', 'order', 'element', 'first', 'swap']","Consider the list [420, 69, 80085, 21, 666, 1337].If you begin to sort the list so that it will be ordered from lowest to highest value using selection sort, what order will the elements be in after the first two swaps?
"
221,221,221,33.0,0.16339999437332153,"task, cost, provide, car, location, dealership, factory, row, quickest, alphabetically","['give', 'list', 'unordere', 'unbounded', 'integer', 'task', 'find', 'small', 'value', 'present', 'list', 'method', 'provide', 'low', 'average', 'time', 'complexity', 'complete', 'task']","Given a list of unordered, unbounded, integers, and the task of finding the smallest value present in the list, what method provides the lowest average time complexity to complete the task?
"
222,222,222,33.0,0.10679999738931656,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['consider', 'stable', 'algorithm']","What algorithm is considered a ""stable"" algorithm?
"
223,223,223,36.0,0.14790000021457672,"for, time, complexity, search, runtime, function, none, follow, correct, give","['bad', 'case', 'performance', 'for', 'search', 'element', 'chain', 'hash', 'table']","What is the worst case performance for searching an element in a chained hash table?
"
224,224,224,36.0,0.14560000598430636,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['imagine', 'scenario', 'need', 'sort', 'structure', 'contain', 'information', 'sort', 'would', 'best', 'case']","Imagine a scenario where we need to sort 10,000 structures containing some information. Which sorting algorithm would be the best in this case?
"
225,225,225,36.0,0.17900000512599945,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['consider', 'follow', 'graph', 'multiply', 'represent']","Consider the following graph and it's adjacency matrix M:When an adjacency matrix is multiplied by itself (i.e. M * M = ?) what does the resultant matrix represent?
"
226,226,226,0.0,0.19460000097751615,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'statement', 'avl', 'tree', 'binary', 'tree', 'true']","Which of the following statements about AVL trees and binary trees is true?
"
227,227,227,2.0,0.12600000202655792,"int, if, for, while, return, follow, code, mean, sum, new","['suppose', 'algorithm', 'mean', 'if', 'say', 'asymptotically', 'efficient']","Suppose we have two algorithms A and B.What does it mean if we say that A is asymptotically more efficient than B?
"
228,228,228,37.0,0.440200001001358,"remove, base, set, implementation, insert, may, allow, incorrect, entity, limited","['assume', 'runtime', 'complexity', 'insert', 'member', 'set', 'remove', 'member', 'also', 'set', 'base', 'link', 'list', 'datum', 'structure', 'multiset', 'set', 'allow', 'member', 'occur', 'would', 'runtime', 'complexity', 'insert', 'remove', 'member', 'multiset', 'base', 'set', 'implementation', 'define']","Assuming that the runtime complexity of inserting a member in a set ADT is O(n) and removing a member is also O(n) (Set is based on linked list data structure).A multiset is a set that allows members to occur more than once. What would the runtime complexities of inserting and removing members in a multiset be, based on the set implementation defined above?
"
229,229,229,37.0,0.08940000087022781,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'link', 'list', 'sort', 'alphabetical', 'order', 'for', 'first', 'letter', 'say', 'sort']","The following is a linked list:AvocadoCorianderTomatoLimeChiliit is sorted into alphabetical order for the first letter :AvocadoCorianderChiliLimeTomatoWhat can be said about the sorting algorithm?
"
230,230,230,47.0,0.15109999477863312,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['give', 'graph', 'adjacency', 'list', 'form', 'use', 'combination', 'datum', 'structure', 'algorithm', 'efficiently', 'find', 'short', 'distance', 'node']","Given a graph in adjacency list form, using what combination of data structure and algorithm can we efficiently find the shortest distance between two nodes.
"
231,231,231,2.0,0.13120000064373016,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sequentially', 'sort', 'for', 'decrease', 'value', 'final', 'sort', 'always', 'use', 'value', 'could', 'sorted', 'for', 'value', 'sort']","In shellsort, an array is sequentially h-sorted for decreasing values of h, with the final sort always using an h value of 1 (eg an array could be sorted for h values of 8,4,2,1).What sorting algorithm does shellsort use when h = 1?
"
232,232,232,36.0,0.2347999960184097,"choose, log, type, small, wrong, memory, requirement, meet, back, book","['classify', 'sort', 'algorithmit', 'follow', 'quality', 'stablecan', 'use', 'sort', 'link', 'listsrequire', 'slot', 'extra', 'memory']","Classify this sorting algorithmIt has the following qualities:StableCan be used to sort linked listsRequires n slots of extra memory
"
233,233,233,12.0,0.15309999883174896,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'algorithm', 'unstable']","Which of these sorting algorithms is unstable?
"
234,234,234,36.0,0.06279999762773514,"for, time, complexity, search, runtime, function, none, follow, correct, give","['calculate', 'for']","Calculate x for:
"
235,235,235,40.0,0.26570001244544983,"number, find, take, step, item, average, many, give, second, if","['calculate', 'average', 'number', 'step', 'take', 'find', 'insert', 'item', 'closed', 'hash', 'table', 'number', 'key', 'number', 'bucket']","Calculate the average number of steps taken to find/insert an item into this closed hash table:Number of keys= 3500 Number of Buckets=15750
"
236,236,236,40.0,0.1737000048160553,"value, balance, rotation, unbalanced, clockwise, become, dependant, occur, bst, insert","['take', 'balanced', 'bst', 'basisinsert', 'bst', 'forget', 'balance', 'insertion', 'if', 'necessarywe', 'print', 'tree', 'order', 'way', 'outcome']","Take this Balanced BST as a basis.Insert 30 and 31 in this BST, don't forget to balance it after each insertion if necessary.We print the tree in an In-order traversal way, what is the outcome ?
"
237,237,237,25.0,0.20640000700950625,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['singly', 'link', 'list', 'without', 'tail', 'reference', 'time', 'complexity', 'add', 'element', 'end', 'list']","In a singly linked list without a tail reference, what is the time complexity of adding an element to the end of the list?
"
238,238,238,25.0,0.16840000450611115,"hash, table, bucket, open, insert, close, key, function, slot, closed","['open', 'hash', 'table', 'type', 'datum', 'bucket', 'point']","In an Open Hash Table, what type of data structure does each array bucket point to?
"
239,239,239,2.0,0.0940999984741211,"number, find, take, step, item, average, many, give, second, if","['dijkstra', 'algorithm', 'number', 'vertice', 'number', 'edge']","What is the time complexity of Dijkstra's Algorithm? (v is the number of vertices, e is the number of edges)
"
240,240,240,7.0,0.22269999980926514,"include, answer, expect, consist, lane, skiplist, cubic, program, sqrt, information","['list', 'consist', 'item', 'many', 'lane', 'present', 'answer', 'include', 'lane']","A skip list consists of 64 items. How many lanes are present? (Answer should include lane 0)
"
241,241,241,7.0,0.01669999957084656,"vertex, edge, graph, change, show, matrix, also, if, formula, name",[],"What is 2^35 mod 7?
"
242,242,242,45.0,0.10369999706745148,"secure, deprecate, protocol, ssl, security, transfer, socket, hypertext, layer, transport","['follow', 'protocol', 'deprecate']","Which of the following protocols are now deprecated?
"
243,243,243,38.0,0.4255999922752381,"datum, structure, data, space, implement, possible, memory, store, work, for","['developer', 'work', 'software', 'store', 'email', 'associate', 'digit', 'number', 'software', 'able', 'find', 'email', 'associate', 'give', 'quickly', 'data', 'structure', 'appropriate', 'store']","A developer is working on a software that stores emails and the associated username which is a 6 digit number. The software has to be able to find the email associated with a given username quickly. Which data structure is most appropriate to store these?
"
244,244,244,38.0,0.06360000371932982,"value, balance, rotation, unbalanced, clockwise, become, dependant, occur, bst, insert","['compute', 'value']","Compute the value of x:5^25=x mod(13)
"
245,245,245,30.0,0.1331000030040741,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['consider', 'follow', 'function', 'nselect', 'true', 'statement']","Consider the following functions:f(n) = 5n^2 , g(n) = 10n^2 and h(n) = 10^nSelect the true statement below:
"
246,246,246,23.0,0.3231000006198883,"hash, table, bucket, open, insert, close, key, function, slot, closed","['close', 'hashtable', 'linear_probing', 'hash', 'function', 'form', 'slot', 'if', 'insert', 'element', 'order', 'end']","Use a standard closed hashtable with linear probing and the hash function has the form h(x) = x % 6 with slots 0, ... , 5. If you insert the elements 28, 43, 12, 7, 37,13 in that order, what does the hashtable look like at the end?
"
247,247,247,23.0,0.1055999994277954,"hash, table, bucket, open, insert, close, key, function, slot, closed","['follow', 'valid', 'advice', 'hash', 'password']","Which of the following is valid advice when hashing passwords.
"
248,248,248,23.0,0.2029999941587448,"for, time, complexity, search, runtime, function, none, follow, correct, give","['average', 'time', 'complexity', 'for', 'search', 'skip', 'list']","What is the average time complexity for searching in a Skip List?
"
249,249,249,23.0,0.3930999934673309,"hash, table, bucket, open, insert, close, key, function, slot, closed","['closed', 'hash', 'table', 'linear_probing', 'use', 'function', 'hash', 'function', 'slot', 'element', 'insert', 'hash', 'table', 'order', 'result', 'hash', 'table']","A closed Hash-table with linear probing uses the function h(x) = x % 5 as a hash function and has slots 0,1,2,3,4.When the elements, (13, 4, 19, 5, 27), are inserted into the Hash-table in order, what is the resulting Hash-table?
"
250,250,250,23.0,0.01669999957084656,"vertex, edge, graph, change, show, matrix, also, if, formula, name",[],"What is the shortest path from u to z?
"
251,251,251,40.0,0.12849999964237213,"number, find, take, step, item, average, many, give, second, if","['say', 'need', 'create', 'close', 'hash', 'table', 'store', 'item', 'find', 'item', 'roughly', 'stepshow', 'many', 'bucket', 'need']","Say you need to create a Closed Hash Table that can store up to 5000 items and can find an item in roughly 2 steps.How many buckets do you need ?
"
252,252,252,36.0,0.2847000062465668,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'good', 'fit', 'description', 'stableb', 'case', 'average', 'case', 'log', 'bad', 'case', 'log']","Which sorting algorithm best fits this description:StableBest case : (n log n)Average case: (n log n)Worst case: (n log n)
"
253,253,253,36.0,0.30070000886917114,"int, if, for, while, return, follow, code, mean, sum, new","['runtime', 'complexity', 'for', 'int', 'test', 'int', 'for', 'for', 'int', 'test', 'for', 'int', 'test']","What is the runtime complexity for this code?for (int i=1; i<n; i++) System.out.println(“test”);int y = n;for (int j=1; j<n; j++) for (int k=1; k<y; k++) System.out.println(“test2”); y = y/2; for(int x = 10; x > 0, x = x-1) System.out.println(""test3"");
"
254,254,254,35.0,0.10209999978542328,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['follow', 'statement']","Which of the following statement is FALSE.
"
255,255,255,23.0,0.11969999969005585,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'statement', 'sort', 'algorithm', 'false']","Which of the following statements about sorting algorithms is false?
"
256,256,256,36.0,0.1429000049829483,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['hybrid', 'sort', 'algorithm']","What is a hybrid sorting algorithm?
"
257,257,257,36.0,0.246399998664856,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['difference', 'singly', 'link', 'list', 'doubly', 'link', 'list']","What is the difference between a singly linked list and a doubly linked list?
"
258,258,258,25.0,0.15800000727176666,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'list', 'sort', 'first', 'letter', 'sort', 'produce', 'follow', 'output', 'property', 'guarantee', 'true', 'sort', 'algorithm', 'use']","The following list is being sorted by first letter only:hondahalloumibeeThe sorting algorithm produces the following output:beehalloumihondaWhat property is guaranteed to be true about the sorting algorithm used?
"
259,259,259,36.0,0.18060000240802765,"tree, binary, node, avl, search, child, root, follow, height, leaf","['show', 'binary', 'search', 'tree', 'represent', 'value', 'node', 'tree', 'if', 'value', 'insert', 'order', 'would', 'value']","Below shows a binary search tree where V represents the values of each node in the tree. If the values had been inserted in the order 11, 4, 16, 2, 14, 19, 9, 3, 17, 12, 1, 15, 27, 10, 7 what would the value of X (in diagram) be? V V V V V V VV V V V X V V V
"
260,260,260,2.0,0.06449999660253525,"operation, great, remain, put, var, ask, power, much, relation, box",['relation'],"With relation to graphs, what isdepth-first traversal?
"
261,261,261,0.0,0.1861000061035156,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['consider', 'follow', 'binary', 'tree', 'traversal', 'traversal', 'node', 'print', 'late']","Consider the following binary tree 17 / \ 14 43 / \ / \ 7 16 34 68 / \ 1 3By which traversal/traversals will the node 14 be printed out the latest?
"
262,262,262,52.0,0.15150000154972074,"high, iteration, note, randomly, look_like, condition, often, unanswerable, answerable, deal","['approach', 'deal', 'collision', 'hash', 'table', 'know', 'aslinear', 'probing', 'work']","One of the approaches to dealing with collisions in a hash table is known aslinear probing. How does this work?
"
263,263,263,23.0,0.12620000541210175,"must, least, additional, generic, smallest, think, underestimate, satisfied, prove, stand","['order', 'prove', 'function', 'follow', 'condition', 'must', 'satisfied']","In order to prove function f(n) is ?(g(n)), which of the following conditions must be satisfied?
"
264,264,264,29.0,0.13230000436306,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['give', 'tree', 'apply', 'follow', 'operation', 'give', 'order', 'remove', 'balance', 'node', 'balance', 'factor', 'apply', 'traversalwhich', 'output', 'correct']","Given the tree: 5 / \ 3 10 / \ / \ 2 4 7 11 / / \ \ 1 6 9 12Apply the following operations in the given order:1.Remove 5;2.Re-balance, so that each node has balance factor in {-1,0,1}3.Apply post-traversalWhich output is correct?
"
265,265,265,47.0,0.10649999976158142,"read, ordermanner, apre, office, house, route, begin, horse, minimise, recursive","['if', 'follow', 'binary', 'tree', 'traverse', 'apre', 'ordermanner', 'order', 'would', 'letter', 'read']","If the following binary tree was to be traversed in apre-ordermanner, in which order would the letters be read?
"
266,266,266,23.0,0.15320000052452087,"hash, table, bucket, open, insert, close, key, function, slot, closed","['open', 'hash', 'table']","An open hash table is:
"
267,267,267,25.0,0.2379000037908554,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['apply', 'pre', 'order', 'traversal', 'follow', 'tree', 'output']","After applying pre-order traversal on the following tree: 50 / \ 25 63 / \ / 8 31 5 / \ / / 3 10 20 1What will be the output?
"
268,268,268,52.0,0.11400000005960464,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['produce', 'apply', 'sort', 'follow', 'sort', 'array']","What will be produced after applying 3-sorting followed by 2-sorting on the array10,8,50,6,3,0,2,15?
"
269,269,269,8.0,0.2425999939441681,"compute, sign, usual, receive, secret, public, check, nfor, connection, multipli","['receive', 'message', 'use', 'usual', 'method', 'public', 'secret', 'sign', 'compute', 'send', 'sign']","Alice receives a message, m, from Bob using the usual RSA encryption method (N and t public, s secret). She signs it by computing h(m) and then sending c = h(m)s(mod N) to Bob. How does Bob verify that Alice signed m?
"
270,270,270,23.0,0.3382000029087067,"hash, table, bucket, open, insert, close, key, function, slot, closed","['standard', 'closed', 'hash', 'table', 'linear_probing', 'function', 'wish', 'put', 'follow', 'element', 'exact', 'order', 'table', 'afterwards']","I have a standard closed hash table with linear probing, with the function h(x) = x % 7. I wish to put the following elements: 10, 3, 11, 20, 21, 22, 8 (in that exact order). What does the table look like afterwards?
"
271,271,271,23.0,0.08250000327825546,"tree, binary, node, avl, search, child, root, follow, height, leaf","['for', 'bst', 'result', 'perform', 'traversal', 'tree']","For the below BST, what is the result of performing a postorder traversal on the tree?
"
272,272,272,2.0,0.06369999796152115,"high, iteration, note, randomly, look_like, condition, often, unanswerable, answerable, deal","['asymptotic', 'high']","Which Asymptotic Complexity has the highest growth rate:
"
273,273,273,18.0,0.31360000371932983,"look, like, system, abstraction, talk, unnecessary, distraction, manner, hide, abstract","['large', 'company', 'look', 'store', 'employee', 'would', 'number', 'open', 'hash', 'table', 'currently', 'employee', 'however', 'would', 'like', 'future', 'proof', 'system', 'design', 'system', 'for', 'capacity', 'would', 'like', 'perform', 'operation', 'certain', 'id', 'average', 'number', 'step', 'many', 'bucket', 'would', 'hash', 'table', 'require', 'fit', 'specification']","A large company is looking to store their employee ID numbers in an open hash table. They currently have 20,000 employees, however they would like to future proof their system and design their system for a capacity of 30,000. They would like to perform operations on certain IDs with an average number of steps at 4. How many buckets would their hash table require to fit these specifications?
"
274,274,274,18.0,0.1881999969482422,"tree, binary, node, avl, search, child, root, follow, height, leaf","['binary', 'tree', 'level', 'full', 'exceptfor', 'last', 'level', 'half', 'full', 'manynode']","A binary tree has six levels, and all are full exceptfor the last level, which is only half full. How manynodes does it have?
"
275,275,275,2.0,0.10109999775886536,"read, ordermanner, apre, office, house, route, begin, horse, minimise, recursive","['task', 'find', 'house', 'begin', 'route', 'post', 'office', 'give', 'follow', 'information', 'distance', 'node']","You are a Postman and have been tasked with finding the shortest path to house D.You begin your route at the Post office (A).You have been given the following information:Distances between nodes are:A->D=6A->B=10A->C = 4C->D=1C->B=9D->B=3
"
276,276,276,52.0,0.21889999508857727,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['output', 'post', 'order', 'follow', 'tree']","What is the output of an Post-Order Traversal of the following tree
"
277,277,277,30.0,0.23520000278949735,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['represent', 'big', 'notation', 'use', 'big', 'rule', 'week', 'constantf']","Where O represents big O notation , using Big O rules from week2)b):What is f(n)*h(n)=O(?) ?Where:c= constantf(n) = O(c*m(n))h(n) = q(n)+p(n)q(n)=O(t(n))t(n)=O(p(n))
"
278,278,278,36.0,0.2766000032424927,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'large', 'good', 'time', 'complexity', 'ie', 'large', 'good', 'case']","Which of the following sorting algorithms has the largest best time complexity, i.e. the largest O(n) in the best case:
"
279,279,279,36.0,0.18619999289512634,"task, cost, provide, car, location, dealership, factory, row, quickest, alphabetically","['work', 'for', 'car', 'manufacture', 'company', 'registration', 'admin', 'inputted', 'datum', 'list', 'store', 'datum', 'alphabetically', 'want', 'sort', 'sort', 'would', 'quickest', 'give', 'datum', 'currently', 'randomly', 'sort']","You are working for a car manufacturing company (Honda) and you have a list of 10,000 car registration numbers.The admins who inputted this data into a list did not store the data alphabetically, but you want to sort them.Which sorting algorithm would be the quickest to use given the data is currently randomly sorted?
"
280,280,280,36.0,0.01669999957084656,"vertex, edge, graph, change, show, matrix, also, if, formula, name",[],"What is ""time resolution""?
"
281,281,281,36.0,0.17399999499320984,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'algorithm', 'would', 'appropriate', 'for', 'datum', 'nearly', 'fully', 'sort']","Which of these sorting algorithms would be most appropriate for data which is nearly fully sorted?
"
282,282,282,36.0,0.14309999346733093,"hash, table, bucket, open, insert, close, key, function, slot, closed","['give', 'hash', 'function', 'for', 'follow', 'input', 'statement', 'true', 'for', 'input', 'use', 'open', 'hashing']","Given the hash function f(x) = x % 10, for the following input (1234,60,1264,3456,638,3666,349,201,470,1000,84,3), which statement is true for this input using open hashing:
"
283,283,283,38.0,0.3102000057697296,"datum, structure, data, space, implement, possible, memory, store, work, for","['implement', 'datum', 'structure', 'insert', 'new', 'item', 'front', 'datum', 'structure', 'do', 'simple', 'step', 'try', 'access', 'th', 'item', 'must', 'pass', 'other', 'first', 'if', 'want', 'remove', 'item', 'remove', 'item', 'step', 'find', 'previous', 'pointer', 'data', 'structure', 'implement']","You are implementing a data structure. When you insert a new items at the front of data structure, it can be done in just a few simple steps. When you try to access the 1500th item, you must pass through 1499 others first. If you want to remove an item, you can remove any item in just a few steps once you have found it. It does not have a previous pointer. What data structure have you implemented?
"
284,284,284,23.0,0.35260000824928284,"hash, table, bucket, open, insert, close, key, function, slot, closed","['draw', 'closed', 'hash', 'table', 'linear_probing', 'size', 'hash', 'function', 'follow', 'element', 'insert', 'hash', 'table', 'correct', 'order', 'element', 'hash', 'table']","Draw a closed hash table with linear probing of size 7. The hash function is h(x) = x % 7.The following elements are inserted into the hash table: 2, 7, 13, 19, 21, 25, 29What is the correct order of the elements now in the hash table?
"
285,285,285,23.0,0.2813000082969665,"sorted, point, example, final, say, real, divide, word, since, measure","['need', 'search', 'keep', 'divide', 'search', 'area', 'half', 'sorted', 'data', 'arrive', 'word', 'however', 'twist', 'algorithm', 'clever', 'if', 'for', 'example', 'word', 'start', 'start', 'search', 'towards', 'end', 'step', 'take', 'average', 'follow', 'algorithm']","Billy Bob needs to implement a searching algorithm. His algorithm keeps dividing the search area in half (on sorted data) until it arrives at his word. However, there's a twist! The algorithm is very clever, and, if for example the word starts with 'z', it will start searching towards the end. The steps taken by this algorithm is log_base2(log_base2(n)) on average. Which of the following algorithms did Mr. Bob implement?
"
286,286,286,29.0,0.3934000134468079,"for, time, complexity, search, runtime, function, none, follow, correct, give","['give', 'follow', 'for', 'for', 'int', 'love', 'dsa', 'follow', 'follow', 'describe', 'correct', 'time', 'complexity', 'bound']","Given the following algorithm:for(int i = 0; i < n; i++) for(int j = 0; j < n; j++) System.out.println(""I love DSA!!!"");Which of the following following describes the correct time complexity bounds?
"
287,287,287,29.0,0.10930000245571136,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['task', 'choose', 'sort', 'take', 'time', 'sort', 'list', 'number', 'fit', 'requirement', 'list']","You are tasked to chose a sorting algorithm which will take the same time to sort any two lists with the same number of elements.Which one fits the requirements from the list below?
"
288,288,288,52.0,0.29030001163482666,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['follow', 'pseudocode', 'show', 'function', 'traverse', 'recursively', 'perform', 'tree', 'traversal', 'tree', 'value', 'name', 'node', 'if', 'node', 'null', 'return', 'traverse', 'nodeleft', 'traverse', 'noderight', 'print']","The following pseudocode shows a function ""traverse"" that recursively performs a tree traversal algorithm to print the tree values. What is the name of the traversal?traverse(node) if (node == null) return traverse(node.left) traverse(node.right) print(node.value)
"
289,289,289,52.0,0.2515999972820282,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['good', 'average', 'bad', 'time', 'complexity', 'shell']","What is the best, average and worst time complexity of shell sort?
"
290,290,290,36.0,0.27810001373291016,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'average', 'time', 'complexity', 'nlogn']","Which of the following sorting algorithms does not have an average time complexity of nlogn?
"
291,291,291,36.0,0.3680999875068665,"hash, table, bucket, open, insert, close, key, function, slot, closed","['follow', 'statementswhich', 'better', 'explain', 'difference', 'open', 'hash', 'table', 'close', 'hash', 'table']","Between the following statements,which better explains the difference between an Open Hash Table and a Close Hash Table?
"
292,292,292,23.0,0.2721000015735626,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'average', 'time', 'complexity', 'oft', 'nlog', 'space']","Which of the following sorting algorithms has an average time complexity ofT(n)=nlog(n) and space complexityT(n)=n?
"
293,293,293,36.0,0.2062000036239624,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'tree', 'legit', 'binary', 'search', 'tree', 'contain', 'number', 'represent', 'pre', 'order', 'traversal']","Which of the following trees is a legit binary search tree containing the numbers (2,7,9,12,18,23,26,37,43,75)? Represented in PRE-ORDER traversal!
"
294,294,294,2.0,0.15559999644756314,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['give', 'graph', 'many', 'path', 'length', 'less', 'vertex']","Given this graph:How many paths of length 2 or less are there from vertex C to F?
"
295,295,295,23.0,0.3741999864578247,"hash, table, bucket, open, insert, close, key, function, slot, closed","['consider', 'hash', 'table', 'size', 'start', 'index', 'hash', 'function', 'assume', 'hash', 'table', 'initially', 'empty', 'follow', 'content', 'table', 'sequence', 'insert', 'table', 'use', 'closed', 'hashingnote', 'denote', 'empty', 'location', 'table']","Consider a hash table of size seven, with starting index zero, and a hash function (3x + 4)mod7.Assuming the hash table is initially empty, which of the following is the contents of the table when the sequence 1, 3, 8, 10 is inserted into the table using closed hashing?Note that ‘_’ denotes an empty location in the table.
"
296,296,296,23.0,0.09380000084638596,"tree, binary, node, avl, search, child, root, follow, height, leaf","['balance', 'factor', 'use', 'for', 'avl', 'tree']","What is a Balance Factor used for in an AVL Tree?
"
297,297,297,35.0,0.3314999938011169,"int, if, for, while, return, follow, code, mean, sum, new","['follow', 'code', 'for', 'int', 'for', 'int', 'for', 'for', 'int']","What is the runtime of the following code ?for (int i=1; i<n; i=i*2) System.out.println(“hello”);for (int j=1; j<m; j++) for (int k=1; k<10; k++) for (int l=1; l<j; j++) System.out.println(“CM20254”);
"
298,298,298,35.0,0.15289999544620514,"tree, binary, node, avl, search, child, root, follow, height, leaf","['tree', 'avl', 'balanced']","Which of these trees is NOT AVL balanced?
"
299,299,299,2.0,0.08640000224113464,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['follow', 'graph', 'representation']","Which of the following is a graph representation?
"
300,300,300,47.0,0.11580000072717668,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['follow', 'pre', 'image_resistance']","Which of the following is pre-image resistance?
"
301,301,301,13.0,0.13750000298023224,"number, find, take, step, item, average, many, give, second, if","['take', 'follow', 'list', 'number', 'if', 'apply', 'sort', 'list', 'many', 'swap', 'take', 'place', 'reach', 'sorted', 'list']","Take the following list of numbers:13, 214, 24, 63, 46, 153If you were to apply a shell sort to this list, where h = 4, 2, 1, how many swaps take place to reach the sorted list:13, 24, 46, 63, 153, 214
"
302,302,302,41.0,0.17919999361038208,"measurement, precision, accuracy, difference, image, significant, definition, regard, accuracylow, accuracyhigh","['accuracy', 'precision', 'important', 'factor', 'consider', 'take', 'datum', 'correct', 'definition', 'accuracy', 'precision']","Accuracy and precision are two important factors to consider when taking data measurements.What are the correct definitions of accuracy and precision?
"
303,303,303,41.0,0.18970000743865967,"hash, table, bucket, open, insert, close, key, function, slot, closed","['calculate', 'load', 'hash', 'table']","What is the formula to calculate the load on a hash table?
"
304,304,304,23.0,0.13030000030994415,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['answer', 'always', 'true', 'for', 'link', 'list']","Which answer is always TRUE for Linked Lists?
"
305,305,305,25.0,0.12999999523162842,"number, find, take, step, item, average, many, give, second, if","['management', 'ask', 'change', 'close', 'open', 'currently', 'change', 'average', 'number', 'step', 'find', 'bucket', 'change', 'close', 'positive']","Management has asked you to change a closed hashtable to an open hashtable. It currently has a load factor of 0.75.What is the change in the average number of steps to find a bucket after you change the hashtable?Answer is: open av. - closed av, can be positive or negative
"
306,306,306,38.0,0.13179999589920044,"datum, structure, data, space, implement, possible, memory, store, work, for","['sort', 'algorithm', 'require', 'additional', 'work', 'space']","Which of these sorting algorithms requires additional working space?
"
307,307,307,36.0,0.1525000035762787,"for, time, complexity, search, runtime, function, none, follow, correct, give","['asymptotic', 'time', 'complexity']","An algorithm has runtime, what is the asymptotic time complexity of this algorithm?
"
308,308,308,29.0,0.20659999549388885,"for, time, complexity, search, runtime, function, none, follow, correct, give","['choose', 'correct', 'answer', 'complete', 'definition', 'amortise', 'runtime', 'analysis', 'runtime', 'for', 'datum', 'structure', 'operation', 'use', 'many', 'time', 'start', 'empty', 'datum', 'structure']","Choose the correct answer below that completes the definition of Amortised runtime analysis._______ runtime for a Data Structure operation when using it many times starting from an empty Data Structure.
"
309,309,309,29.0,0.20180000364780426,"maximum, problem, random, integer, solve, fill, interface, product, similar, anywhere","['type', 'describe', 'use', 'solve', 'particular', 'problem', 'follow', 'option', 'would', 'incorrect', 'choice', 'fill', 'blank']","An abstract data type can be described as ""a coordinated group of ____, ____, and ____ that is used to solve a particular problem"". Which of the following options would be an incorrect choice to fill one of the blanks?
"
310,310,310,43.0,0.0966000035405159,"low, require, many, swap, perform, static, hard, partition, growth_rate, sortbubble","['order', 'complexitie', 'low', 'high', 'growth_rate']","Order the complexities from lowest to highest growth rate:a = log(n)b = n log (n)c = (log(n))^2d = sqrt(n)e = 2^nf = n^3g = n
"
311,311,311,2.0,0.14820000529289246,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'avl', 'tree']","Which of the following is an AVL Tree:
"
312,312,312,2.0,0.18729999661445615,"tree, binary, node, avl, search, child, root, follow, height, leaf","['insert', 'follow', 'number', 'avl', 'tree', 'order', 'tree']","Insert the following numbers lexicographically in an AVL tree: {5,20,8,9,3,11,4,65,85,35,15,1}.What is the in-order transversal of the tree?
"
313,313,313,2.0,0.09910000115633012,"int, if, for, while, return, follow, code, mean, sum, new","['follow', 'code']","What is the time complexity of the following code:
"
314,314,314,2.0,0.09380000084638596,"tree, binary, node, avl, search, child, root, follow, height, leaf","['balance', 'factor', 'avl', 'tree', 'use', 'check']","What is a balance factor in an AVL tree used to check?
"
315,315,315,2.0,0.4277999997138977,"tree, binary, node, avl, search, child, root, follow, height, leaf","['consider', 'bst', 'complete', 'binary', 'tree', 'remove', 'root', 'correctly', 'describe', 'lecture', 'rebalance', 'tree', 'complete', 'binary', 'tree', 'accord', 'definition', 'follow', 'statement', 'describe', 'unique', 'result', 'definition', 'complete', 'binary', 'tree', 'binary', 'tree', 'level', 'except', 'possibly', 'last', 'full', 'node', 'low', 'level', 'leave', 'possible']","Consider the below BST, which is not a complete binary tree. Remove the root node 3 correctly, as described in lectures, then rebalance the tree as a complete binary tree according to the below definition. Which of the following statements describes the unique resulting tree?The definition of a complete binary tree is to be a binary tree in which every level, except possibly the last, is full, and all nodes on the lowest level are as left as possible.
"
316,316,316,2.0,0.13040000200271604,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['average', 'case', 'bad', 'case', 'runtime', 'search', 'for', 'value', 'binary', 'search', 'tree', 'value']","What is the average case and worst case runtime when searching for a value in a binary search tree with N values?
"
317,317,317,36.0,0.09009999781847,"comparison, minimum, span, decision, edgesis, among, stooge, parallelize, reach, shape","['log', 'minimum', 'number', 'comparison', 'need', 'sort', 'item']","log212! = 28.8355. What is the minimum number of comparisons needed to sort 12 items?
"
318,318,318,40.0,0.2581999897956848,"number, find, take, step, item, average, many, give, second, if","['give', 'particular', 'for', 'closed', 'hash', 'table', 'linear_probe', 'average', 'many', 'step', 'take', 'find', 'item']","Given a particular load factor L for a closed hash table with linear probing, on average, how many steps does it take to find an item?
"
319,319,319,40.0,0.17890000343322754,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['let', 'real', 'value', 'function', 'define', 'positive', 'integersif', 'exist', 'positive', 'number', 'for', 'bwhich', 'follow', 'true']","Let f (n) and g(n) be two real-valued functions defined on the positive integers.If there exist positive numbers b and B, such that |f(n)| = B|g(n)| for all n = b,which of the following is true?
"
320,320,320,17.0,0.3476000130176544,"right, leave, node, process, sub, current, subtree, describe, differ, left","['follow', 'text', 'describe', 'type', 'tree', 'traversal', 'process', 'current', 'node', 'process', 'node', 'leave', 'sub', 'tree', 'process', 'node', 'sub', 'treewhich', 'follow', 'traversal', 'describe']","The following text describes a type of tree traversal: - Process current node - Process nodes in the left sub-tree - Process nodes in the right sub-treeWhich of the following traversals does the above describe?
"
321,321,321,52.0,0.1762000024318695,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['output', 'pre', 'order', 'avl', 'tree', 'start', 'empty', 'follow', 'element', 'insert', 'order']","What is the output of the pre-order traversal of the AVL tree which started empty and had the following elements inserted in this order:6, 43, 11, 23, 9, 15
"
322,322,322,0.0,0.2327000051736832,"vertex, edge, graph, change, show, matrix, also, if, formula, name","['graph', 'edge', 'go', 'vertex', 'specific', 'direction', 'know']","A graph in which all edges go from one vertex to another in a specific direction is known as what?
"
323,323,323,0.0,0.06360000371932982,"datum, structure, data, space, implement, possible, memory, store, work, for","['name', 'structure']","Finish the name of this module:Data Structures and _____
"
324,324,324,18.0,0.06360000371932982,"datum, structure, data, space, implement, possible, memory, store, work, for","['name', 'structure']","Finish the name of this module:Data Structures and _____
"
325,325,325,18.0,0.15139999985694885,"hash, table, bucket, open, insert, close, key, function, slot, closed","['hash', 'table', 'slot', 'many', 'insertion', 'likely', 'ie', 'probability', 'great', 'collision']","In a hash table with 600 slots, after how many insertions is there likely to be (i.e. with probability 0.5 or greater) a collision?
"
326,326,326,23.0,0.13079999387264252,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['within', 'singly', 'link', 'list', 'value', 'store', 'node']","Within a singly linked list, what are the values stored at each node?
"
327,327,327,52.0,0.29580000042915344,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['software', 'developer', 'create', 'node', 'tree', 'use', 'follow', 'tree', 'print', 'traversal', 'order', 'use', 'software', 'developer']","A software developer created an algorithm to print all the nodes in a tree. This algorithm is used on the following tree: M / \ B P / \ / \ A D N ZIf the algorithm prints A B D M N P Z, what is the traversal order used by the software developer?
"
328,328,328,52.0,0.2913999855518341,"tree, binary, node, avl, search, child, root, follow, height, leaf","['insert', 'order', 'empty', 'avl', 'tree', 'leaf', 'node', 'rebalance', 'satisfy', 'avl', 'condition']","Insert 28, 29, 16, 9, 34, 8, 20 in order into an empty AVL Tree. What are the leaf nodes after rebalancing to satisfy the AVL Condition?
"
329,329,329,2.0,0.09059999883174896,"comparison, minimum, span, decision, edgesis, among, stooge, parallelize, reach, shape","['minimum', 'number', 'comparison', 'require', 'sort', 'permutation', 'integer']","What is the minimum number of comparisons required to sort any permutation of 7 integers?
"
330,330,330,52.0,0.17649999260902405,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['tree', 'traversal', 'output', 'letter', 'alphabetical', 'order']","Which tree traversal outputs the letters in alphabetical order?
"
331,331,331,52.0,0.2159000039100647,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['difference', 'singly', 'link', 'list', 'skip', 'list']","What is the difference between a singly linked list and a skip list?
"
332,332,332,25.0,0.2845000028610229,"need, top, last, much, tell, company, operate, copy, push, stock","['start', 'work', 'long', 'standing', 'technology', 'company', 'first', 'project', 'update', 'old', 'legacy', 'datum', 'structure', 'give', 'close', 'hash', 'tablewith', 'linear_probe', 'contain', 'identification', 'number', 'longer', 'use', 'go', 'archive', 'due', 'sensitive', 'natureyou', 'task', 'copy', 'datum', 'array', 'for', 'archive', 'first', 'need', 'close', 'hash', 'table', 'key', 'store', 'tell', 'item', 'access', 'step', 'average']","You've just started work at a long standing Technology company and your first project is to update old legacy data structures. You are given a closed hash tablewith linear probing containing identification numbers that is no longer being used, but is going to be archived due to its sensitive nature.You are tasked to copy this data into an array for archiving, but first the Load factor needs to be calculated.The closed hash table has 10,000 keys stored in it and you are told any item can be accessed in 3 steps on average. What is the Load Factor?
"
333,333,333,23.0,0.3172000050544739,"hash, table, bucket, open, insert, close, key, function, slot, closed","['wish', 'open', 'hashing', 'array', 'slot', 'contain', 'pointer', 'link', 'list', 'hash', 'function', 'form', 'hash', 'table', 'slot', 'if', 'insert', 'element', 'order', 'minimum', 'list', 'length', 'end']","You wish to use open hashing (where each array slot contains a pointer to a linked list). The hash function has the form h(x) = x % 6 and the hash table has slots 0, ... , 5. If you insert the elements 5, 6, 7, 9, 15, 21, 22, 61 in that order, what is the minimum list length at the end?
"
334,334,334,23.0,0.17299999296665192,"for, time, complexity, search, runtime, function, none, follow, correct, give","['for', 'input', 'size', 'asymptotic', 'time', 'complexity']","An algorithm has runtime T(n) = 0.00149n14+ 100n2+ 48nlog(n) for input of size n. What is the asymptotic time complexity of this algorithm?
"
335,335,335,52.0,0.19059999287128448,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['would', 'output', 'follow', 'binary', 'search', 'tree', 'use', 'pre', 'order', 'traversal']","What would the output of the following binary search tree using pre-order traversal look like?
"
336,336,336,52.0,0.13680000603199005,"tree, binary, node, avl, search, child, root, follow, height, leaf","['context', 'avl', 'tree', 'avl', 'stand', 'for']","In the context of an AVL Tree, AVL stands for:
"
337,337,337,24.0,0.1881999969482422,"datum, structure, data, space, implement, possible, memory, store, work, for","['imagine', 'software', 'engineer', 'boss', 'ask', 'implement', 'probabilistic', 'skip', 'list', 'node', 'add', 'lane', 'decrease', 'factor', 'for', 'lane', 'number', 'increase', 'however', 'due', 'lack', 'server', 'space', 'say', 'may', 'size', 'great', 'define', 'set', 'pointer', 'for', 'node', 'roughly', 'many', 'item', 'skip', 'list', 'hold', 'longer', 'consider', 'binary', 'search', 'search', 'for', 'node']","Imagine you are a software engineer a Honda. Your boss asks you to implement a probabilistic skip list in Java with the probability of a new node being added to each lane decreasing by a factor of 0.5 for each lane as the lane number increases. However, due to lack of server space, she says that you may not use any arrays of size greater than 10 when defining the set of pointers for each node. Roughly how many items can this skip list hold before it can no longer be considered binary search when searching for nodes?
"
338,338,338,38.0,0.1429000049829483,"hash, table, bucket, open, insert, close, key, function, slot, closed","['disadvantage', 'use', 'hash', 'table', 'small', 'load', 'say', 'for']","What is one disadvantage of using a Hash Table with a small load L?(say, for L < 0.2)
"
339,339,339,23.0,0.10440000146627426,"tree, binary, node, avl, search, child, root, follow, height, leaf","['select', 'correct', 'difference', 'tree', 'tree']","Select the correct differences between a B-Tree and a B+ Tree?
"
340,340,340,2.0,0.22030000388622284,"for, time, complexity, search, runtime, function, none, follow, correct, give","['consider', 'average', 'time', 'complexity', 'for', 'search', 'algorithmselect', 'true', 'statement']","Consider average time complexity for each search algorithm.Select the only true statement.
"
341,341,341,25.0,0.1961999982595444,"number, find, take, step, item, average, many, give, second, if","['suppose', 'close', 'hash', 'table', 'load', 'take', 'average', 'step', 'find', 'item', 'table', 'value', 'sigfig']","Suppose I have a Close Hash Table with load L, and it takes me on average 1.15 steps to find an item in the table. What is the value of L (to 2 sig.fig.) ?
"
342,342,342,40.0,0.09160000085830687,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'statement', 'false']","Which of the following statements is False?
"
343,343,343,23.0,0.21619999408721924,"node, next, previous, constant, object, pointerthe, follow, private, nodenext, head","['consider', 'follow', 'doubly', 'link', 'list', 'head', 'tailwhere', 'node', 'object', 'integer', 'value', 'prev', 'head', 'next', 'object', 'type', 'similar', 'for', 'remain', 'list', 'perform', 'follow', 'operation', 'value', 'prev', 'next', 'onenext', 'temp', 'threeprev', 'temp']","Consider the following doubly linked list:HEAD - one - two - three - four - five - TAILwhere one is a Node object with integer value 1, prev = HEAD, next = two. This object type is similar for the remaining nodes.What will the list be after performing the following operations:Node temp = New Node(value=7, prev=one, next=three)one.next = temp;three.prev = temp;
"
344,344,344,10.0,0.17180000245571134,"int, if, for, while, return, follow, code, mean, sum, new","['runtime', 'for', 'follow', 'codefor', 'int', 'data', 'structure', 'for', 'for', 'int', 'algorithm']","What is the runtime for the following code?for (int i = 1; i < n; i=i*2){ System.out.println(""Data Structures "");}for (int j = 1; j < n; j++){ for int k = 1; k < 5; k++){ System.out.println(""and Algorithms""); }}
"
345,345,345,43.0,0.2879000008106232,"maximum, problem, random, integer, solve, fill, interface, product, similar, anywhere","['application', 'for', 'supermarket', 'checkout', 'need', 'store', 'product', 'serial', 'number', 'application', 'must', 'able', 'quickly', 'find', 'product', 'link', 'serial', 'number', 'scan', 'cashiershould', 'serial', 'number', 'product', 'change', 'application', 'also', 'able', 'quickly', 'change', 'serial', 'number', 'associate', 'relevant', 'product', 'follow', 'datum', 'structure', 'would', 'appropriate', 'store', 'product', 'serial', 'number', 'memory']","An application for a supermarket checkout needs to store products with their serial numbers, and the application must be able to quickly find the product linked to the serial number which has been scanned by the cashier.Should the serial number of the product change, the application should also be able to quickly change the serial number associated with the relevant product. Which of the following data structures would be most appropriate to store the products and serial numbers in memory?
"
346,346,346,26.0,0.3237000107765198,"pass, send, initial, replace, message, public_key, alice, necessary, publish, generate","['send', 'necessary', 'component', 'send', 'encrypted', 'message', 'need', 'message', 'wish', 'encryptn']","Alice sets up an RSA encryption and sends Bob all the necessary components to send her an encrypted message. What does bob need to compute to encrypt his message?Where m is the message Bob wishes to encrypt,N and t are Alice's public key?
"
347,347,347,26.0,0.3233000040054321,"hash, table, bucket, open, insert, close, key, function, slot, closed","['use', 'open', 'hash', 'ahash', 'function', 'form', 'hash', 'table', 'slot', 'if', 'insert', 'element', 'order', 'maximum', 'list', 'length', 'end']","Using open hashing with ahash function of the form h(x) = x % 7 and a hash table with slots 0, …,6, if you insert the elements 15, 7, 22, 8, 19, 31, 30, 29, 40, 81 in that order, what is the maximum list length at the end?
"
348,348,348,20.0,0.3287000060081482,"method, size, input, go, exist, elementary_operation, likely, give, use, alphabetical","['quadratic', 'time', 'use', 'elementary_operation', 'process', 'input', 'size', 'predict', 'number', 'elementary_operation', 'for', 'input', 'size']","A quadratic time algorithm uses 70 elementary operations to process an input of size 20. What is the predicted number of elementary operations it will use for an input of size 200?
"
349,349,349,20.0,0.11710000038146973,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['give', 'unsorte', 'list', 'many', 'pass', 'quick', 'sort', 'need', 'sort', 'list']","Given the unsorted listed 15,3,6,5,19,4,10 how many passes of quick sort are needed to sort the list?
"
350,350,350,23.0,0.25999999046325684,"hash, table, bucket, open, insert, close, key, function, slot, closed","['consider', 'closed', 'hash', 'table', 'linear_probing', 'bucket', 'value', 'input', 'bucket', 'value', 'place', 'decide', 'hash', 'function', 'bucket', 'value', 'also', 'write', 'bucket', 'value', 'final', 'array', 'add', 'order', 'specify']","Consider a closed hash table, with linear probing, with 4 buckets: [0,1,2,3]Where a ""Value"" is input and the ""Bucket"" the value is placed into is decided by the hash function:Bucket = (Value+1) %4(Also written as : Bucket = (Value+1) mod 4 ).What is the final array, when 7,13,9,5 are added in the order specified.
"
351,351,351,23.0,0.09769999980926514,"comparison, minimum, span, decision, edgesis, among, stooge, parallelize, reach, shape","['minimum', 'number', 'comparison', 'sort', 'item']","What is the minimum number of comparisons to sort 9 items?
"
352,352,352,30.0,0.1476999968290329,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['follow', 'statement', 'true']","Which of the following statements is true?
"
353,353,353,23.0,0.26019999384880066,"choose, log, type, small, wrong, memory, requirement, meet, back, book","['first', 'step', 'process', 'follow', 'choose', 'computed', 'alice', 'large', 'prime', 'relatively', 'prime', 'choose', 'follow', 'publish', 'receive']","In the first step of the RSA encryption process, the following are chosen or computed by Alice:- p,q = large primes- N = pq- s = relatively prime (i.e. coprime) to (p-1)(q-1)- t = chosen such that st = 1 (mod (p - 1)(q - 1))Which of the following are published to be received by Bob.
"
354,354,354,39.0,0.38940000534057617,"run, large, fast, term, quicksort, exact, record, partition, question, information","['consider', 'follow', 'hypothetical', 'situation', 'sort', 'use', 'quicksort', 'time', 'insertion', 'sort', 'time', 'average', 'input', 'list', 'arrive', 'give', 'list', 'already', 'completely', 'sort', 'probability', 'rest', 'randomgive', 'equality', 'for', 'term', 'for', 'approach', 'quicker', 'always', 'use', 'selection', 'sortyou', 'may', 'refer', 'note', 'hypothetical', 'nature', 'question', 'answer', 'may', 'seem', 'counter', 'intuitive', 'make', 'mathematical', 'sense']","Consider the following hypothetical situation:You have a sorting algorithm which uses quicksort 50% of the time, and insertion sort 50% of the time, on average. n input lists arrive such a given list is already completely sorted with probability x, and the rest are random.Give an equality for x in terms of n for when this approach will be quicker than always using Selection sortYou may refer to the below:(Note that because of the hypothetical nature of the question, the answer may seem counter-intuitive, but will make mathematical sense)
"
355,355,355,39.0,0.06679999828338623,"would, use, result, determine, create, sequence, state, maxheap, num, body",['result'],"When you multiply an adjacency matrix by itself, what does the resulting matrix tell you?
"
356,356,356,38.0,0.5638999938964844,"datum, structure, data, space, implement, possible, memory, store, work, for","['work', 'for', 'spotazon', 'music', 'ask', 'implement', 'data', 'structure', 'store', 'music', 'playlist', 'user', 'want', 'able', 'easily', 'add', 'remove', 'track', 'point', 'playlist', 'able', 'skip', 'forward', 'backwards', 'track', 'brief', 'datum', 'structure', 'maximise', 'speed', 'function', 'follow', 'datum', 'structure', 'would', 'appropriate']","You work for Spotazon music, and have been asked to implement a data structure to store music playlists. Users will want to be able to easily add/remove tracks from any point in the playlist, and they should be able to skip forward/skip backwards a track. Your brief is to use a data structure that will maximise the speed of these functions. Which of the following data structures would be most appropriate.
"
357,357,357,38.0,0.2736999988555908,"hash, table, bucket, open, insert, close, key, function, slot, closed","['close', 'linear_probing', 'right', 'ie', 'direction', 'high', 'index', 'hash', 'function', 'form', 'hash', 'table', 'slot', 'if', 'insert', 'element', 'order', 'unknown', 'integer', 'none', 'correct']","You use a standard closed hashtable with linear probing (to the right, i.e. in the direction of higher indices). The hash function has the form h(x) = x % 7 and the hash table has slots 0, … , 6. If you insert the elements 18,19,25,701,77,74,y in that order, where y is an unknown integer, what does the hashtable look like at the end?a) 77,701,74,y,18,19,25b) 77,25,701,y,18,19,74c) 77,701,y,19,18,25,74d) 77,18,19,701,25,74,ye) None of the above are correct
"
358,358,358,23.0,0.2093999981880188,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['consider', 'follow', 'list', 'list', 'list', 'integer', 'inclusive', 'ascend', 'orderlist', 'random', 'permutation', 'list', 'xwhich', 'statement', 'false', 'average']","Consider the following two lists:List X: List of integers from 1 to 100 (inclusive) in ascending orderList Y: Random permutation of list XWhich of the statements A-D is FALSE (on average)?
"
359,359,359,25.0,0.07779999822378159,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'statement', 'dijkstra', 'algorithm']","Which of the following statements about Dijkstra's algorithm is false?
"
360,360,360,32.0,0.10279999673366548,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['link', 'list', 'insertion', 'do']","In a linked list, insertion can be done...
"
361,361,361,25.0,0.10849999636411667,"for, time, complexity, search, runtime, function, none, follow, correct, give","['follow', 'algorithm', 'low', 'complexity', 'class']","Which of the following algorithms has the lowest complexity class
"
362,362,362,35.0,0.26249998807907104,"consider, total, first, call, line, nee, decide, xtotal, via, organise","['collection', 'node', 'call', 'line', 'segment', 'call', 'connect', 'pair', 'node']","A graph is a collection of nodes, called _____, and line segments called arcs or_____ that connect pairs of nodes.
"
363,363,363,0.0,0.1039000004529953,"datum, structure, data, space, implement, possible, memory, store, work, for","['follow', 'non', 'linear', 'datum', 'structure']","Which of the following is a non-linear data structure?
"
364,364,364,30.0,0.12620000541210175,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['follow', 'statement', 'hash', 'table', 'true']","Which of the following statements about hash tables are true?
"
365,365,365,23.0,0.308899998664856,"int, if, for, while, return, follow, code, mean, sum, new","['follow', 'codefor', 'int', 'for', 'if', 'for', 'int', 'even']","What is the runtime of the following code?for (int i=0; i < N; ++i) { for (int j=0; j < M/2; j=j*2) { System.out.println(j); if (i%2 == 0) { for (int k=0; k < 2*N; ++k) { System.out.println(i + "" is even""); } } }}
"
366,366,366,35.0,0.16410000622272491,"number, find, take, step, item, average, many, give, second, if","['take', 'second', 'process', 'input', 'second', 'for', 'second', 'for', 'asymptotic', 'complexity', 'likely']","An algorithm takes 60 seconds to process an input of n=100, 120 seconds for n=120 and 240 seconds for n=140.Which asymptotic complexity does it likely have?
"
367,367,367,2.0,0.2353000044822693,"tree, binary, node, avl, search, child, root, follow, height, leaf","['give', 'follow', 'number', 'construct', 'perfectly', 'balancedbinary', 'search', 'tree', 'number', 'order', 'number', 'root']","Given the following numbers: 6,2,18,34,13,14.When constructing a perfectly balancedbinary search tree from the numbers in that order, which number is its root?
"
368,368,368,2.0,0.1412000060081482,"run, large, fast, term, quicksort, exact, record, partition, question, information","['selection', 'sort', 'run', 'for', 'second', 'for', 'record', 'likely', 'likely', 'run', 'for', 'record']","Selection Sort runs for 5 seconds for 100 records. How likely is it likely to run for 10,000 records?
"
369,369,369,35.0,0.2694000005722046,"int, if, for, while, return, follow, code, mean, sum, new","['incomplete', 'code', 'for', 'class', 'get', 'find', 'element', 'link', 'list', 'code', 'must', 'go', 'for', 'object', 'get', 'int', 'if', 'return', 'error', 'nodeelement']","Below is an incomplete code for the class LinkedList.Method 'Get' finds the ith element in the linked list. Which code must go at 'X' for the code to work.public Object get(int i){ if (i<0 || i>=n) { return error; } ListNode node = head; Xreturn node.element;}
"
370,370,370,35.0,0.13279999792575836,"tree, binary, node, avl, search, child, root, follow, height, leaf","['give', 'sorted', 'array', 'length', 'element', 'time', 'complexity', 'implement', 'binary', 'search', 'tree', 'bst']","Given a sorted array of length n of elements, what is the time complexity of implementing it into a Binary Search Tree (BST)?
"
371,371,371,2.0,0.11429999768733977,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['element', 'list', 'lane', 'follow', 'statement', 'true']","You have to insert the element ""20"" in this skip list, p = 0.5, max lanes = 5:Which one of the following statements are true?
"
372,372,372,25.0,0.12770000100135806,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['follow', 'matrix', 'represent', 'graph']","Below is an example graph. Which of the following adjacency matrices represent this graph?
"
373,373,373,47.0,0.0560000017285347,"remove, base, set, implementation, insert, may, allow, incorrect, entity, limited","['sort', 'data', 'set', 'gap', 'size']","What is the result of shell sorting the data set below with a gap size of 3.56 21 30 43 98 23
"
374,374,374,52.0,0.21780000627040866,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['for', 'follow', 'binary', 'search', 'tree', 'output', 'if', 'pre', 'order', 'traversal', 'treeimage', 'source', 'https', 'binary', 'search', 'tree', 'data', 'structure']","For the following binary search tree:What is the output if we do a pre-order traversal on the tree?Image Source:https://www.gatevidyalay.com/binary-search-trees-data-structures/
"
375,375,375,52.0,0.10029999911785126,"for, time, complexity, search, runtime, function, none, follow, correct, give","['node', 'visit', 'search', 'for']","Which nodes are visited when searching for ""c""?
"
376,376,376,32.0,0.11760000139474867,"start, could, dijkstra, buffer, page, twice, overwrite, circular, nodestraverse, nodetraverse","['use', 'dijkstra', 'algorithm', 'start', 'node', 'state', 'order', 'nodestraverse', 'reach', 'node']","Using Dijkstra's algorithm, starting at node S, state the order of nodestraversed before reaching the node B.
"
377,377,377,52.0,0.14920000731945038,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['example', 'binary', 'tree', 'pre', 'order', 'traversal', 'tree']","Below is an example binary tree. What is the pre-order traversal of this tree?
"
378,378,378,52.0,0.09529999643564224,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['follow', 'rule', 'incorrectly', 'describe']","Which one of the following Big-Oh rules is incorrectly described?
"
379,379,379,30.0,0.14650000631809235,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['link', 'list', 'array', 'true']","Which statement about linked lists and arrays is TRUE?
"
380,380,380,25.0,0.1988999992609024,"number, find, take, step, item, average, many, give, second, if","['consider', 'closed', 'hash', 'table', 'bucket', 'store', 'average', 'many', 'step', 'would', 'take', 'find', 'item']","Consider a closed hash table with 150 buckets storing 100 items.On average, how many steps of linear probing would it take to find an item?
"
381,381,381,52.0,0.29829999804496765,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['follow', 'integer', 'insert', 'empty', 'alv', 'tree', 'follow', 'order', 'tree', 'put', 'great', 'integer', 'right', 'small', 'one', 'leave', 'would', 'somewhere', 'right', 'tree', 'keep', 'balanced', 'insertion', 'node', 'tree', 'print', 'use', 'pre', 'separate', 'print', 'if', 'encounter', 'use', 'method', 'follow', 'correct', 'output', 'produce']","The following integers are inserted into an empty ALV Tree in the following order: 4, 8, 15, 16, 23, 42. The tree puts the greater integers on the right, and smaller ones on the left e.g 8 would be somewhere to the right of 4. The tree is kept balanced after each insertion. Each node of the tree is then printed using pre-order traversal separated by commas. Nothing is printed if a null node is encountered using this method. Which of the following is the correct output produced?
"
382,382,382,52.0,0.16019999980926514,"element, add, index, end, move, place, ie, first, assume, contain","['datum', 'structure', 'use', 'if', 'want', 'add', 'remove', 'element', 'quickly', 'possibleprint', 'list', 'order', 'element', 'add']","Which data structure should be used if you wanted to:Add and remove elements as quickly as possiblePrint the list in the order the elements have been added
"
383,383,383,23.0,0.11050000041723253,"method, size, input, go, exist, elementary_operation, likely, give, use, alphabetical","['use', 'selection', 'sort', 'multiple', 'input', 'datum', 'follow', 'statement', 'correct', 'assume', 'input', 'datum', 'equal', 'size']","When using a selection sort algorithm on multiple input data, which of the following statements is correct? It can be assumed that all input data is of equal size.
"
384,384,384,30.0,0.21320000290870667,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['correct', 'assigment', 'big', 'notation', 'fortheta', 'omega']","Correct assigments of big O notation forTheta, Omega, Oare:
"
385,385,385,48.0,0.15309999883174896,"hash, table, bucket, open, insert, close, key, function, slot, closed","['load', 'hash', 'table']","What is the ""load"" of a hash table?
"
386,386,386,23.0,0.2038999944925308,"hash, table, bucket, open, insert, close, key, function, slot, closed","['while', 'search', 'hash', 'table', 'for', 'would', 'number', 'find', 'memory', 'location', 'accord', 'hash', 'function', 'occupy', 'different', 'would', 'number', 'check', 'search', 'third', 'bucket']","While searching a hash table for an ID number, I find the memory location according to the hash function to be occupied by a different ID number. I check the 2nd bucket, then the 3rd bucket, then abandon my search. What was in the third bucket?
"
387,387,387,23.0,0.1421000063419342,"hash, table, bucket, open, insert, close, key, function, slot, closed","['many', 'object', 'roughly', 'for', 'datum', 'slot', 'lead', 'chance', 'collision', 'occur', 'hash', 'table']","How many objects (roughly) for n data slots leads to a 50% chance of a collision occuring in a hash table?
"
388,388,388,52.0,0.3578999936580658,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['time', 'complexity', 'pre', 'order', 'traversal', 'order', 'traversal', 'post', 'order', 'traversal', 'level', 'order', 'traversal']","What is the time complexity of: Pre-order traversal, In-order Traversal, Post-order traversal, and Level-order traversal?
"
389,389,389,52.0,0.13529999554157254,"tree, binary, node, avl, search, child, root, follow, height, leaf","['quality', 'make', 'complete', 'full', 'binary', 'tree']","Which two qualities make up a complete (full) binary tree?
"
390,390,390,2.0,0.1468999981880188,"tree, binary, node, avl, search, child, root, follow, height, leaf","['difference', 'binary', 'tree', 'tree']","What is the difference between a binary tree and any other tree?
"
391,391,391,2.0,0.09359999746084212,"low, require, many, swap, perform, static, hard, partition, growth_rate, sortbubble","['many', 'comparison', 'require', 'way', 'merge', 'element']","How many comparisons are required in a 4-way merge sort of n elements?
"
392,392,392,13.0,0.06669999659061432,"order, traversal, tree, post, follow, pre, level, output, use, traverse",['post'],"What is the post-order traversal of 4 / \ 2 6 / \ / \ 1 3 5 7 \ 8
"
393,393,393,2.0,0.09350000321865083,"tree, binary, node, avl, search, child, root, follow, height, leaf","['comparison', 'sort', 'decision', 'tree', 'height', 'leave']","A comparison sorting decision tree of height h has no more than ___ leaves
"
394,394,394,40.0,0.1348000019788742,"number, find, take, step, item, average, many, give, second, if","['average', 'runtime', 'complexity', 'insertion', 'link', 'list', 'if', 'reference', 'precede', 'node', 'give', 'number', 'item', 'already', 'list']","What is the average runtime complexity of insertion into a linked list if the reference to the preceding node is given and where n is the number of items already in the list?
"
395,395,395,35.0,0.3357000052928925,"int, if, for, while, return, follow, code, mean, sum, new","['code', 'void', 'int', 'int', 'for', 'for', 'if', 'for', 'int', 'true', 'else', 'false']","What is the Big-Theta of this code:void myProgram (int a, int b, int c){ for(int i=0; i<a*a; i++){ for(int j=0; j<b; j++){ if(j==b/2){ for(int k=0; k<c; k++){ System.out.println(""TRUE""); } } else { System.out.println(""FALSE""); } } }}
"
396,396,396,35.0,0.12880000472068787,"vertex, edge, graph, change, show, matrix, also, if, formula, name","['compare', 'adjacency', 'list', 'number', 'vertex', 'number', 'edge']","What is the asymptotic memory usage of an adjacency matrix compared to an adjacency list?[v is the number of vertices, e is the number of edges]
"
397,397,397,25.0,0.12600000202655792,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['iteration', 'selection', 'sort', 'follow', 'list']","After two iterations of Selection Sort, what does the following list look like:3 5 2 1 6 4
"
398,398,398,29.0,0.17710000276565552,"for, time, complexity, search, runtime, function, none, follow, correct, give","['function', 'respective', 'time', 'complexity', 'define', 'log', 'base', 'for', 'value', 'become', 'faster']","Two functions have respective time complexities defined by:where log is of base-2.For what value of n does g become faster than f?
"
399,399,399,29.0,0.14740000665187836,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['consider', 'follow', 'tree', 'would', 'result', 'printing', 'value', 'node', 'via', 'post', 'order', 'traversal']","Consider the following tree:What would be the result of printing the values of each node via POST-ORDER traversal?
"
400,400,400,25.0,0.16779999434947968,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'code', 'snippet', 'would', 'correctly', 'remove', 'nthelement', 'doubly', 'link', 'list']","Which of the following code snippets would correctly remove the nthelement, n, of a doubly-linked list?
"
401,401,401,36.0,0.30820000171661377,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'stable', 'average', 'time', 'complexity', 'nlog']","Which of the following sorting algorithm is stable and has average time complexity of nlog(n)
"
402,402,402,36.0,0.2005999982357025,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['assume', 'perfect', 'skip', 'list', 'describe', 'coursework', 'element', 'link', 'next', 'even', 'number', 'element', 'also', 'link', 'ahead', 'element', 'number', 'divisible', 'also', 'link', 'ahead', 'power', 'skip', 'list', 'contain', 'element', 'many', 'element', 'least', 'lane']","Assume that we have a perfect skip list (as described in 2019 coursework 2 Q3... ""every element is linked to the next, even numbered elements are also linked to the one 2 ahead, elements whose number is divisible by 4 are also linked to the one 4 ahead, and so on by powers of 2."").The skip list contains 32768 elements. How many elements have at least 11 lanes?
"
403,403,403,25.0,0.1370999962091446,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['for', 'tree', 'outcome', 'for', 'order', 'traversal']","For the above tree, what is the outcome for in-order traversal?
"
404,404,404,2.0,0.3664000034332275,"tree, binary, node, avl, search, child, root, follow, height, leaf","['binary', 'tree', 'depth', 'full', 'level', 'except', 'for', 'bottom', 'bottom', 'level', 'contain', 'node', 'many', 'node', 'tree']","A binary tree has a depth of 6, it is full on all levels except for the bottom. The bottom level contains 4 nodes, how many nodes are there in the tree?
"
405,405,405,2.0,0.1476999968290329,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['follow', 'statement', 'true']","Which of the following statements are true?
"
406,406,406,35.0,0.29580000042915344,"int, if, for, while, return, follow, code, mean, sum, new","['time', 'follow', 'extract', 'hello_world', 'for', 'int', 'test', 'for', 'int', 'test']","What is the time complexity of the following extract of code?System.out.println(""Hello world"");for(int i = 0; i < n; i++){ System.out.println(""Test"");}for(int j = 0; j < n; j++){ System.out.println(""Test"");}
"
407,407,407,35.0,0.15860000252723694,"tree, binary, node, avl, search, child, root, follow, height, leaf","['give', 'binary', 'tree', 'type', 'traversal', 'carry', 'obtain', 'output']","Given the above binary tree, which type of traversal should be carried out to obtain the output2, 5, 11, 6, 7, 4, 9, 5, 2?
"
408,408,408,52.0,0.15139999985694885,"operation, great, remain, put, var, ask, power, much, relation, box","['for', 'operating', 'item', 'runtime', 'size', 'quadruple', 'much', 'change', 'denote']","for an algorithm operating on n items and a runtime of?(n2) when n's size quadruples, by how much will T change? (denoted by T')
"
409,409,409,49.0,0.13580000400543213,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'define', 'complete', 'binary', 'tree']","Which one of the following defines a complete binary tree?
"
410,410,410,2.0,0.09920000284910202,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['if', 'direct', 'graph', 'happen']","If we cube the adjacency matrix of a directed graph, what should happen?
"
411,411,411,0.0,0.17810000479221344,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'method', 'good', 'average', 'case', 'for', 'great', 'follow', 'option']","Which sorting method has a best average case for n=2 (and all n greater than 2) out of the following options?
"
412,412,412,36.0,0.22609999775886536,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['good', 'average', 'bad', 'case', 'complexity', 'for', 'insertion']","What is the best, average and worst case complexity for insertion sort?
"
413,413,413,36.0,0.10689999908208847,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['type', 'sort', 'stable']","Which out of these types of sorts is stable?
"
414,414,414,36.0,0.1356000006198883,"tree, binary, node, avl, search, child, root, follow, height, leaf","['tree', 'use', 'display', 'element', 'start', 'root', 'tree', 'make', 'way', 'leave', 'tree', 'level', 'time']","Which method of tree traversal is used to display the elements starting at the root of the tree, and making its way down to the leaves of the tree, one level at a time?
"
415,415,415,52.0,0.14319999516010284,"tree, binary, node, avl, search, child, root, follow, height, leaf","['maximum', 'height', 'tree', 'node']","What is the maximum height of a perfectly balanced tree with n nodes?
"
416,416,416,29.0,0.1720000058412552,"for, time, complexity, search, runtime, function, none, follow, correct, give","['for', 'follow', 'piece', 'bad', 'case', 'runtime', 'print', 'string', 'console', 'take', 'constant', 'timepublic', 'function', 'for', 'for', 'int']","For the following piece of Java code, select the worst case runtime from the options given.N.B. You can assume that printing a string to console takes constant time.public static void function (int N) { for (int i = 1; i < N; i++) { for (int j = 1; j < N; j = j * 2) { System.out.println(""hello world""); } }}
"
417,417,417,2.0,0.24310000240802765,"tree, binary, node, avl, search, child, root, follow, height, leaf","['option', 'correct', 'definition', 'follow', 'leafcomplete', 'full', 'binary', 'treebinary', 'tree']","What option has the correct definitions of each of the following:leafComplete (Full) Binary treeBinary tree
"
418,418,418,2.0,0.29269999265670776,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['option', 'order', 'pre', 'order', 'traversalin', 'order', 'traversalpost', 'order', 'traversal']","which of these options is in the order of:pre-order TraversalIn-order TraversalPost-order Traversal
"
419,419,419,17.0,0.12999999523162842,"choose, log, type, small, wrong, memory, requirement, meet, back, book","['order', 'follow', 'big', 'runtime', 'large', 'small', 'log', 'log']","Order the following Big O runtimes from largest to smallest:O(log n), O(1), O(n log n), O(n), O(), O()
"
420,420,420,40.0,0.1965000033378601,"number, find, take, step, item, average, many, give, second, if","['if', 'close', 'hash', 'table', 'linear_probing', 'average', 'number', 'step', 'insert', 'find', 'item']","If the closed hash table with linear probing has a load factor of 0.30, what is the average number of steps to insert/find an item.
"
421,421,421,40.0,0.18440000712871552,"operation, great, remain, put, var, ask, power, much, relation, box","['correct', 'recurrence', 'relation', 'for', 'merge', 'sort', 'number', 'element', 'list', 'sort', 'great', 'positive', 'power', 'for', 'simplicity']","What is the correct recurrence relation for merge sort (when N, the number of elements of the list being sorted, is greater than 1 and a positive power of 2 for simplicity)?
"
422,422,422,52.0,0.2223999947309494,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['order', 'would', 'node', 'follow', 'tree', 'visit', 'carry', 'level', 'order', 'traversal']","What order would the nodes in the following tree be visited in, when carrying out a level-order traversal?
"
423,423,423,36.0,0.2836999893188477,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['good', 'average', 'bad', 'case', 'complexity', 'selection', 'sort']","What is the best, average and worst case complexity of selection sort?
"
424,424,424,36.0,0.17430000007152555,"hash, table, bucket, open, insert, close, key, function, slot, closed","['consider', 'closed', 'hash', 'table', 'linear_probing', 'if', 'average', 'number', 'step']","Consider a closed hash table with linear probing. If there is a load factor of .10, what is the average number of steps?
"
425,425,425,23.0,0.0885000005364418,"vertex, edge, graph, change, show, matrix, also, if, formula, name","['perform', 'algorithm', 'follow', 'graph', 'start', 'vertex', 'output']","Perform Dijkstra's algorithm on the following graph with starting vertex A.What will be outputted?
"
426,426,426,25.0,0.058100000023841865,"method, size, input, go, exist, elementary_operation, likely, give, use, alphabetical","['input', 'output', 'dijkstra', 'algorithm']","What is the input and output of Dijkstra's algorithm?
"
427,427,427,47.0,0.16580000519752502,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['formal', 'definition', 'big', 'omega', 'for', 'positive', 'function']","What is the formal definition of 'Big-Omega' , for a positive function f(n)?
"
428,428,428,29.0,0.2465000003576279,"node, next, previous, constant, object, pointerthe, follow, private, nodenext, head","['assume', 'deleting', 'element', 'call', 'doubly', 'link', 'list', 'equip', 'prev', 'next', 'reference', 'follow', 'line', 'code', 'would', 'correctly', 'delete', 'element', 'list']","Assume you are deleting an element (called 'node') from the middle of a doubly-linked list equipped with prev and next references. Which of the following lines of code would correctly delete the element in the list?
"
429,429,429,6.0,0.20829999446868894,"tree, binary, node, avl, search, child, root, follow, height, leaf","['if', 'binary', 'tree', 'represent', 'mathematical', 'expression', 'operand', 'contain', 'leaf', 'node', 'operator', 'node', 'child', 'see', 'for', 'example', 'type', 'use', 'evaluate', 'expression']","If we have a binary tree which represents a mathematical expression - where the operands are contained in leaf nodes and the operator nodes all have two children (see below for example) - what type of traversal algorithm should be used to evaluate the expression?
"
430,430,430,52.0,0.1973000019788742,"right, leave, node, process, sub, current, subtree, describe, differ, left","['class', 'for', 'avl', 'tree', 'node', 'give', 'class', 'avlnode', 'int', 'value', 'int', 'balance', 'avlnode', 'leave', 'right', 'avl', 'tree', 'node', 'balance', 'value', 'indicate']","Class for an AVL tree node is given below:class AVLNode { int value; int balance; AVLNode left, right;};In this AVL tree node, what does the balance value of 1, 0 and -1 indicate?
"
431,431,431,17.0,0.1598999947309494,"for, time, complexity, search, runtime, function, none, follow, correct, give","['type', 'search', 'find', 'element', 'order', 'set', 'data', 'binary', 'search', 'interpolation', 'search', 'linear', 'search', 'complexity']","Three types of search that we can use to find an element in an ordered set of data are binary search, interpolation search and linear search. What are their complexities?
"
432,432,432,0.0,0.5903000235557556,"vertex, edge, graph, change, show, matrix, also, if, formula, name","['try', 'mathematically', 'speed', 'delivery', 'time', 'make', 'graph', 'graph', 'vertex', 'house', 'house', 'edge', 'if', 'street', 'also', 'decide', 'make', 'graph', 'graph', 'monitor', 'friendship', 'elf', 'could', 'best', 'choose', 'elf', 'would', 'for', 'factory', 'secret', 'however', 'find', 'nearly', 'pointless', 'although', 'elf', 'work', 'for', 'almost', 'friend', 'graph', 'edge', 'draw', 'if', 'graph', 'list', 'start', 'prepare', 'for']","Santa was trying to mathematically speed up his delivery times, so he made a graph (graph A) where the vertices were houses and two houses had an edge between them if they were on the same street. He also decided to make a graph (graph B) to monitor friendships between his elves so he could best choose which elves would get each other for the factory Secret Santa that year; however, he found it to be nearly pointless, as although he has 1000 elves working for him, almost all of them are friends with each other! In this graph each elf is a vertex and they have an edge drawn between each other if they are friends.To respresent each graph, should Santa use an adjacency matrix or an adjacency list?? Hurry up, he has to start preparing for Christmas 2020 ASAP!!
"
433,433,433,0.0,0.147599995136261,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'algorithm', 'stable']","Which of the following algorithms is stable?
"
434,434,434,36.0,0.15690000355243686,"tree, binary, node, avl, search, child, root, follow, height, leaf","['give', 'avl', 'tree', 'value', 'insert', 'rotation', 'require', 'order', 'balance', 'tree']","Given the AVL tree:When the value of 12 is inserted, which rotation is required in order to balance the tree?
"
435,435,435,6.0,0.3815000057220459,"node, next, previous, constant, object, pointerthe, follow, private, nodenext, head","['follow', 'code', 'for', 'for', 'particular', 'adt', 'itclass', 'public', 'object', 'element', 'public', 'node', 'next', 'public', 'node', 'object', 'element', 'next']","The following is code for a Node for a particular ADT. Which ADT is it?class Node{ public Object element; public Node[ ] next; public Node(Object o){ element = o; next = new Node[5]; }}
"
436,436,436,23.0,0.2766999900341034,"hash, table, bucket, open, insert, close, key, function, slot, closed","['use', 'hash', 'function', 'insert', 'element', 'open', 'hash', 'table', 'slot', 'follow', 'option', 'show', 'third', 'element', 'long', 'list', 'insertion']","Using the hash function h(x) = x%5, insert the elements 31, 60, 7, 46, 73, 82, 9, 57, 23, 92, 28 into an open hash table with slots 0,...,4. Which of the following options shows the third element of the longest list after the insertions?
"
437,437,437,23.0,0.01669999957084656,"vertex, edge, graph, change, show, matrix, also, if, formula, name",[],"What is the“Time complexity” of an algorithm (T(n))?
"
438,438,438,29.0,0.09780000150203703,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['consider', 'big', 'notation', 'if', 'say']","When considering Big-O notation, if |f(n)| = B|g(n)| ? n = bthen we say that...
"
439,439,439,36.0,0.2221000045537949,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['case', 'follow', 'sort', 'algorithm', 'stable']","In which case are all of the following sorting algorithms stable?
"
440,440,440,36.0,0.13609999418258667,"int, if, for, while, return, follow, code, mean, sum, new","['mean', 'for', 'asymptotically', 'efficient', 'algorithm']","What does it mean for an algorithm X to be asymptotically more efficient than another algorithm Y
"
441,441,441,35.0,0.1023000031709671,"tree, binary, node, avl, search, child, root, follow, height, leaf","['mean', 'binary', 'tree', 'identical']","What is mean by binary trees are identical?
"
442,442,442,2.0,0.09380000084638596,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['choose', 'correct', 'step', 'insertion', 'sort', 'array']","Choose the correct steps of insertion sorting on the array below: 7 6 2 5 1
"
443,443,443,36.0,0.09380000084638596,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['choose', 'correct', 'step', 'insertion', 'sort', 'array']","Choose the correct steps of insertion sorting on the array below: 7 6 2 5 1
"
444,444,444,36.0,0.06300000101327896,"tree, binary, node, avl, search, child, root, follow, height, leaf","['tree', 'see']","What is the in-order traversal of the tree seen below? 8 / \ 6 9 / \ \ 2 7 15 /1
"
445,445,445,2.0,0.08070000261068344,"for, time, complexity, search, runtime, function, none, follow, correct, give","['follow', 'statement', 'correct']","f(n) = 2, g(n) = 56 log(n), h(n) = 17n log(n)Which of the following statements is correct?
"
446,446,446,27.0,0.21969999372959134,"would, use, result, determine, create, sequence, state, maxheap, num, body","['create', 'create', 'prime', 'number', 'bucketsie', 'create', 'hashtable', 'prime', 'number', 'bucket', 'for', 'example', 'bucket', 'rather']","When creating a new hashtable, why should we create it such that it has a prime number of buckets?I.e. we should only create hashtables w/ a prime number of buckets, for example 2021 buckets rather than 2000.
"
447,447,447,27.0,0.08420000225305557,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['experimental', 'time', 'complexity', 'shell']","What is the experimental time complexity of shell sort?
"
448,448,448,36.0,0.06360000371932982,"value, balance, rotation, unbalanced, clockwise, become, dependant, occur, bst, insert","['if', 'value']","If N = 91, and k 1 mod 72, then mod N.What is the value of ?
"
449,449,449,49.0,0.06549999862909317,"operation, great, remain, put, var, ask, power, much, relation, box","['take', 'input', 'iteration', 'sort', 'underlie', 'operation', 'shellsort', 'result', 'array']","Take the input array: [49, 42, 67, 85, 23, 56, 34, 15]. After one iteration of h-sorting (the underlying operation in Shellsort) with h = 4, what is the resulting array?
"
450,450,450,23.0,0.3605000078678131,"hash, table, bucket, open, insert, close, key, function, slot, closed","['closed', 'hash', 'table', 'length', 'use', 'hash', 'function', 'linear_probe', 'insert', 'value', 'empty', 'hash', 'table', 'table', 'show', 'order', 'value', 'insert']","An closed hash table of length 10 is used with hash function h(k)=k%10, and linear probing. After inserting 6 values into an empty hash table, the table is as shown below.012 423 234 345 526 467 3389In what order where the values inserted?
"
451,451,451,23.0,0.07919999957084656,"datum, structure, data, space, implement, possible, memory, store, work, for","['weight', 'undirected', 'graph', 'if', 'apply', 'dijkstra', 'algorithm', 'add', 'edge', 'weight', 'remain']","In a weighted, undirected graph if we apply Dijkstra's algorithm and then we add 1 to all the edge weights, does the shortest path remain the same?
"
452,452,452,0.0,0.2302999943494797,"vertex, edge, graph, change, show, matrix, also, if, formula, name","['represent', 'graph', 'follow', 'matrix', 'represent', 'vertex', 'areedge', 'apart', 'whereis', 'natural', 'number']","Supposeis the adjacency matrix representing a graph. Which of the following is the matrix representing vertices that areedges apart, whereis a natural number?
"
453,453,453,12.0,0.5525000095367432,"choose, log, type, small, wrong, memory, requirement, meet, back, book","['find', 'volunteer', 'local', 'library', 'holiday', 'pad', 'day', 'people', 'take', 'book', 'shelf', 'put', 'back', 'wrong', 'place', 'orderyou', 'ask', 'ensure', 'book', 'sort', 'library', 'close', 'day', 'takesage', 'need', 'home', 'revise', 'decide', 'sort', 'algorithm', 'speed', 'thing', 'upyou', 'make', 'follow', 'observation', 'thousand', 'book', 'library', 'small', 'number', 'misplace', 'daypeople', 'tend', 'put', 'book', 'back', 'close', 'take', 'fromgiven', 'observation', 'follow', 'algorithm', 'would', 'efficient']","You find yourself volunteering at the local library during the holidays to pad out your CV.Each day, people take books from shelves and put them back in the wrong place, out of order.You're asked to ensure that all books are sorted after the library closes each day, but this takesages and you need to get home to revise. You decide to use a sorting algorithm to speed things up.You make the following observations:There are thousands of books in the library but only a small number of them are misplaced each day.People tend to put books back close to where they were taken from.Given these observations, which of the following algorithms would be most efficient?
"
454,454,454,12.0,0.18379999697208405,"int, if, for, while, return, follow, code, mean, sum, new","['good', 'case', 'time', 'complexity', 'for', 'follow', 'public', 'sort', 'int', 'array', 'for', 'minindex', 'for', 'arraylength', 'if']","What is the best case time complexity for the following code snippet:public static void sort(int[]array) { for(int i = 0; i<array.length-1; i++) { int min = array[I]; int minIndex = I; for(int j = i+1; j<array.length;j++) { if(array[j]<min) { min = array[j]; minIndex = j; } } int temp = array[minIndex]; array[minIndex] = array[I]; array[i] = temp; }}
"
455,455,455,36.0,0.2425999939441681,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['good', 'average', 'bad', 'case', 'for', 'bubble', 'sort']","What is the best, average and worst case for a bubble sort?
"
456,456,456,36.0,0.26019999384880066,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['consider', 'follow', 'represent', 'direct', 'graph', 'use', 'method', 'lecture', 'graph', 'find', 'node', 'exactly', 'edges_apart']","Consider the following adjacency matrix representing a directed graph. Using the methods in lecture 17 - Graphs 1, find the nodes that are exactly two edges apart.
"
457,457,457,47.0,0.2251999974250793,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['diagram', 'tree', 'econsidere', 'list', 'value', 'describe', 'post', 'order', 'search', 'traversal', 'do', 'show', 'output', 'would', 'for', 'search', 'traversal', 'method']","Below this paragraph is a diagram of tree; A / \ B C / \D EConsidering with the list of values, describe how 'Post-order' search / traversal is done by showing what the output would be for this search / traversal method:
"
458,458,458,52.0,0.1023000031709671,"hash, table, bucket, open, insert, close, key, function, slot, closed","['regard', 'hash', 'table', 'false']","Regarding Hash Tables, which of the followingstatements is false?
"
459,459,459,23.0,0.10209999978542328,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['consider', 'list', 'operation', 'perform', 'if', 'want', 'retrieve', 'value', 'index', 'node', 'list', 'follow', 'take', 'average', 'operation']","Consider a list and the operations that can be performed on it. If you wanted to retrieve a value'get' from an index/node in a list, which of the following does not take an average of O(n) operations?
"
460,460,460,25.0,0.1518000066280365,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['statement', 'true', 'password']","Which of these statements is true of passwords?
"
461,461,461,23.0,0.1898999959230423,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['good', 'time', 'complexity', 'for', 'sort', 'sorted', 'list', 'use', 'selection', 'sort']","What is the best time complexity for sorting a sorted list using selection sort?
"
462,462,462,36.0,0.21150000393390656,"number, find, take, step, item, average, many, give, second, if","['equation', 'calculate', 'average', 'number', 'step', 'require', 'for', 'closed', 'hashing']","What is the equation to calculate the average number of steps required for Closed hashing.
"
463,463,463,36.0,0.21709999442100525,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['average', 'case', 'time', 'complexity', 'insertion']","What is the average case time complexity of insertion sort?
"
464,464,464,36.0,0.2137999981641769,"hash, table, bucket, open, insert, close, key, function, slot, closed","['company', 'want', 'store', 'value', 'close', 'hash', 'table', 'use', 'linear_probe', 'find', 'valuesto', 'fast', 'enough', 'require', 'value', 'find', 'step', 'linear_probe', 'averagewhat', 'minimum', 'number', 'bucket', 'use', 'for', 'closed', 'hash', 'table', 'for', 'condition', 'meet']","A company wants to store 10,000 values in a closed hash table using linear probing to find values.To be fast enough, they require values to be found in no more than three steps of linear probing on average.What is the minimum number of buckets that should be used for the closed hash table for this condition to be met?
"
465,465,465,23.0,0.27529999613761896,"hash, table, bucket, open, insert, close, key, function, slot, closed","['consider', 'closed', 'hash', 'table', 'fix', 'size', 'follow', 'approach', 'viable', 'way', 'delete', 'entry', 'sorry']","Consider a Closed Hash Table with a Fixed size. Which of the following approaches is NOT a viable way of deleting entries?(Sorry CL.)
"
466,466,466,23.0,0.3068999946117401,"right, leave, node, process, sub, current, subtree, describe, differ, left","['tree', 'follow', 'order', 'operation', 'process', 'node', 'leave', 'sub', 'tree', 'process', 'node', 'right', 'sub', 'tree', 'process', 'current', 'node']","which tree traversal does the following order of operations:1_ Process the node in the left sub-tree2_ Process the node in the right sub-tree3_ Process the current node
"
467,467,467,52.0,0.08089999854564668,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'false', 'statement', 'for']","Which of the following is a False statement for Shell Sort?
"
468,468,468,36.0,0.09229999780654907,"run, large, fast, term, quicksort, exact, record, partition, question, information","['follow', 'make', 'mergesort', 'ascend', 'order', 'perform', 'large', 'numberof', 'comparison']","Which of the following inputs makes mergesort in ascending order perform the largest numberof comparisons?
"
469,469,469,2.0,0.16110000014305115,"tree, binary, node, avl, search, child, root, follow, height, leaf","['consider', 'follow', 'avl', 'tree', 'insert', 'value', 'sequence', 'rotation', 'would', 'require', 'rebalance', 'tree', 'subtree', 'rotation', 'apply', 'leave', 'unspecified']","Consider the following AVL tree:After inserting the value 7, what sequence of rotations would be required to rebalance the tree?(The subtrees at which rotations are applied are left unspecified)
"
470,470,470,24.0,0.14810000360012054,"option, heap, select, insertionsort, let, selectionsort, technique, design, joke, funny","['let', 'prime', 'qif']","Let p and q be primes such that p*q = N and p != q.If (p-1)(q-1) = 36What is N?
"
471,471,471,0.0,0.1809999942779541,"vertex, edge, graph, change, show, matrix, also, if, formula, name","['show', 'friend', 'whowhich', 'node', 'friend']","This adjacency matrix shows who is friends with who.Which node has the most friends?
"
472,472,472,0.0,0.062199998646974564,"sorted, point, example, final, say, real, divide, word, since, measure",['measure'],"What doesSystem.currentTimeMillis() measure?
"
473,473,473,42.0,0.01669999957084656,"vertex, edge, graph, change, show, matrix, also, if, formula, name",[],"What is 413 mod 7?
"
474,474,474,0.0,0.15710000693798065,"vertex, edge, graph, change, show, matrix, also, if, formula, name","['well', 'way', 'represent', 'graph', 'term', 'memory', 'storage', 'if', 'lot', 'edge', 'vertex']","Which is a better way to represent a graph (in terms of memory storage) if you had lots of edges but few vertices?
"
475,475,475,20.0,0.3747999966144562,"method, size, input, go, exist, elementary_operation, likely, give, use, alphabetical","['certain', 'quadratic', 'time', 'algorithm', 'use', 'elementary_operation', 'process', 'input', 'size', 'likely', 'number', 'elementary_operation', 'if', 'give', 'input', 'size']","A certain quadratic time algorithm uses 4 elementary operations to process an input of size 10.What is the most likely number of elementary operations it will use if given an input of size100?
"
476,476,476,20.0,0.19830000400543213,"for, time, complexity, search, runtime, function, none, follow, correct, give","['runtime', 'for', 'input', 'size', 'whatis', 'asymptotic', 'time', 'complexity']","An algorithm has runtime T(n)=n^2+ n^3+ 55n+108 + 0.0025n^5 for input of size n. Whatis the asymptotic time complexity of this algorithm?
"
477,477,477,29.0,0.1256999969482422,"tree, binary, node, avl, search, child, root, follow, height, leaf","['leave', 'perfectly_balanced', 'binary', 'tree', 'enter', 'number', 'order']","What are the leaves of a perfectly balanced binary tree when you enter numbers in order: 10,8,6,2,11,100,7
"
478,478,478,25.0,0.2797999978065491,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['consider', 'follow', 'skip', 'list', 'if', 'value', 'lane', 'insert', 'lane', 'skip', 'list']","Consider the following skip list. If we were to insert a node with value ""Cameron"" which has 4 lanes and insert a node with value ""Diego"" which has 2 lanes. What does the skip list look like now?
"
479,479,479,25.0,0.1565999984741211,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['suppose', 'avl', 'tree', 'store', 'element', 'alphabetical', 'orderout', 'follow', 'binary', 'tree', 'traversal', 'output', 'tree', 'element', 'alphabetical', 'order']","Suppose you have an AVL tree storing elements in alphabetical order.Out of the following binary tree traversals, which will output the tree elements in alphabetical order?
"
480,480,480,52.0,0.1184000000357628,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['represent', 'node', 'traverse', 'step', 'follow', 'graph']","Which matrix represents the nodes which can be traversed to in 2 steps on the following graph?
"
481,481,481,36.0,0.18809999525547028,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['place', 'follow', 'algorithm', 'order', 'least', 'efficient', 'deal', 'around', 'item', 'bubble', 'sortb', 'quick', 'sortc', 'bucket', 'sortconsider', 'average', 'case', 'complexity']","Place the following algorithms in order of most to least efficient when dealing with around 10,000 items:A: Bubble sortB: Quick sortC: Bucket sortConsider the average case complexities.
"
482,482,482,36.0,0.11249999701976776,"consider, total, first, call, line, nee, decide, xtotal, via, organise","['give', 'lecture', 'line', 'nee', 'go', 'print', 'time', 'take', 'for', 'myclassm', 'run']","Here is some code given in lectures:What line will need to go at X to print the time taken for MyClass.m() to run?
"
483,483,483,2.0,0.2221000045537949,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'tree', 'valid', 'avl', 'tree']","Is the following tree a valid AVL tree?
"
484,484,484,6.0,0.4686999917030335,"node, next, previous, constant, object, pointerthe, follow, private, nodenext, head","['give', 'incomplete', 'code', 'for', 'element', 'prev', 'next', 'class', 'private', 'listnode', 'head', 'private', 'listnode', 'tail', 'null', 'private', 'int', 'method', 'comment', 'outpublic', 'void', 'insert', 'object', 'int', 'if', 'value', 'bound', 'node', 'head', 'for', 'nodenext', 'nodenext', 'nodenext', 'tail', 'nodenext', 'insert', 'method', 'use', 'insert', 'object', 'doubly', 'link', 'list', 'ith', 'position', 'see', 'coursework', 'code', 'must', 'go', 'for', 'method', 'work', 'correctly']","Given the incomplete Java code for the classes DoublyLinkedList and ListNode2:class ListNode2 { Object element; ListNode2 prev = null; ListNode2 next = null;ListNode2(Object e, ListNode2 p, ListNode2 n) { element = e; prev = p; next = n;}}class DoublyLinkedList { private ListNode2 head = null; private ListNode2 tail = null; private int n = 0;//other methods from DoublyLinkedList commented outpublic void insert(Object o, int i) { if (i < 0 || i > n) { System.out.println(""i value out of bounds""); }ListNode2 node = head; for (int j = 0; j < i - 1; j++) { node = node.next; }node.next = new ListNode2(o, node, node.next);Xif (i == n) { tail = node.next;}n++;}The insert method is used to insert object o in doubly linked list at ith position as seen in coursework 2. Which code must go at the place marked with X for the method to work correctly?
"
485,485,485,6.0,0.2345000058412552,"tree, binary, node, avl, search, child, root, follow, height, leaf","['give', 'follow', 'number', 'arrange', 'complete', 'balanced', 'binary', 'search', 'tree', 'follow', 'preordere', 'traversal', 'tree']","Given the following numbers 58, 4, 102, 13, 27, 99, 1, arrange them in a complete balanced binary search tree. Which of the following is the preordered traversal of the tree?
"
486,486,486,2.0,0.2459000051021576,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'statement', 'array', 'list', 'false', 'if', 'none', 'false', 'choose', 'option']","Which of the following statements from a to d about array lists is FALSE? If none of them is false, choose option e.
"
487,487,487,25.0,0.2433999925851822,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['bad', 'case', 'run', 'time', 'complexity', 'selection', 'sort']","What is the worst case run time complexity of selection sort?
"
488,488,488,36.0,0.16359999775886536,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['real', 'world', 'application', 'would', 'link', 'list', 'array', 'list']","In a real world application when would you use a linked list over an array list?
"
489,489,489,25.0,0.18060000240802765,"tree, binary, node, avl, search, child, root, follow, height, leaf","['sentence', 'correctly', 'avl', 'tree']","Finish the sentence correctly:An AVL tree is a ...
"
490,490,490,2.0,0.1243000030517578,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'statement', 'link', 'list', 'true']","Which of the following statements about linked lists is true?
"
491,491,491,25.0,0.1476999968290329,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['follow', 'statement', 'true']","Which of the following statement is not true?
"
492,492,492,36.0,0.1754000037908554,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['bad', 'case', 'scenario', 'big', 'insertion', 'sort']","In the worst case scenario, what is the big-o of insertion sort?
"
493,493,493,36.0,0.12039999663829805,"tree, binary, node, avl, search, child, root, follow, height, leaf","['consider', 'follow', 'binary', 'tree', 'follow', 'traversal', 'true']","Consider the following binary tree, which of the following traversal is true? 15 / \ 7 19 / \ / \ 6 8 16 21
"
494,494,494,2.0,0.21950000524520874,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['link', 'list', 'vs', 'follow', 'false']","Linked List vs Array List comparison.Which of the following is false?
"
495,495,495,25.0,0.17399999499320984,"for, time, complexity, search, runtime, function, none, follow, correct, give","['find', 'bind', 'challenge', 'average', 'run', 'time', 'function', 'int', 'void', 'foo', 'for', 'for', 'for', 'count']","Find the Bound Challenge! (What is the average run time of the function below)int count = 0;void foo(){ for (int i = 0; i <n; i++) for(int j = 0; j < 100*n; j++) for(int k = 0; k < n*m; k++) count++}
"
496,496,496,20.0,0.20970000326633453,"method, size, input, go, exist, elementary_operation, likely, give, use, alphabetical","['ask', 'assignment', 'make', 'class', 'method', 'reverse', 'give', 'incomplete', 'code', 'would', 'suggest', 'put', 'instead', 'for', 'method', 'work']","A user on Stack Overflow has asked you to fudge his coursework to work.His assignment is to make a class, with a method that reverses an array.He gave you the incomplete code in Java.Which code would you suggest him to put instead of a? for the method to work?
"
497,497,497,7.0,0.4472000002861023,"include, answer, expect, consist, lane, skiplist, cubic, program, sqrt, information","['if', 'question', 'first', 'part_http', 'part_http', 'receive', 'information', 'payment', 'client', 'must', 'attempt', 'kill', 'target', 'target', 'press', 'conference', 'recent', 'success', 'look', 'route', 'length', 'give', 'minute', 'use', 'djikstra', 'algorithm', 'minimum', 'time', 'take', 'home', 'conference']","Honda vs Lamborghini pt 4if you haven't answered part 1-3 of this question please do so first:part 1: https://peerwise.cs.auckland.ac.nz/course/main.php?cmd=answerQuestion&id=4250213part 2: https://peerwise.cs.auckland.ac.nz/course/main.php?cmd=answerQuestion&id=4250257part 3: https://peerwise.cs.auckland.ac.nz/course/main.php?cmd=answerQuestion&id=4250259Having received information and payment from a client about a new target the hitman must now attempt to kill his target. The target is having a press conference about their recent success. Looking at his route (lengths given in minutes) and using Djikstra's shortest path algorithm, what is the minimum time it will take him to get from his home at C to the conference at E?
"
498,498,498,7.0,0.2888000011444092,"consider, total, first, call, line, nee, decide, xtotal, via, organise","['if', 'question', 'first', 'part_http', 'answerquestion_id', 'decide', 'good', 'value', 'for', 'money', 'nee', 'communicate', 'need', 'cypher', 'decide', 'ceasar', 'shift', 'key', 'follow', 'message', 'send']","Honda vs Lamborghini pt 3if you havent answered part 1 or two of this question please do so first:part 1: https://peerwise.cs.auckland.ac.nz/course/main.php?cmd=answerQuestion&id=4250213part 2: https://peerwise.cs.auckland.ac.nz/course/main.php?cmd=answerQuestion&id=4250257Having decided on the hitman with the best value for money they now need to communicate with him. But they need to use a cypher to do so. They decide to use a Ceasar shift with key 8. Code the following message to send to the hitman:CEO OF HONDA
"
499,499,499,39.0,0.5002999901771545,"run, large, fast, term, quicksort, exact, record, partition, question, information","['if', 'question', 'follow', 'linkhttps', 'year', 'draw', 'close', 'beat', 'profit', 'due', 'new', 'method', 'store', 'would', 'number', 'vehicle', 'quite', 'embarrassing', 'for', 'director', 'meet', 'beat', 'meet', 'come', 'conclusion', 'choice', 'tor', 'browser', 'site', 'list', 'price', 'time', 'frame', 'success', 'rate', 'decide', 'formula', 'decide', 'good', 'value', 'sort', 'use', 'follow', 'step', 'pick', 'hitman', 'go', 'along', 'list', 'put', 'bad', 'hitman', 'group', 'better', 'group', 'well', 'group', 'repeat', 'process', 'repeat', 'process', 'bad', 'group', 'concatenate', 'sorted', 'group', 'sort', 'listwhat', 'algorithm']","Honda Vs Lamborghini pt 2if you haven't answered part 1 of this question please use the following linkhttps://peerwise.cs.auckland.ac.nz/course/main.php?cmd=answerQuestion&id=4250213As the year draws to a close, Honda is set to beat Lamborghini in profits due to their new method of storing ID numbers of vehicles! This is quite embarrassing for Lamborghini so the board of directors meet to discuss how they can beat Honda. After their meeting, they come to the conclusion they have no other choice but to assassinate the CEO. They download the TOR browser and navigate the dark web to a hitman site. Each hitman listed has a price, a time-frame and a success rate. They decide on a formula to decide which hitman has the best value and then sort them using the following steps:1) pick the first hitman2) Go along the list and put all the worse hitmen in one group and the better in another group3) In this better group they repeat the process. They then repeat this process in the worse group4) They then concatenate the two sorted groups into one sorted listWhat algorithm did they use?
"
500,500,500,39.0,0.16220000386238098,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'good', 'case', 'time', 'complexity', 'for', 'element', 'time', 'complexity', 'tree', 'traversal', 'method', 'for', 'tree', 'node']","Which of the following sorting algorithms has its best case time complexity (for n elements), to be the same as the time complexity of tree traversal methods (for a tree of n nodes)?
"
501,501,501,36.0,0.1623000055551529,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'good', 'case', 'time', 'complexity', 'for', 'element', 'time', 'complexity', 'tree', 'traversal', 'method', 'for', 'tree', 'node']","Which of the following sorting algorithms has its best case time complexity (for n elements), to be the same as the time complexity of tree traversal methods (for a tree of n nodes)?
"
502,502,502,36.0,0.19189999997615811,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['suppose', 'follow', 'avl', 'tree', 'select', 'correct', 'order', 'follow', 'tree', 'traversal', 'way', 'display']","Suppose you have the following AVL tree:Select the correct order in which the following 3 tree traversal ways are displayed: i) A > B > D > E > C > F > Gii) D > B > E > A > F > C > Giii) D > E > B > F > G > C > A
"
503,503,503,52.0,0.18039999902248385,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['data', 'structure', 'algorithm', 'various', 'sort', 'algorithm', 'sorta', 'datum', 'depend', 'various', 'factor', 'may', 'choose', 'different', 'algorithmwhich', 'follow', 'appropriately', 'formally', 'define', 'term', 'sort', 'for', 'sort', 'algorithm']","In data structures and algorithms, we use various sorting algorithms to sorta data. Depending on various factors, we might choose a different algorithm.Which of the following, appropriately and formally defines the term""Sorting"" for a sorting algorithm?
"
504,504,504,2.0,0.2353000044822693,"tree, binary, node, avl, search, child, root, follow, height, leaf","['avl', 'tree', 'make', 'contain', 'node', 'minimum', 'height', 'tree']","An AVL Tree is made containing 35 nodes. What is the minimum height of the tree
"
505,505,505,2.0,0.17170000076293945,"for, time, complexity, search, runtime, function, none, follow, correct, give","['run', 'time', 'for', 'sort', 'algorithm', 'for', 'list', 'size', 'time', 'take', 'second', 'follow', 'run', 'time', 'complexity', 'algorithm']","The run times for a sorting algorithm, for a list size and time taken in seconds , are as follows: = 420, = 69 = 840, = 1104 = 1680, = 17664What is the run time complexity of the algorithm?
"
506,506,506,52.0,0.3610999882221222,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['work', 'bath', 'while', 'work', 'create', 'binary', 'tree', 'deliver', 'power', 'point', 'presentation', 'tree', 'projector', 'look', 'like', 'also', 'pass', 'round', 'handout', 'comment', 'text', 'explain', 'aspect', 'presentationbut', 'environmentally', 'friendly', 'decide', 'save', 'paper', 'print', 'tree', 'line', 'later', 'ask', 'tree', 'tree', 'get', 'output', 'reply']","Before working at the University of Bath, while working in Honda, Dr. Tom Finch created a binary tree about one of Honda's competitors.When delivering the Power Point presentation, the tree on the projector looked like this:He also passed round some handouts, with his comments and text explaining some of the aspects of the presentation.But to be more environmentally friendly, he decided to save some paper, and print the tree in one line:He was later asked:""Which tree traversal algorithm did you use on the binary tree to get this output?""What was his reply?
"
507,507,507,52.0,0.18790000677108765,"start, could, dijkstra, buffer, page, twice, overwrite, circular, nodestraverse, nodetraverse","['start', 'empty', 'circular', 'buffer', 'size', 'allow', 'overwrite', 'insert', 'call', 'remove', 'twice', 'insert', 'if', 'print', 'element', 'buffer', 'order', 'start', 'would', 'print']","Starting with an empty circular buffer of size 7 that allows overwriting:1) Insert: 4 then 1 then 9 then 23) Call Remove twice4) Insert: 3 then 1 then 1 then 8 then 3If I were to print the elements of the buffer in order from the start, what would be printed?
"
508,508,508,32.0,0.17739999294281006,"task, cost, provide, car, location, dealership, factory, row, quickest, alphabetically","['construct', 'graph', 'row', 'column', 'arrange', 'alphabetically', 'follow', 'matrix', 'describe', 'vertex', 'edges_apart']","By constructing the adjacency matrix of the graph below (with rows/columns arranged alphabetically), which of the following matrices describes vertices which are three edges apart?
"
509,509,509,33.0,0.17730000615119934,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['search', 'tree', 'output', 'if', 'perform', 'level', 'order', 'traversal', 'tree']","Insert the arrayinto a Self-BalancingBinary Search Tree. What is the output if you perform a Level-Order Traversal on the tree?
"
510,510,510,52.0,0.09009999781847,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['best', 'describe', 'happen', 'pass', 'ashell', 'sort', 'assume']","Which statement best describes what happens when you sort an array, arr, of length n during one pass of aShell (k-)Sort(assuming k<n)?
"
511,511,511,37.0,0.16220000386238098,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'best', 'suit', 'for', 'recently', 'sort', 'datum']","Which of these sorting is best suited for recently sorted data?
"
512,512,512,36.0,0.13279999792575836,"tree, binary, node, avl, search, child, root, follow, height, leaf","['give', 'follow', 'binary', 'tree', 'method', 'tree', 'traversal', 'would', 'result', 'output']","Given the following binary tree, which method of tree traversal would result in the output:a b d c e f
"
513,513,513,52.0,0.1858000010251999,"hash, table, bucket, open, insert, close, key, function, slot, closed","['calculate', 'step', 'search', 'for', 'insert', 'element', 'open', 'hash', 'table']","How do you calculate steps to search for/insert an element in an OPEN hash table with load factor L?
"
514,514,514,23.0,0.13210000097751615,"run, large, fast, term, quicksort, exact, record, partition, question, information","['follow', 'sort', 'stable', 'if', 'retain', 'order', 'equal', 'elementsie', 'if', 'come', 'unsorted', 'list', 'come', 'sorted', 'list']","Which of the following sorting algorithms is NOT stable?An algorithm is stable if it retains the order of equal elements.Ie: if x = y and x comes before y in the unsorted list, then x will come before y in the sorted list.
"
515,515,515,36.0,0.15309999883174896,"measurement, precision, accuracy, difference, image, significant, definition, regard, accuracylow, accuracyhigh","['difference', 'precision', 'accuracy']","What is the difference between precision and accuracy?
"
516,516,516,41.0,0.2057999968528748,"for, time, complexity, search, runtime, function, none, follow, correct, give","['runtime', 'for', 'input', 'size', 'asymptotic', 'time', 'complexity']","An algorithm has a runtime, for input size n, of T(n)=10000n4+0.075n2+0.091n+102500.What is the asymptotic time complexity of this algorithm?
"
517,517,517,29.0,0.35109999775886536,"for, time, complexity, search, runtime, function, none, follow, correct, give","['time', 'complexity', 'use', 'definition', 'give', 'week', 'fix', 'assume', 'low', 'possible', 'value', 'ofb', 'for', 'definition', 'hold']","An algorithmhas time complexity. Using the Definition of Big-Oh as given in the 2019 Week 1a Lecture (slide 14), fix B = 5.Assuming, what is the lowest possible value ofb for which the definition holds?
"
518,518,518,38.0,0.6049000024795532,"datum, structure, data, space, implement, possible, memory, store, work, for","['phone', 'network', 'provider', 'wish', 'store', 'mobile', 'number', 'for', 'customer', 'large', 'amount', 'people', 'application', 'need', 'able', 'remove', 'new', 'mobile', 'number', 'quickly', 'for', 'customer', 'join', 'leave', 'provider', 'company', 'want', 'able', 'determine', 'quickly', 'whether', 'individual', 'specific', 'name', 'customer', 'able', 'retrieve', 'phone', 'number', 'datum', 'structure', 'would', 'appropriate', 'store', 'phone', 'number', 'memory']","A phone network provider wishes to store the mobile numbers for their customers (a large amount of people). The application needs to be able to add and remove new mobile numbers quickly, for when a customer joins or leaves the provider, and the company wants to be able to determine quickly whether an individual with a specific name is a customer, and be able to retrieve their phone number. Which data structure would be MOST appropriate to store the phone numbers in memory?
"
519,519,519,33.0,0.5875999927520752,"task, cost, provide, car, location, dealership, factory, row, quickest, alphabetically","['suppose', 'employee', 'sale', 'department', 'large', 'car', 'manufacture', 'company', 'task', 'reduce', 'cost', 'transport', 'new', 'car', 'dealership', 'factory', 'order', 'maximise', 'profitsbelow', 'graph', 'cost', 'associate', 'deliver', 'single', 'car', 'dealership', 'location', 'factory', 'location', 'use', 'djikstra', 'algorithm', 'calculate', 'cheap', 'cost', 'deliver', 'dealership', 'factory']","Suppose that you are an employee in the sales department at a large car manufacturing company, (i.e. Honda). Your boss has tasked you with reducing the cost of transporting new cars to dealerships from the factory, in order to maximise profits.Below is a graph with the costs associated with delivering a single car to dealerships from other locations, our factory is at location A. Using Djikstra's Algorithm, calculate the cheapest costs to deliver to each dealership from our factory at A.
"
520,520,520,33.0,0.25209999084472656,"tree, binary, node, avl, search, child, root, follow, height, leaf","['provide', 'follow', 'number', 'if', 'perfectly_balanced', 'binary', 'search', 'tree', 'construct', 'array', 'number', 'root', 'node']","An array is provided with the following numbers: {16, 87, 54, 98, 61, 33, 74}. If a perfectly balanced binary search tree is constructed from this array, which number will be in the root node?
"
521,521,521,2.0,0.10620000213384627,"low, require, many, swap, perform, static, hard, partition, growth_rate, sortbubble","['function', 'low', 'growth_rate']","Which of these functions has the lowest growth rate?
"
522,522,522,47.0,0.2099000066518784,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['order', 'vertex', 'settle', 'apply', 'graph', 'determine', 'length', 'short', 'path', 'vertex']","In what order are the vertices 'settled' whenDijkstra’s Algorithm is applied to the below graph to determine the lengths of the shortest paths from A to all other vertices?
"
523,523,523,47.0,0.11089999973773956,"datum, structure, data, space, implement, possible, memory, store, work, for","['follow', 'search', 'algorithm', 'perform', 'good', 'give', 'much', 'memory', 'need', 'apply', 'appropiate', 'data', 'structure']","Which of the following searching algorithms performs the best giving that we have as much memory as needed and we apply them to the most appropiate data structures.
"
524,524,524,2.0,0.22139999270439148,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'bst', 'valid', 'avl', 'tree']","Which of the following BSTs is not a valid AVL Tree?
"
525,525,525,2.0,0.2295999974012375,"tree, binary, node, avl, search, child, root, follow, height, leaf","['picture', 'show', 'balanced', 'avl', 'tree', 'balanced', 'avl', 'tree', 'look_like']","The picture below shows a balanced AVL Tree.If I were to insert 10 (or '0010') into the tree. What will the balanced AVL Tree look like after?
"
526,526,526,2.0,0.21320000290870667,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'comparison', 'sort', 'algorithm']","Which one of the following sorting algorithms, is a non-comparison sorting algorithm?
"
527,527,527,36.0,0.12319999933242798,"hash, table, bucket, open, insert, close, key, function, slot, closed","['follow', 'hash', 'function', 'current', 'reccomendation']","Which one of the following hash functions is the current reccomendation?
"
528,528,528,36.0,0.2045000046491623,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'use', 'sort', 'part', 'alogorithm']","Which of the following sorting algorithms, uses h-sorting as part of its alogorithm?
"
529,529,529,36.0,0.23019999265670776,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['time', 'complexity', 'tree', 'traversal', 'method', 'binary', 'treeie', 'pre', 'order', 'post', 'order']","What is the time complexity of Tree traversal Methods in a binary tree?i.e. Pre-Order, Post-Order etc
"
530,530,530,52.0,0.16419999301433566,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['for', 'follow', 'binary', 'tree', 'tree', 'traversal', 'method', 'would', 'print', 'follow', 'outputoutput']","For the following binary tree, which tree traversal method would print the following output?Output : d e b f g c a
"
531,531,531,52.0,0.05700000002980232,"make, good, different, worst, maintain, aka, identify, complexitie, namortise, description","['requirement', 'for', 'good', 'cryptographic', 'hash']","Which of these is not a requirement for a good cryptographic hash?
"
532,532,532,26.0,0.2712999880313873,"pass, send, initial, replace, message, public_key, alice, necessary, publish, generate","['consider', 'question', 'cryptography', 'ensure', 'replace', 'alice', 'public_key', 'alice']","Consider this question on cryptography: To ensure Eve doesn't replace Alice's public key with her own, what can Alice do?
"
533,533,533,26.0,0.06360000371932982,"remove, base, set, implementation, insert, may, allow, incorrect, entity, limited","['system', 'base']","What is the RSA encryption system based on?
"
534,534,534,51.0,0.155799999833107,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['run', 'sort', 'shellsorting', 'follow', 'sort', 'sort', 'follow', 'array', 'give', 'follow', 'array']","Running a 7-sort (Shellsorting) followed by a 4-sort and then a 2-sort on the following array [10,5,7,11,15,3,4,9] will give which of the following arrays.
"
535,535,535,36.0,0.17679999768733978,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['quick', 'sort', 'ascend', 'nlogn', 'complexity']","When is quick sort (ascending) not of O(nlogn) complexity?
"
536,536,536,23.0,0.27140000462532043,"hash, table, bucket, open, insert, close, key, function, slot, closed","['closed', 'hash', 'table', 'use', 'linear_probe', 'hash', 'algorithm', 'use', 'if', 'remove', 'would', 'hash', 'table', 'break']","This is a closed hash table that uses linear probing:[7,4,3,5, ,11, , ,12, , , , ]This is the hashing algorithm it uses: h(x) = (x2- 7x) % 13If we were to remove 4, would our hash table break?
"
537,537,537,23.0,0.3061999976634979,"number, find, take, step, item, average, many, give, second, if","['use', 'formula', 'taught', 'lecture', 'average', 'number', 'step', 'take', 'find', 'element', 'close', 'hash', 'table', 'use', 'linear_probe', 'many', 'step', 'take', 'find', 'if', 'hash', 'algorithmhash', 'table', 'hashing', 'hash', 'table', 'total', 'bucket']","Using the formula we were taught in lectures, what is the average number of steps it will take to find an element in this closed hash table using linear probing? And, how many steps will it take to find '4' if we use this hashing algorithm?Hash Table:[ , , , ,12,1,4,7]Hashing Algorithm:(x2-4) % 8(Hint: Hash table has 8 total buckets)
"
538,538,538,40.0,0.17710000276565552,"pass, send, initial, replace, message, public_key, alice, necessary, publish, generate","['follow', 'procedure', 'describe', 'elgamal', 'public_key', 'cryptography']","Which of the following procedures describes ElGamal public key cryptography?
"
539,539,539,26.0,0.09780000150203703,"comparison, minimum, span, decision, edgesis, among, stooge, parallelize, reach, shape","['option', 'property', 'minimum', 'span', 'tree']","Which of these options is NOT properties of minimum spanning tree?
"
540,540,540,44.0,0.06379999965429306,"low, require, many, swap, perform, static, hard, partition, growth_rate, sortbubble",['recursion'],"What does recursion do?
"
541,541,541,25.0,0.26820001006126404,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'advantage', 'use', 'singly', 'link', 'list', 'instead', 'array']","Which of the following is NOT an advantage of using a singly Linked List instead of an array?
"
542,542,542,25.0,0.11890000104904175,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'statement', 'avl', 'tree', 'true']","Which of the following statements about AVL trees is NOT true?
"
543,543,543,17.0,0.1348000019788742,"number, find, take, step, item, average, many, give, second, if","['average', 'bst', 'value', 'many', 'step', 'typically', 'require', 'find', 'value']","In an average BST with n values, how many steps are typically required to find a value?
"
544,544,544,36.0,0.15320000052452087,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'algorithm', 'stable']","Which sorting algorithms are stable?
"
545,545,545,29.0,0.5085999965667725,"for, time, complexity, search, runtime, function, none, follow, correct, give","['accord', 'follow', 'source', 'code', 'file', 'statement', 'code', 'theformula', 'for', 'elementary', 'for', 'big', 'complexity', 'class', 'code', 'measure', 'runtime', 'code', 'time', 'average', 'running', 'time', 'get', 'fairly', 'precise', 'runtime', 'change', 'type', 'input', 'output', 'stringbuffer', 'resultappend', 'reduce', 'runtime', 'follow', 'statement', 'true']","According to thethe following source code file StringRepeater.java:There are four statements about this code:(1). Theformula for the elementary operationsin this code is T(n)= 4+4n.(2). For big n, the complexity class of this code is O(n^2).(3).To measure the runtime of this code, we can test this code in 500 times or more, and average the running time to get a fairly precise runtime.(4).Changing the type of the input and output as StringBuffer, and change the loop code ""result.append(s)"" can reduce the runtime of the code.Which of the following statements are true?
"
546,546,546,29.0,0.13619999587535858,"vertex, edge, graph, change, show, matrix, also, if, formula, name","['piece', 'code', 'run', 'simultaneously', 'know']","Two or more pieces of code running simultaneously are known as what?
"
547,547,547,23.0,0.2610999941825867,"hash, table, bucket, open, insert, close, key, function, slot, closed","['suppose', 'follow', 'hash', 'table', 'implement', 'use', 'linear_probing', 'hash', 'function', 'use', 'function', 'element', 'enter', 'follow', 'order', 'element', 'could', 'add', 'table', 'iv']","Suppose you have the following hash table, implemented using linear probing, and that the hash function we are using is the function, h(x) = x mod 9.0 1 2 3 4 5 6 7 8 [hash ids]9 18 12 3 14 4 21 [elements entered]Which of the following are orders in which the elements could have been added to the table:(i) 9, 14, 4, 18, 12, 3, 21(ii) 12, 3, 14, 18, 4, 9, 21(iii) 12, 14, 3, 9, 4, 18, 21(iv) 9, 12, 14, 3, 4, 21, 18(v) 12, 9, 18, 3, 14, 21, 4 ?
"
548,548,548,23.0,0.06570000201463701,"vertex, edge, graph, change, show, matrix, also, if, formula, name","['rather', 'adjacency', 'list']","When should you use an adjacency matrix rather than an adjacency list?
"
549,549,549,0.0,0.15880000591278076,"for, time, complexity, search, runtime, function, none, follow, correct, give","['consider', 'sort', 'take', 'sort', 'random', 'array', 'size', 'input', 'array', 'second', 'for', 'input', 'for', 'second', 'for', 'input', 'for', 'second', 'for', 'input', 'for']","Consider a sorting algorithm which takes ... to sort a random array (n being the size of the input array)- 10 seconds for an input for n = 100- 10 seconds for an input for n = 1000- 10 seconds for an input for n = 10,000
"
550,550,550,40.0,0.1615999937057495,"number, find, take, step, item, average, many, give, second, if","['implementation', 'selection', 'take', 'second', 'sort', 'random', 'integer', 'long', 'algorithm', 'likely', 'take', 'sort', 'random', 'integer']","An implementation of the selection sort algorithm takes 2 seconds to sort 10^5 random Integers. How long will the same algorithm likely take to sort 10^6 random integers?
"
551,551,551,40.0,0.18359999358654025,"tree, binary, node, avl, search, child, root, follow, height, leaf","['work', 'perfectly_balanced', 'binary', 'avl', 'tree', 'consist', 'value', 'traverse', 'start', 'finish', 'follow', 'output', 'give', 'type', 'use']","When working with a perfectly balanced, binary, AVL tree consisting of the values[84,112,201,267,273,1023,1749,2044] by traversing from start to finish the following output is given:84,201,267,112,1023,2044,1749,273What type of transversal was used?
"
552,552,552,52.0,0.2029000073671341,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'efficient', 'unstable', 'sort', 'algorithm', 'base', 'time']","Which of the following is the most efficient unstable sorting algorithm based on time complexity?
"
553,553,553,36.0,0.2029000073671341,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'efficient', 'unstable', 'sort', 'algorithm', 'base', 'time']","Which of the following is the most efficient unstable sorting algorithm based on time complexity?
"
554,554,554,36.0,0.14030000567436218,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'stable', 'sorting', 'method']","Which of the following is a stable sorting method?
"
555,555,555,36.0,0.06360000371932982,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['carey_rule', 'sort']","Which one of these is one of Carey's rules of sorting
"
556,556,556,12.0,0.06360000371932982,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['carey_rule', 'sort']","Which one of these is one of Carey's rules of sorting
"
557,557,557,12.0,0.14509999752044678,"hash, table, bucket, open, insert, close, key, function, slot, closed","['calculate', 'for', 'hash', 'table']","How do you calculate the load factor for a Hash Table
"
558,558,558,23.0,0.14509999752044678,"hash, table, bucket, open, insert, close, key, function, slot, closed","['calculate', 'for', 'hash', 'table']","How do you calculate the load factor for a Hash Table
"
559,559,559,23.0,0.15309999883174896,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['singly', 'link', 'list']","What are singly linked lists?
"
560,560,560,25.0,0.21969999372959134,"hash, table, bucket, open, insert, close, key, function, slot, closed","['remove', 'item', 'issue', 'close', 'hash', 'table', 'utilise', 'linear_probe', 'handle', 'collision']","Why is removing an item an issue in closed hash tables that utilised linear probing to handle collisions?
"
561,561,561,23.0,0.11190000176429747,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['statement', 'true']","Which ONE statement out of these are true?
"
562,562,562,24.0,0.1873999983072281,"hash, table, bucket, open, insert, close, key, function, slot, closed","['purpose', 'linear_probing', 'hash', 'table']","What is the purpose of linear probing in hash tables?
"
563,563,563,23.0,0.13459999859333038,"hash, table, bucket, open, insert, close, key, function, slot, closed","['right', 'description', 'for', 'load', 'hash', 'table']","Which of these is the right description for the load of a hash table?
"
564,564,564,23.0,0.10329999774694444,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'property']","Which of the following is not a property of the Upper Bound O(n)?
"
565,565,565,35.0,0.15410000085830688,"tree, binary, node, avl, search, child, root, follow, height, leaf","['would', 'correctly', 'balance', 'binary', 'avl', 'tree', 'consist', 'value']","Which of these would be a correctly balanced, binary, AVL tree consisting of the values [84,112,201,267,273,1023,1749,2044]?
"
566,566,566,29.0,0.19140000641345975,"for, time, complexity, search, runtime, function, none, follow, correct, give","['follow', 'correct', 'time', 'complexity', 'for', 'follow', 'sort', 'algorithm']","Which of the following has the correct time complexities for the following sorting algorithms.
"
567,567,567,36.0,0.07370000332593918,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['follow', 'scenario', 'would', 'adjacency', 'list']","Which of the following scenarios would use an adjacency matrix over an adjacency list?
"
568,568,568,18.0,0.1623000055551529,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'best', 'describe', 'doubly', 'link', 'list']","Which of the following best describes a doubly linked list?
"
569,569,569,6.0,0.13850000500679016,"for, time, complexity, search, runtime, function, none, follow, correct, give","['big', 'omega', 'mean', 'use', 'for', 'estimate', 'complexity', 'run', 'time', 'instruction', 'require']","When are O(Big-Oh), ?(Big-Theta), and O(Big-Omega), meant to be used for estimating complexity/run times/instructions required?
"
570,570,570,48.0,0.15960000455379486,"hash, table, bucket, open, insert, close, key, function, slot, closed","['type', 'hash', 'table', 'linear_probing', 'use']","In what type of hash table is linear probing used?
"
571,571,571,23.0,0.11190000176429747,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'unstable']","Which of these sorts is unstable?
"
572,572,572,36.0,0.15299999713897705,"tree, binary, node, avl, search, child, root, follow, height, leaf","['for', 'follow', 'avl', 'tree', 'tree', 'result', 'add', 'string']","for the following AVL tree, what tree will be the result of adding the string ""10"" 5 / \ 2 7 / \ / \ 0 3 6 9
"
573,573,573,2.0,0.14830000698566434,"hash, table, bucket, open, insert, close, key, function, slot, closed","['follow', 'true', 'for', 'open', 'hash', 'table']","Which of the following is NOT true for an open hash table:
"
574,574,574,23.0,0.10589999705553056,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['definition', 'direct', 'graph']","Which of these is the definition of a directed graph?
"
575,575,575,0.0,0.1851000040769577,"hash, table, bucket, open, insert, close, key, function, slot, closed","['closed', 'hash', 'table', 'slot', 'number', 'element', 'store', 'hash', 'table', 'currently', 'average', 'number', 'step', 'need', 'find', 'element']","There is a closed hash table with 120 slots, the number of elements stored in this hash table currently is 90.What is the average number of steps needed to find an element?
"
576,576,576,23.0,0.1800999939441681,"for, time, complexity, search, runtime, function, none, follow, correct, give","['complexity', 'for', 'intree', 'method', 'for', 'binary', 'avl', 'tree', 'height', 'layer']","What is the worstcase complexity for the ""inTree"" method for a binary AVL tree with height of m layers?
"
577,577,577,35.0,0.20280000567436215,"int, if, for, while, return, follow, code, mean, sum, new","['complexity', 'follow', 'algorithmfor', 'int', 'for', 'int', 'dothething']","What is the complexity of the following algorithm?for (int i=0; i<n; i++){ for (int j=1; j<n; j=j*2){ doTheThing; }}
"
578,578,578,35.0,0.15289999544620514,"tree, binary, node, avl, search, child, root, follow, height, leaf","['valid', 'avl', 'tree']","Which of these IS a valid AVL Tree?
"
579,579,579,2.0,0.10189999639987946,"datum, structure, data, space, implement, possible, memory, store, work, for","['follow', 'statement', 'datum', 'structure', 'false']","Which of the following statements about linear data structures is FALSE?
"
580,580,580,25.0,0.1055999994277954,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['for', 'direct', 'graph']","What is the adjacency matrix for this directed graph?
"
581,581,581,36.0,0.15320000052452087,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['stable', 'sort', 'algorithm']","What is the definition of a stable sorting algorithm?
"
582,582,582,36.0,0.15320000052452087,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['stable', 'sort', 'algorithm']","What is the definition of a stable sorting algorithm?
"
583,583,583,36.0,0.11829999834299088,"for, time, complexity, search, runtime, function, none, follow, correct, give","['average', 'performance', 'for', 'insertion']","What is the average performance for insertion sort?
"
584,584,584,29.0,0.17669999599456787,"for, time, complexity, search, runtime, function, none, follow, correct, give","['give', 'selection', 'sort', 'time', 'complexity', 'for', 'unsorte', 'set', 'data', 'time', 'complexity', 'selection', 'sort', 'for', 'sorted', 'set', 'datum']","Given that selection sort has a time complexity of O(n^2) for an unsorted set of data, what is the time complexity of selection sort for a sorted set of data?
"
585,585,585,29.0,0.1647000014781952,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'best', 'describe', 'full', 'binary', 'tree']","Which of the following best describes a full binary tree?
"
586,586,586,17.0,0.15309999883174896,"hash, table, bucket, open, insert, close, key, function, slot, closed","['collision', 'hash', 'table']","A collision in a hash table is:
"
587,587,587,23.0,0.2069000005722046,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['bad', 'case', 'complexity', 'quick', 'sort', 'scenario', 'occur']","What is the worst case complexity of quick sort and in what scenario will this occur?
"
588,588,588,12.0,0.10350000113248824,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['order', 'for', 'traversal', 'binary', 'tree', 'element']","What is the order for traversal of a binary tree with n elements?
"
589,589,589,36.0,0.21150000393390656,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['case', 'run', 'time', 'complexity', 'merge', 'sort']","What is the wprst case run time complexity of merge sort?
"
590,590,590,17.0,0.1979999989271164,"right, leave, node, process, sub, current, subtree, describe, differ, left","['type', 'binary', 'tree', 'traversal', 'process', 'describe', 'step', 'traverse', 'leave', 'subtreestep', 'traverse', 'right', 'subtreestep', 'visit', 'root']","What type of binary tree traversal does this process describe?:Step 1. Traverse the left subtreeStep 2. Traverse the right subtreeStep 3. Visit the root
"
591,591,591,17.0,0.14740000665187836,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['follow', 'statement', 'true']","Which of the following statements are true?:
"
592,592,592,36.0,0.24699999392032626,"for, time, complexity, search, runtime, function, none, follow, correct, give","['type', 'search', 'sequential', 'search', 'check', 'element', 'list', 'match', 'find', 'whole', 'list', 'search', 'describe', 'search', 'algorithm']","""In this type of search, a sequential search checks each element of a list, one by one, until a match is found or the whole list has been searched""Describes which searching algorithm?
"
593,593,593,29.0,0.13210000097751615,"for, time, complexity, search, runtime, function, none, follow, correct, give","['give', 'final', 'value', 'algorithmint', 'for', 'for']","Given n = 4, what is the final value of k in the below algorithm.int k = 0;for (int i=0; i<n; i++){ for (int j=n; j>0; j=j/2){ k++; }}
"
594,594,594,29.0,0.13019999861717224,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['different', 'algorithm', 'accomplish', 'give', 'task', 'algorithm', 'run', 'run', 'time', 'maximum', 'value', 'algorithm', 'time', 'use']","You have two different algorithms to accomplish a given task. One algorithm runs in time 2nand another runs in 500 time. The maximum value of n in the algorithm is 10. What run time should be used?
"
595,595,595,36.0,0.1128999963402748,"choose, log, type, small, wrong, memory, requirement, meet, back, book","['efficient', 'type', 'number', 'choose', 'decide', 'size', 'hash', 'table']","What is the most efficient type of number to choose when decided on the size of a hash table?
"
596,596,596,29.0,0.2038999944925308,"for, time, complexity, search, runtime, function, none, follow, correct, give","['give', 'final', 'value', 'algorithm', 'run', 'time', 'complexity', 'call', 'oint', 'for', 'for']","Given n = 5, what will be the final value of k in the algorithm below & what is it's run time complexity, which we'll call O?int k = 0;for (int i=0; i<n; i++){ for (int j=i; j<n; j++){ k = k++; }}
"
597,597,597,29.0,0.1445000022649765,"tree, binary, node, avl, search, child, root, follow, height, leaf","['rough', 'value', 'bound', 'maximum', 'height', 'avl', 'tree']","What rough value bounds the maximum height of an AVL tree
"
598,598,598,2.0,0.2296999990940094,"hash, table, bucket, open, insert, close, key, function, slot, closed","['follow', 'answer', 'describe', 'correct', 'process', 'collision', 'handling', 'close', 'hash', 'table', 'linear_probing']","Which of the following answers describes the correct process of collision handling in a closed hash table with linear probing?
"
599,599,599,23.0,0.17030000686645508,"int, if, for, while, return, follow, code, mean, sum, new","['complexity', 'follow', 'codeint', 'int', 'count', 'for', 'for', 'count', 'return', 'count']","What is the complexity of the following code?int f( int n, int m) { int count = 0; for (int i = n; i > 0; i--) { for (int j = 0; j < m; j = j + 2) { count++; } } return count;}
"
600,600,600,35.0,0.0908999964594841,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'statement', 'false']","Which of the following statements is false?
"
601,601,601,36.0,0.094200000166893,"hash, table, bucket, open, insert, close, key, function, slot, closed","['formula', 'provide', 'theload', 'factor', 'hash', 'table']","Which of these formulas will provide theload factor of a hash table?
"
602,602,602,23.0,0.19840000569820404,"hash, table, bucket, open, insert, close, key, function, slot, closed","['difference', 'open', 'closed', 'hash', 'table']","What's the difference between an open and closed hash table?
"
603,603,603,23.0,0.07320000231266023,"for, time, complexity, search, runtime, function, none, follow, correct, give","['average', 'runtime', 'list']","What is the average runtime of Skip List?
"
604,604,604,2.0,0.21559999883174896,"tree, binary, node, avl, search, child, root, follow, height, leaf","['implement', 'binary', 'search', 'tree', 'bst', 'follow', 'statement', 'true', 'bst']","I am implementing a Binary Search Tree (BST). Which of the following statements do not have to be true about my BST?
"
605,605,605,2.0,0.09769999980926514,"datum, structure, data, space, implement, possible, memory, store, work, for","['sort', 'theworst', 'space', 'efficiency']","Which of these sorting algorithms has theworst space efficiency?
"
606,606,606,36.0,0.10140000283718108,"for, time, complexity, search, runtime, function, none, follow, correct, give","['transitivity', 'term', 'time', 'complexity']","What is transitivity? In terms of time complexity.
"
607,607,607,29.0,0.1242000013589859,"tree, binary, node, avl, search, child, root, follow, height, leaf","['add', 'new', 'node', 'follow', 'order', 'tree', 'insertion', 'find', 'value', 'node', 'base']","Add new nodes with the following datas in order : 50, 76, 21, 4, 32, 100, 64, 52, use the tree insertion algorithm, find out the value which the node based on.
"
608,608,608,2.0,0.12809999287128448,"tree, binary, node, avl, search, child, root, follow, height, leaf","['depth', 'first', 'search', 'equivalent', 'traversal', 'binary', 'tree']","Depth First Search is equivalent to which of the traversal in the Binary Trees?
"
609,609,609,52.0,0.1437000036239624,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['average', 'runtime', 'complexity', 'array', 'list', 'add', 'operation', 'if', 'resize', 'double', 'array', 'size']","What is the average runtime complexity of an Array list's add operation? (if resize doubles array size)
"
610,610,610,23.0,0.3287000060081482,"hash, table, bucket, open, insert, close, key, function, slot, closed","['follow', 'advantage', 'use', 'open', 'hash', 'table', 'close', 'hash', 'table']","Which of the following is NOT an advantage of using open hash table over closed hash table.
"
611,611,611,23.0,0.06629999727010727,"true, statement, big, follow, planation, factor, notation, position, rule, omega",['statement'],"Which statement is false?
"
612,612,612,36.0,0.13269999623298645,"pointer, ascend, head, update, define, temp, part, divisible, four_five, withelement","['tree', 'equivalent', 'link', 'list', 'head', 'pointer']","What is the tree equivalent of a linked-list 'head' pointer?
"
613,613,613,2.0,0.1243000030517578,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['operation', 'low', 'average', 'runtime', 'complexity', 'singly', 'link', 'list']","What operation has the lowest average runtime complexity in a singly linked list.
"
614,614,614,25.0,0.10119999945163727,"tree, binary, node, avl, search, child, root, follow, height, leaf","['traversal', 'binary', 'tree']","1, 3, 7, 8, 9, 11 is a _________ traversal of this binary tree.
"
615,615,615,30.0,0.3251000046730041,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['sort', 'number', 'list', 'unique', 'intsfor', 'int', 'position', 'position', 'numberslength', 'position', 'int', 'currentindex', 'position', 'while', 'true', 'if', 'currentindex', 'break', 'if', 'number', 'currentindex', 'number', 'currentindex', 'temp', 'number', 'currentindex', 'number', 'number', 'number', 'else', 'break']","Which sorting algorithm does this piece of code belong to?Note: numbers is a list of unique ints.for (int position=1; position < numbers.length; position+=1) { int currentIndex = position; while (true) { if (currentIndex == 0) { break; } if (numbers[currentIndex] < numbers[currentIndex-1]) { int temp = numbers[currentIndex-1]; numbers[currentIndex-1] = numbers[currentIndex]; numbers[currentIndex] = temp; currentIndex-=1; } else { break; } }}
"
616,616,616,30.0,0.21690000593662265,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'bad', 'average', 'time', 'complexity']","Which sorting algorithm has the worst average time complexity (?)
"
617,617,617,35.0,0.29989999532699585,"int, if, for, while, return, follow, code, mean, sum, new","['follow', 'code', 'for', 'insertion', 'sort', 'select', 'option', 'insertionsort', 'int', 'array', 'int', 'alength', 'for', 'int', 'int', 'key', 'int', 'while', 'compareto', 'key']","The following code is for an insertion sort. Select from the options below, the line of code which should replace Xpublic static void insertionSort(int[] array) { int[] a = array; int n = a.length; for (int i=1; i<n; ++i){ int key = a[i]; int j = i-1; while (j>=0 && a[j].compareTo(key) > 0){ a[j+1] = a[j]; j = j-1; } X }}
"
618,618,618,35.0,0.2433999925851822,"int, if, for, while, return, follow, code, mean, sum, new","['correctly', 'describe', 'complexity', 'follow', 'int', 'for', 'systemoutprint', 'for', 'double', 'systemoutprint', 'goodbye', 'world']","Which one correctly describes the complexity of the following code fragment?for (int i = 1; i < n; i = i * 2){ for(int j = n; j > 0; j--) { System.out.print(""hello world""); }}for (double i = n; i > 1; i = i / 2){ System.out.print(""goodbye world"");}
"
619,619,619,35.0,0.14110000431537628,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['post', 'traversal', 'tree']","A post order traversal of the tree; [a] / \ [b] [c]
"
620,620,620,25.0,0.16699999570846558,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'statement', 'doubly', 'link', 'list', 'true']","Which of the following statements about doubly-linked lists is true?
"
621,621,621,25.0,0.2071000039577484,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'statement', 'link', 'list', 'false']","Which of the following statements about linked lists is false?
"
622,622,622,25.0,0.4884999990463257,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'statement', 'list', 'resize', 'whereas', 'gap', 'list', 'whereas', 'standard', 'array', 'can', 'linear', 'search', 'list', 'slow', 'element', 'array', 'datum', 'type', 'whereas', 'array', 'list', 'primitive', 'non', 'primitive', 'datum', 'type', 'array', 'list', 'always', 'single', 'dimensional', 'however', 'array', 'also', 'multi', 'dimensional']","Which of the following statements about array lists and arrays in java are false1.Array lists can be resized whereas arrays can't.2.Array lists can have gaps in the list whereas a standard array cannot.3. A linear search in an array list is slower than in an array (where both have the same elements).4. An array can be of a primitive data type whereas an array list can be of a primitive or non-primitive data type.5. Array lists are always single dimensional however arrays can also be multi-dimensional.
"
623,623,623,25.0,0.30090001225471497,"number, find, take, step, item, average, many, give, second, if","['equation', 'for', 'find', 'average', 'number', 'step', 'for', 'insert', 'find', 'item', 'hash', 'table', 'equation', 'average', 'number', 'step', 'find', 'bucket', 'for', 'hash', 'table', 'full']","What is the equation for finding the average number of steps for inserting/finding an item in a hash table? With this equation, what is the average number of steps to find a bucket for a hash table that is 80% full?
"
624,624,624,40.0,0.09799999743700027,"hash, table, bucket, open, insert, close, key, function, slot, closed","['correct', 'formula', 'for', 'hash', 'table']","What is the correct formula for the load factor of a hash table?
"
625,625,625,36.0,0.334199994802475,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'best', 'quick', 'bad', 'case', 'time', 'complexity']","Which of the following sorting algorithms has the best/ quickest WORST CASE time complexity?
"
626,626,626,36.0,0.18690000474452967,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'stable']","Which of the following sorting algorithms is stable?
"
627,627,627,36.0,0.11469999700784685,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'statement', 'basic', 'tree', 'false']","Which of the following statements about basic trees is false?
"
628,628,628,2.0,0.3156000077724457,"datum, structure, data, space, implement, possible, memory, store, work, for","['task', 'programming', 'sort', 'large', 'data', 'set', 'powerful', 'computer', 'important', 'part', 'company', 'time', 'critical', 'safety', 'application', 'tell', 'complete', 'sort', 'quickly', 'possible', 'case', 'big', 'priority', 'appropriate', 'choice', 'algorithm']","I am tasked with programming a sorting algorithm with large data-sets on a powerful computer. This is an important part of my company's time-critical, safety application. I'm told that completing the sorting very quickly- in all possible cases - is the biggest priority. What's the appropriate choice of algorithm?
"
629,629,629,38.0,0.08420000225305557,"store, close, want, difficulty, label, stepsopen, hashtable, collisionsthis, counter, presume","['question', 'consider', 'for', 'store', 'position', 'array', 'position', 'child', 'store']","In this question we'll consider the Abstract Data Type: Heaps.If the data for a node in a heap is stored in position i in an array, what positions will its children be stored in?
"
630,630,630,2.0,0.10119999945163727,"slow, fastest, linked, experimental, inefficient, factorial, gs, tocheck, jump, listd","['complexitie', 'fastest', 'slow', 'log', 'nlog']","Sort the algorithm complexities from fastest to slowest when n = 100.1. 1502. 50n3. 5n^24. log(3000n)5. 6nlog(400n)
"
631,631,631,29.0,0.15209999680519104,"for, time, complexity, search, runtime, function, none, follow, correct, give","['average', 'runtime', 'complexity', 'binary', 'tree', 'search']","What is the average runtime complexity of a binary tree search?
"
632,632,632,29.0,0.2721000015735626,"for, time, complexity, search, runtime, function, none, follow, correct, give","['consider', 'function', 'for', 'follow', 'correct', 'definition', 'for', 'bind']","Consider functions g(n) and f(n) with g(n) >0 and f(n) >0 for n>0.Which of the following is the correct definition for the exact bound?
"
633,633,633,23.0,0.33709999918937683,"hash, table, bucket, open, insert, close, key, function, slot, closed","['plan', 'store', 'datum', 'close', 'hash', 'table', 'linear_probe', 'right', 'hash', 'function', 'use', 'meaning', 'slot', 'hash', 'table', 'insert', 'element', 'order', 'would', 'end', 'result']","You plan to store data in a closed hash table with linear probing to the right. The hash function you are using is h(x) = x % 7, meaning there are 7 slots in your hash table; 0,1,2,3,4,5,6. Inserting the elements 22, 8, 5, 26, 4, 13, 9 in that order, what would be the end result?
"
634,634,634,23.0,0.10249999910593033,"element, add, index, end, move, place, ie, first, assume, contain","['fastest', 'good', 'case', 'assume', 'element', 'distinct']","Which of these algorithms have the fastest best case?(assume all elements are distinct)
"
635,635,635,36.0,0.2055000066757202,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['good', 'comparison', 'algorithm', 'perform', 'average', 'bad', 'case']","What is the best a comparison sort algorithm can perform in the average or worst case?
"
636,636,636,39.0,0.2556999921798706,"run, large, fast, term, quicksort, exact, record, partition, question, information","['suppose', 'different', 'integer', 'length', 'wish', 'order', 'also', 'suppose', 'array', 'already', 'completely', 'order', 'while', 'rest', 'remain', 'random', 'unfortunately', 'know', 'value', 'term', 'become', 'efficient', 'say', 'insertion', 'sort', 'rather', 'quick', 'sort', 'ensure', 'arrays', 'correctly', 'order', 'minimal', 'time', 'may', 'assume', 'exact', 'bind', 'precise', 'number', 'operation', 'for', 'sake', 'question', 'ie']","Suppose we have 100 different arrays of integers, all of which are length n, and we wish to order all of them.But also suppose that x of these arrays are already completely ordered, while the rest remain random, and unfortunately we do not know which are which.At what value ofx, in terms ofn, does it become more efficient to use, say, Insertion Sort rather than Quick Sort to ensure all 100 arrays are correctly ordered in minimal time?(One may assume that that an algorithms exact bound is its precise number of operations for the sake of this question, i.e. ?(n)=n, or?(n2)=n2.)
"
637,637,637,39.0,0.14880000054836273,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['algorithm', 'usually', 'stable']","Which of these algorithms are NOT usually stable?
"
638,638,638,36.0,0.16859999299049375,"for, time, complexity, search, runtime, function, none, follow, correct, give","['put', 'instruction', 'measure', 'code', 'runtime', 'call']","What is putting in instructions which measure codes runtime called?
"
639,639,639,17.0,0.34360000491142273,"right, leave, node, process, sub, current, subtree, describe, differ, left","['type', 'tree', 'transversal', 'first', 'process', 'node', 'leave', 'subtree', 'right', 'subtree', 'finally', 'current', 'node']","Which type of tree transversal will first process the nodes in the left subtree, then the right subtree and finally the current node?
"
640,640,640,17.0,0.1243000030517578,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['consider', 'follow', 'statement', 'list', 'choose', 'statement', 'false']","Consider the following statements about lists and choose the statement that is FALSE.
"
641,641,641,25.0,0.1992000043392181,"for, time, complexity, search, runtime, function, none, follow, correct, give","['consider', 'take', 'for', 'for', 'for', 'asymptotic', 'complexity', 'likely']","Consider an algorithm that takes 8s for n=50, 14s for n=100 and 20s for n=200. What asymptotic complexity does it likely have.
"
642,642,642,29.0,0.1992000043392181,"for, time, complexity, search, runtime, function, none, follow, correct, give","['consider', 'take', 'for', 'for', 'for', 'asymptotic', 'complexity', 'likely']","Consider an algorithm that takes 8s for n=50, 14s for n=100 and 20s for n=200. What asymptotic complexity does it likely have.
"
643,643,643,40.0,0.20149999856948853,"number, find, take, step, item, average, many, give, second, if","['if', 'insertion', 'sort', 'take', 'second', 'sort', 'book', 'long', 'likely', 'take', 'sort', 'book']","If an insertion sort takes 10 seconds to sort 10,000 books, how long will it likely take to sort 40,000 books
"
644,644,644,40.0,0.15320000052452087,"hash, table, bucket, open, insert, close, key, function, slot, closed","['open', 'hash', 'table']","An Open Hash Table...:
"
645,645,645,36.0,0.2257000058889389,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['set', 'nearly', 'sort', 'data', 'algorithm', 'would', 'ideal', 'for', 'sort', 'nearly', 'sort', 'datum']","Cameron has a set of nearly sorted data. Which algorithm would be ideal for sorting a nearly sorted data?
"
646,646,646,36.0,0.1581999957561493,"for, time, complexity, search, runtime, function, none, follow, correct, give","['follow', 'efficient', 'time', 'complexity', 'for', 'large', 'number', 'item']","Which of the following is the most efficient time complexity, for a large number of items?
"
647,647,647,29.0,0.25699999928474426,"for, time, complexity, search, runtime, function, none, follow, correct, give","['calculate', 'time', 'complexity', 'for', 'function', 'look', 'simplify', 'reduce', 'time', 'complexity']","David is calculating time complexity for his algorithm. What functions should he look at simplifying to reduce the time complexity?
"
648,648,648,29.0,0.09629999846220016,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'tree', 'implement']","How will the following max heap tree be implemented as an array? ie- How should it look like as an array? 10 / \ 8 11/ \ / \7 4 9 5
"
649,649,649,2.0,0.2458000034093857,"tree, binary, node, avl, search, child, root, follow, height, leaf","['for', 'question', 'consider', 'follow', 'binary', 'avl', 'tree', 'if', 'insert', 'new', 'element', 'tree', 'necessary', 'balancing', 'carry', 'element', 'would', 'new', 'root', 'tree']","For this question we consider the following binary AVL tree: 10 / \ 5 17 / \ / \ 3 7 12 22 / \ / \ 11 13 21 29If we say, inserted an new element 14 to the tree, and any necessary balancing was carried out, which element would be the new root of the tree?
"
650,650,650,2.0,0.12520000338554382,"tree, binary, node, avl, search, child, root, follow, height, leaf","['go', 'add', 'array', 'number', 'empty', 'binary', 'tree', 'bad', 'term', 'search', 'time', 'if', 'input', 'array']","You are going to add an array of numbers to an empty binary tree. It is worse in terms of search time if the input array is:
"
651,651,651,20.0,0.12520000338554382,"tree, binary, node, avl, search, child, root, follow, height, leaf","['go', 'add', 'array', 'number', 'empty', 'binary', 'tree', 'bad', 'term', 'search', 'time', 'if', 'input', 'array']","You are going to add an array of numbers to an empty binary tree. It is worse in terms of search time if the input array is:
"
652,652,652,18.0,0.16210000216960907,"look, like, system, abstraction, talk, unnecessary, distraction, manner, hide, abstract","['company', 'wish', 'create', 'for', 'transaction', 'id', 'never', 'remove', 'id', 'want', 'hash', 'table', 'minimal', 'memory', 'cache', 'good', 'type', 'hashtable', 'meet', 'requirement']","A company wishes to create a Hashtable for all transaction IDs. They will never remove any of the IDs, and want the Hash Table to use minimal memory (and cache). What is the best type of Hashtable to meet these requirements.
"
653,653,653,23.0,0.24230000376701355,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['set', 'sort', 'algorithm', 'average', 'time', 'complexity', 'case']","Which set of sorting algorithms have an average time complexity case ofT(n^2)?
"
654,654,654,36.0,0.2160000056028366,"int, if, for, while, return, follow, code, mean, sum, new","['term', 'total', 'number', 'elementary_operation', 'for', 'line', 'check', 'belowpublic', 'int', 'complexity', 'int', 'result', 'for', 'int', 'for', 'int', 'result', 'return', 'result']","In terms of n, what is the total number of elementary operations for the line checking that j<i in the code below?public int complexity(int n){int result = 0;for(int i=0; i<n; i++) { for(int j=0; j<i; j++) { result = j; }}return result;}
"
655,655,655,35.0,0.1745000034570694,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'algorithm', 'would', 'take', 'thelong', 'sort', 'array', 'already', 'order']","Which of the following algorithms would take thelongest to sort an array that is already ordered?
"
656,656,656,36.0,0.18709999322891235,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'valid', 'binary', 'tree']","Is the following a valid Binary tree: 1 \ 3 \ 5 \ 7
"
657,657,657,2.0,0.15080000460147858,"number, find, take, step, item, average, many, give, second, if","['give', 'complexity', 'format', 'constant', 'long', 'would', 'take', 'run', 'algorithm', 'information', 'find', 'hence', 'answer', 'question', 'time']","Given an algorithm with a time complexity of the format a^(b*n) where a and b are constants, how long would it take to run the algorithm when n = 15?Use the information below to find a and b and hence answer the question. n time 3 3s 6 9s18 729s
"
658,658,658,40.0,0.22030000388622284,"vertex, edge, graph, change, show, matrix, also, if, formula, name","['give', 'list', 'name', 'initially', 'sort', 'alphabetical', 'order', 'first', 'name', 'however', 'want', 'change', 'sort', 'last', 'name', 'if', 'order', 'first', 'name', 'initially', 'sort', 'achieve', 'quick', 'way', 'general', 'sort', 'algorithm', 'would', 'best']","You are given a list of names that is initially sorted in alphabetical order by their first names. However you now want to change it to be sorted by their last names, and if they are the same then order them by their first names as initially sorted. To achieve this in the quickest way in general, which of the sorting algorithms would be best to use?
"
659,659,659,36.0,0.18690000474452967,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'stable']","Which of the following sorting algorithms are STABLE
"
660,660,660,36.0,0.25189998745918274,"tree, binary, node, avl, search, child, root, follow, height, leaf","['definition', 'root', 'tree', 'child', 'leaf', 'node']","What are the definitions of the ""root"" of a tree, the ""child"" of a node and a ""leaf"" node?
"
661,661,661,2.0,0.0957999974489212,"tree, binary, node, avl, search, child, root, follow, height, leaf","['array', 'binary', 'search', 'find', 'datum']","Which array can use binary search to find a data?
"
662,662,662,2.0,0.10320000350475313,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'property']","Which of the following is not a property of a heap?
"
663,663,663,35.0,0.4032000005245209,"int, if, for, while, return, follow, code, mean, sum, new","['thecounte', 'elementary_operation', 'follow', 'codepublic', 'sum', 'for', 'int', 'alength', 'sum', 'sum', 'return', 'sum', 'alength', 'op']","What is theCounting Elementary Operations T(n) of the following code?public int totalSum(int[ ] a) { int sum = 0; for (int i=0; i<a.length; i++) { sum=sum + a[i]; } return sum}(a.length = n)T(n)=? ops
"
664,664,664,35.0,0.3021000027656555,"int, if, for, while, return, follow, code, mean, sum, new","['use', 'carry', 'type', 'sort', 'algorithmvoid', 'for', 'int', 'int', 'minindex', 'for', 'if', 'minindex']","The code below can be used to carry out which type of sorting algorithm?void algorithmName(int a[], int n){ for (int i = 0; i < n; i++) { int minIndex = i; for (int j = i+1; j < n; j++) { if (a[j] < a[minIndex]) minIndex = j; } swap(a, i, minIndex); }}
"
665,665,665,36.0,0.1679999977350235,"remove, base, set, implementation, insert, may, allow, incorrect, entity, limited","['give', 'set', 'multiple', 'range', 'insert', 'open', 'hashmap', 'type', 'number', 'use', 'modulo', 'reduce', 'maximum', 'length', 'link', 'list']","Given the set of all multiples of 4 in the range 1 to 10,000 to be inserted to an open hashmap, what type of number should be used as the modulo to reduce the maximum length of linked lists?
"
666,666,666,50.0,0.3059999942779541,"element, add, index, end, move, place, ie, first, assume, contain","['contain', 'bucket', 'hash', 'index', 'alphabet', 'first', 'letterfor', 'example', 'animal', 'boat', 'bucket', 'determine', 'hashcode', 'number', 'bucketseg', 'animal', 'would', 'place', 'bucket', 'index', 'if', 'add', 'word', 'play', 'everyday', 'word', 'bucket', 'hash', 'table']","Misha has an open Hashtable containing 4 buckets. He hashes a word by:Hashcode = Length of word + index in alphabet of the first letterFor example, ""animal"" = 6 + 1 = 7Or ""boat"" = 4 + 2 = 6The bucket is determined by hashcode % the number of buckets.E.g. ""animal"" would be placed in the bucket with index 3If Misha adds the words:""i"", ""play"", ""pokemon go"", ""everyday""What words are in each of the buckets in the hash table?
"
667,667,667,50.0,0.10209999978542328,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['compute', 'tree', 'statement', 'true']","In a computing ""tree"", which of these statements are true?
"
668,668,668,2.0,0.2126999944448471,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['associate', 'awhat', 'for', 'graph', 'showing', 'node', 'areexactly', 'edges_apart']","Here is a graph's associated adjacency matrix, A.What is the adjacency matrix for this graph showing which nodes areexactly two edges apart?
"
669,669,669,47.0,0.21359999477863312,"for, time, complexity, search, runtime, function, none, follow, correct, give","['search', 'fastest', 'assume', 'list', 'search', 'presorte', 'uniformly', 'distribute']","Which of these searches is the fastest (assuming the list it's searching is presorted and uniformly distributed)?
"
670,670,670,29.0,0.25999999046325684,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['state', 'follow', 'list', 'sort', 'sort', 'stable', 'selection', 'insertion', 'bubble']","State from the following list of sorts, all the sorts which are stable.- Selection- Insertion- Bubble- Merge- Heap
"
671,671,671,36.0,0.2020999938249588,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['give', 'input', 'for', 'avl', 'tree', 'select', 'correct', 'output', 'use', 'post', 'order', 'transversal']","Given 15, 21, 11, 7, 24, 1, 13, 12, 9 as the input for a AVL tree, select the correct output when using Post-Order Transversal:
"
672,672,672,52.0,0.11309999972581865,"tree, binary, node, avl, search, child, root, follow, height, leaf","['search', 'list', 'size', 'would', 'efficient', 'quicksort', 'perform', 'binary', 'search', 'instead']","At what number, x, of linear searches on a list of size n would it be more efficient to quicksort and perform binary searches instead?
"
673,673,673,35.0,0.32530000805854803,"int, if, for, while, return, follow, code, mean, sum, new","['random', 'new', 'random', 'total', 'int', 'int', 'for', 'int', 'randomnextint', 'int', 'for', 'int', 'while', 'total', 'return', 'total']","What is the time complexity of the code below?:int 2bAlgo(int n) { Random random = new Random(); int total = 0; int[] b = new int[n]; for(int i = 0; i < n; i++) { b[i] = random.nextInt(n); } int j = 0; for(int i = 0; i < 200; i++) { j = n; while(j > 0) { total += j; j = j / 2; } } return total + b[j];}
"
674,674,674,57.0,0.4198000133037567,"need, top, last, much, tell, company, operate, copy, push, stock","['day', 'shrek', 'walk', 'around', 'swamp', 'feel', 'like', 'singe', 'wanted', 'sing', 'star', 'thought', 'trail', 'forgot', 'rest', 'help', 'decide', 'make', 'binary', 'tree', 'word', 'remember', 'tell', 'type', 'tree', 'traversal', 'output', 'tell']","One day Shrek was walking around his swamp and felt like singing. He wanted to sing All Star by Smash Mouth but his thoughts trailed off and he forgot the rest. So to help he decided to make a binary tree with the words he remembered: SOMEBODY / \ ONCE TOLD / MEwhich type of tree traversal will output ""SOMEBODY ONCE TOLD ME...""?
"
675,675,675,57.0,0.1704999953508377,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['implement', 'sort', 'follow', 'algorithm', 'would', 'best']","When implementing radix sort, which of the following algorithms would be best to use?
"
676,676,676,36.0,0.1704999953508377,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['implement', 'sort', 'follow', 'algorithm', 'would', 'best']","When implementing radix sort, which of the following algorithms would be best to use?
"
677,677,677,36.0,0.18459999561309812,"int, if, for, while, return, follow, code, mean, sum, new","['functionpublic', 'void', 'for', 'for']","What is the time complexity of this function?public void func(int n){for (int i=1;i<n;i++) {System.out.println(n);}for (int k=1;k<n;k++) {System.out.println(n);}}
"
678,678,678,35.0,0.11190000176429747,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['unstable', 'sort']","What is an ""unstable"" sort algorithm?
"
679,679,679,36.0,0.17110000550746918,"hash, table, bucket, open, insert, close, key, function, slot, closed","['if', 'close', 'hash', 'table', 'follow', 'false']","If the load factor of a closed hash table is 0.7, which of the following is false?
"
680,680,680,23.0,0.06350000202655792,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['array', 'iteration']","What is this array after 2 iterations of Bubble Sort?[""John"",""Bill"",""Elon"",""Mark"",""Amy"",""Curtis""]
"
681,681,681,35.0,0.2608000040054321,"int, if, for, while, return, follow, code, mean, sum, new","['sort', 'describe', 'follow', 'flag', 'falsedo', 'for', 'if', 'swap', 'flag', 'truewhile', 'flag', 'true']","Which sorting algorithm is described by the following psuedocode:flag = falsedo for(i = 0; i < n; i++) if (a[i] > a[i+1]) swap(a[i], a[i+1]) flag = truewhile(flag == true)
"
682,682,682,2.0,0.2440000027418137,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'property', 'tree', 'binary', 'balanced', 'complete', 'maxheap']","Which of the following properties does this tree have?1) Binary2) Balanced3) Complete4) Maxheap
"
683,683,683,2.0,0.2439000010490417,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'property', 'tree', 'binary', 'balanced', 'complete', 'maxheap']","Which of the following properties does this tree have?1) Binary2) Balanced3) Complete4) Maxheap
"
684,684,684,57.0,0.5336999893188477,"need, top, last, much, tell, company, operate, copy, push, stock","['imagine', 'work', 'company', 'deal', 'stock', 'team', 'current', 'project', 'develop', 'page', 'website', 'list', 'company', 'stock', 'market', 'allow', 'monitor', 'real', 'feature', 'page', 'sort', 'company', 'number', 'way', 'growth', 'last', 'day', 'total', 'net', 'worth', 'detail', 'change', 'real', 'time', 'list', 'also', 'need', 'sorted', 'real', 'time', 'tooyour', 'team', 'leader', 'tell', 'consistent', 'speed', 'top', 'priority', 'second', 'count', 'stock', 'market', 'lag', 'result', 'complaint', 'sort', 'stable', 'cause', 'confusion', 'if', 'company', 'value', 'swap', 'seemingly', 'randomly', 'memory', 'issue', 'company', 'prepare', 'give', 'much', 'space', 'need', 'for', 'sort', 'long', 'sort', 'appropriate', 'for', 'situation']","Imagine you're working at company that deals with stocks and your team's current project is develop a page on a website that lists companies on the stock market and allows you to monitor them in real time.A feature of this page is that you can sort the companies in a number of ways (e.g. growth in the last day, total net worth, etc.). As these details are changing in real time, the list will also needed to be re-sorted in real-time too.Your team leader has told you that:1. Consistent speed is the top priority. Every second counts in the stock market and any lag will result in complaints.2. The sort should be stable. It will cause confusion if companies with the same value were to swap seemingly randomly.3. Memory is not an issue. The company is prepared to give you as much space as you need for the sort as long as its effective.Which sort is the most appropriate for this situation?
"
685,685,685,57.0,0.1379999965429306,"for, time, complexity, search, runtime, function, none, follow, correct, give","['time', 'complexity', 'for', 'code', 'answer', 'low', 'case', 'letter', 'int', 'for', 'total']","What is the time complexity for the code below? Answer with a lower case letter with no other characters.for (int x=0; x<n; x++){ for (int y=0; y<n; y++){ total = numberArrayOne[x] * numberArrayTwo[y]; }}
"
686,686,686,29.0,0.11320000141859055,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['follow', 'statement', 'best', 'describe', 'undirected', 'graph']","Which of the following statements best describes an undirected graph?
"
687,687,687,0.0,0.12399999797344208,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'good', 'choice', 'for', 'system', 'if', 'small', 'sorted', 'array', 'pass']","Which of the following sorting algorithms will be the best choice for a system if a very small sorted array is passed.
"
688,688,688,36.0,0.06920000165700912,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['statement', 'heap', 'false']","Which statement(s) about heaps is false?
"
689,689,689,2.0,0.14869999885559082,"start, could, dijkstra, buffer, page, twice, overwrite, circular, nodestraverse, nodetraverse","['many', 'step', 'find', 'page', 'dictionary', 'page', 'start', 'page', 'use', 'binary', 'search']","How many steps to find page 64 in a dictionary which has 100 pages start from page 1 using binary search?
"
690,690,690,42.0,0.4663999974727631,"sorted, point, example, final, say, real, divide, word, since, measure","['attempt', 'point', 'realise', 'life', 'boring', 'would', 'return', 'point', 'quick', 'possible', 'however', 'boat', 'search', 'since', 'authority', 'happen', 'year', 'ago', 'well', 'little', 'scared', 'go', 'theregiven', 'flann', 'if', 'even', 'real', 'name', 'want', 'return', 'quick', 'possible', 'route', 'take']","Flann O'Brien is an outlaw. He was attempting to hide out at point A, but realised that life there is too boring. He would like to return to point I as quick as possible. However all boats are being searched in case he's on board. With the exception of north Scotland, since the authorities are English and the Scottish referendum only happened 4 years ago... and well they're little scared to go up there.Given that Flann (if that is even his real name) wants to return as quick as possible, which route should he take?
"
691,691,691,42.0,0.20010000467300412,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['traverse', 'binary', 'tree', 'pre', 'order', 'traversal', 'method', 'order', 'node', 'process']","When traversing a binary tree with the pre-order traversal method, what is the order in which nodes are processed?
"
692,692,692,17.0,0.2858000099658966,"int, if, for, while, return, follow, code, mean, sum, new","['state', 'follow', 'for', 'node', 'head', 'for', 'node', 'nodenext', 'if', 'for', 'int', 'nodeelement', 'if', 'nodeelement', 'break', 'nodenext', 'new', 'listnode', 'nodenext']","State the complexity of the following algorithm:for(int i = 0; i < n; i++){ ListNode node = head; for (int j = 0; j < i - 1; j++){ node = node.next; } if(j > 3){ for(int k = 0; k < j; k++){ node.element += k; if(node.element >= 23){ break; } } }}node.next = new ListNode(o, node.next);
"
693,693,693,35.0,0.18690000474452967,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'stable']","Which of the following sorting algorithms is Stable?
"
694,694,694,36.0,0.15109999477863312,"include, answer, expect, consist, lane, skiplist, cubic, program, sqrt, information","['skiplist', 'node', 'lane', 'node', 'many', 'node', 'expect', 'see', 'exactly', 'lane']","In a Skiplist where p = 1/2 (i.e the probability that the node has 1 lane is 1/2 and the probability that the node has 2 lanes is 1/4 etc...) which has 1024 nodes. How many nodes should we expect to see that have exactly 6 lanes?
"
695,695,695,7.0,0.09120000153779984,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'statement', 'false']","Which of the following statements is false
"
696,696,696,17.0,0.124099999666214,"for, time, complexity, search, runtime, function, none, follow, correct, give","['average', 'bad', 'case', 'complexity', 'search', 'binary', 'search', 'tree', 'respective', 'order']","What are the average and worst case complexities of searching in a binary search tree? (in respective order)
"
697,697,697,38.0,0.7088999748229979,"datum, structure, data, space, implement, possible, memory, store, work, for","['farm', 'farm', 'buy', 'for', 'work', 'for', 'contract', 'end', 'week', 'send', 'furthermore', 'if', 'still', 'chicken', 'farm', 'must', 'keep', 'send', 'next', 'perform', 'job', 'efficiently', 'promote', 'new', 'give', 'fancy', 'computer', 'tell', 'create', 'data', 'structure', 'assist', 'consistently', 'find', 'plump', 'however', 'still', 'inexperience', 'data', 'structure', 'need', 'advice', 'tell', 'structure', 'follow', 'quality', 'remove', 'list', 'easy', 'repeatable', 'high', 'priority', 'update', 'weight', 'exist', 'chicken', 'reorder', 'structure', 'accordingly', 'possible', 'add', 'newborn', 'chicken', 'possible', 'priority', 'egg', 'use', 'for', 'breakfast', 'mcmuffin', 'datum', 'structure']","Old MacDonald has a farm (eieio), but his farm has been bought by McDonald's for his plump, juicy chickens.Old MacDonald now works for McDonald's under a contract where, at the end of every week, he has to send them his plumpest chicken. Furthermore, if Old MacDonald still has more than 63 chickens in his farm, he must keep sending the next plumpest chicken until he has 63.To perform his job more efficiently, McDonald's promoted ""Old MacDonald"" to ""New MacDonald"" by giving him a fancy new computer, and have told him to create a data structure to assist him in consistently finding the plumpest chicken.New MacDonald is however still very inexperienced with data structures and needs some advice. He was told by McDonald's that his data structure should have the following qualities:- Removing the plumpest chicken from the list should be easy and repeatable and is of the highest priority.- Updating the weight of existing chickens and reordering the structure accordingly should be possible.- Adding newborn chickens should be possible but isn't a priority (Most eggs are used for breakfast McMuffins anyway).Which data structure should New MacDonald use?
"
698,698,698,38.0,0.0731000006198883,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['traversal', 'tree', 'type']","1, 3, 2, 6, 5, 4, 15, 20, 17, 13, 7Above is a traversal of the tree below. Which traversal type is it? 7 / \ 4 13 / \ \ 2 5 17 / \ \ / \ 1 3 6 15 20
"
699,699,699,52.0,0.10019999742507936,"int, if, for, while, return, follow, code, mean, sum, new","['follow', 'if']","What does the following algorithm do?void algorithm(Node cur) { if (cur == null) { return; } algorithm(cur.left); algorithm(cur.right); System.out.print(cur.value + “ ”);}
"
700,700,700,52.0,0.2524999976158142,"datum, structure, data, space, implement, possible, memory, store, work, for","['design', 'emission', 'datum', 'record', 'software', 'for', 'vehicle', 'computer', 'little', 'ram', 'available', 'follow', 'sort', 'algorithm', 'appropriate', 'for']","You are designing the emissions data recording software for a vehicle, the computer has very little ram available. Which of the following sorting algorithms is the most appropriate for you to use?
"
701,701,701,2.0,0.25679999589920044,"tree, binary, node, avl, search, child, root, follow, height, leaf","['give', 'follow', 'avl', 'tree', 'would', 'tree', 'look_like', 'insertion', 'note', 'result', 'valid', 'avl', 'tree', 'correct', 'answer', 'use', 'balance']","Given the following AVL tree what would the tree look like after the insertion of ""9"". Note that all results are valid AVL Trees. The correct answer uses the balancing algorithm from the lecture.
"
702,702,702,2.0,0.1428000032901764,"tree, binary, node, avl, search, child, root, follow, height, leaf","['statement', 'avl', 'tree', 'untrue']","Which of these statements about AVL trees is untrue?
"
703,703,703,2.0,0.14640000462532046,"hash, table, bucket, open, insert, close, key, function, slot, closed","['load', 'hash', 'table', 'define']","The Load of a hash table is defined as:
"
704,704,704,23.0,0.1703999936580658,"for, time, complexity, search, runtime, function, none, follow, correct, give","['if', 'function', 'follow', 'bound', 'function']","If a function has the following bounds:- Lower Bound f(x) = 2n2+ log(n) + n- Upper Bound f(x) = 2n2 + 2n + 1what is the Big-Theta of this function?
"
705,705,705,29.0,0.06669999659061432,"datum, structure, data, space, implement, possible, memory, store, work, for","['follow', 'isnot', 'java']","Which of the following isnot a primitive data type in Java?
"
706,706,706,30.0,0.10499999672174454,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['statement', 'function', 'beloware']","Which of the statements about the functions beloware all true.f(x) = 14x2 + 42x + 5xlog2xg(x) = 5x2 + 7x2log2xh(x) = 144x + 2x + 5x!i(x) = 3 + x2 + log2x
"
707,707,707,30.0,0.1428000032901764,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['consider', 'follow', 'tree', 'follow', 'statement', 'true']","Consider the following tree. (2) / \(1) (6) / \ (4) (7) / \ (3) (5)Which of the following statements are true?
"
708,708,708,24.0,0.17900000512599945,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['follow', 'correct', 'expression', 'for', 'sumcommonly', 'encounter', 'evaluate', 'time', 'complexity']","Which of the following is a correct expression for the sumcommonly encountered when evaluating time complexity?
"
709,709,709,52.0,0.10540000349283217,"for, time, complexity, search, runtime, function, none, follow, correct, give","['consider', 'complexity', 'match']","Consider the complexities of the following.Which does not match the rest?
"
710,710,710,25.0,0.1533000022172928,"tree, binary, node, avl, search, child, root, follow, height, leaf","['node', 'follow', 'binary', 'tree', 'non', 'balance', 'factor']","Which nodes in the following binary tree have non-zero balance factor? 7 / \ 4 13 / \ \ 2 5 17 / \ \ / \ 1 3 6 15 20
"
711,711,711,2.0,0.09529999643564224,"sorted, point, example, final, say, real, divide, word, since, measure","['say', 'conquer', 'algorithm', 'except']","All of these algorithms are said to be divide and conquer algorithm except
"
712,712,712,2.0,0.10419999808073044,"tree, binary, node, avl, search, child, root, follow, height, leaf","['sentence', 'true', 'except']","All of these sentences are true except:
"
713,713,713,2.0,0.12449999898672105,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['singly', 'link', 'list', 'operation', 'best', 'average', 'runtime', 'complexity']","In a singly linked list, which of these operations has the best average runtime complexity?
"
714,714,714,25.0,0.10679999738931656,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['statement', 'quicksort', 'true']","Which of these statements about quicksort is true?
"
715,715,715,36.0,0.2419999986886978,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['good', 'average', 'bad', 'case', 'time', 'complexity', 'for', 'insert', 'element', 'arraylist', 'respectively']","What are the best, average and worst case time complexities for inserting an element into an ArrayList, respectively?
"
716,716,716,36.0,0.10809999704360962,"for, time, complexity, search, runtime, function, none, follow, correct, give","['consider', 'follow', 'for', 'for', 'int', 'print', 'let', 'run', 'time', 'algorithm', 'follow', 'statement', 'false']","Consider the following algorithm:for (int i = 0; i < n; i++) { for (int j = 7; j < n2; j+2) { print i + j; }}Let f(n) be the run-time of this algorithm. Which one of the following statements is false?
"
717,717,717,41.0,0.14020000398159027,"measurement, precision, accuracy, difference, image, significant, definition, regard, accuracylow, accuracyhigh","['difference', 'accuracy', 'precision', 'set', 'value']","What is the difference between the accuracy and the precision of a set of values?
"
718,718,718,41.0,0.20479999482631686,"hash, table, bucket, open, insert, close, key, function, slot, closed","['if', 'close', 'hash', 'table', 'use', 'linear_probe', 'load_factor', 'average', 'number', 'step', 'require', 'find', 'item']","If a closed hash table uses linear probing, and has a load factor of 0.75, what is the average number of steps required to find the item?
"
719,719,719,23.0,0.15230000019073486,"for, time, complexity, search, runtime, function, none, follow, correct, give","['time', 'complexity', 'for']","What is the time complexity of the following?for (int i = 0; i < n; i++) { for (int j = 0; j < n/2; j++) { System.out.println(n); }}
"
720,720,720,23.0,0.3885999917984009,"hash, table, bucket, open, insert, close, key, function, slot, closed","['difference', 'open', 'hash', 'table', 'close', 'hash', 'table', 'assume', 'close', 'hash', 'table', 'use', 'linear_probe']","What is the difference between an open hash table and a closed hash table? (assuming the closed hash table uses linear probing)
"
721,721,721,23.0,0.10899999737739564,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['letf', 'order']","Letf(n) = O(p(n)),g(n) = O(q(n)),h(n) = O(r(n))What is the order of f(n)g(n) + h(n) ?
"
722,722,722,52.0,0.07020000368356705,"tree, binary, node, avl, search, child, root, follow, height, leaf","['show', 'result', 'heap', 'extract', 'large', 'item', 'follow', 'tree']","Show the resulting heap after extracting the largest item from the following tree 15 / \ 10 6 / \ / \ 5 8 3 4 / 1
"
723,723,723,36.0,0.14339999854564667,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['space', 'complexity', 'merge', 'sort']","What is the space complexity of merge sort?
"
724,724,724,36.0,0.08500000089406967,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['for', 'follow', 'tree', 'traversal', 'method', 'would', 'use', 'form', 'equation']","For the following tree, what traversal method would be used to form the equation
"
725,725,725,52.0,0.19850000739097595,"hash, table, bucket, open, insert, close, key, function, slot, closed","['difference', 'open', 'closed', 'hash', 'table']","What is the difference between an open and a closed hash table?
"
726,726,726,23.0,0.10589999705553056,"sorted, point, example, final, say, real, divide, word, since, measure","['follow', 'example', 'semantic', 'search']","Which of the following is an example of a semantic search
"
727,727,727,2.0,0.06669999659061432,"store, close, want, difficulty, label, stepsopen, hashtable, collisionsthis, counter, presume",['store'],"A graph is an ADT that stores ...
"
728,728,728,37.0,0.01669999957084656,"vertex, edge, graph, change, show, matrix, also, if, formula, name",[],"What other ADT does the breadth first traversal algorithm use to navigate a graph?
"
729,729,729,38.0,0.1437000036239624,"datum, structure, data, space, implement, possible, memory, store, work, for","['real', 'world', 'application', 'would', 'appropriate', 'maxheap', 'datum', 'structure']","In what real world application would it not be appropriate to use Maxheap as a data structure?
"
730,730,730,38.0,0.06669999659061432,"measurement, precision, accuracy, difference, image, significant, definition, regard, accuracylow, accuracyhigh",['accuracy'],"Accuracy is ...
"
731,731,731,52.0,0.20489999651908875,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['give', 'follow', 'binary', 'tree', 'would', 'output', 'for', 'level', 'order', 'traversal']","Given the following binary tree: [""I""] / \ [""D""] [""O""] \ \ [""G""] [""Q""] \ [""U""] What would the output be for level-order traversal?
"
732,732,732,43.0,0.210999995470047,"maximum, problem, random, integer, solve, fill, interface, product, similar, anywhere","['use', 'solve', 'particular', 'problem', 'fill', 'gap']","An ADT is a coordinated group of ... that is used to solve a particular problem. (fill in the gap)
"
733,733,733,43.0,0.06669999659061432,"order, traversal, tree, post, follow, pre, level, output, use, traverse",['post'],"Which of these is a post-order traversal?
"
734,734,734,17.0,0.10819999873638153,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['heapsort', 'algorithm']","What is the time complexity of the heapsort algorithm?
"
735,735,735,23.0,0.14229999482631686,"hash, table, bucket, open, insert, close, key, function, slot, closed","['search', 'closed', 'hash', 'table', 'linear_probing', 'average', 'number', 'step', 'need', 'find', 'require', 'element']","When searching a closed hash table by linear probing with a load factor of 0.5, what is the average number of steps needed to find the required element?
"
736,736,736,36.0,0.2626000046730041,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['look', 'time', 'complexity', 'perform', 'quick', 'sort', 'best', 'bad', 'case']","When looking at the time complexity of performing a quick sort, what is the best and worst case?
"
737,737,737,36.0,0.13339999318122864,"number, find, take, step, item, average, many, give, second, if","['for', 'linear_probe', 'many', 'step', 'take', 'if', 'table', 'full']","For a closed hashtable with linear probing, how many steps will it take, if the table is 70% full
"
738,738,738,40.0,0.14749999344348907,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'unstable']","Which of the following sorts is unstable?
"
739,739,739,36.0,0.1202000007033348,"for, time, complexity, search, runtime, function, none, follow, correct, give","['follow', 'correct', 'definition', 'maxheap']","Which of the following is the correct definition of a maxheap?
"
740,740,740,2.0,0.15459999442100525,"vertex, edge, graph, change, show, matrix, also, if, formula, name","['if', 'store', 'graph', 'edge', 'vertex', 'asymptotic']","If you stored a graph with e edges and v vertices as an adjacency matrix, what is the asymptotic memory usage of this matrix?
"
741,741,741,2.0,0.192100003361702,"tree, binary, node, avl, search, child, root, follow, height, leaf","['give', 'follow', 'number', 'construct', 'avl', 'tree', 'number', 'leaf', 'node', 'order', 'leave', 'right']","Given the following numbers: 7, 9, 5, 4, 8, 2, 6, 1, when constructing an AVL Tree, which numbers will be in leaf nodes (in order from left to right)?
"
742,742,742,2.0,0.10199999809265137,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['for', 'tree', 'statement', 'true']","For a B+ tree, which statement is true.
"
743,743,743,2.0,0.16030000150203705,"for, time, complexity, search, runtime, function, none, follow, correct, give","['calculate', 'total', 'time', 'require', 'process', 'code', 'for', 'for']","Calculate the total time required to process the code below:for(i = 0; i < n; i++) { for(k = 0; k < i; k++) { System.out.println(i*k); }}
"
744,744,744,29.0,0.1128000020980835,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'suitable', 'use', 'input', 'consist', 'large', 'data', 'set']","Which of the following sorting algorithms are not suitable to be used when the input consists of large data sets?
"
745,745,745,36.0,0.07769999653100967,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'true', 'heap', 'sort']","Which of the following is not true about Heap Sort?
"
746,746,746,29.0,0.24140000343322754,"for, time, complexity, search, runtime, function, none, follow, correct, give","['average', 'run', 'time', 'code', 'for', 'for', 'for']","What is the average run time of the below code:for(int w = 0; w < q; w++) for(int z = w+1; z < q*q; z++) for(int xy = z; xy < q; xy*2) sum++;
"
747,747,747,29.0,0.12070000171661376,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'avl', 'tree', 'balance', 'technique', 'use', 'example', 'ggoe']","Which of the following AVL tree balancing techniques is used in the example below: D / \ B E / \ \ A C F \ GGoes to: D / \ B F / \ / \ A C E G
"
748,748,748,17.0,0.09790000319480896,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['stable', 'mean', 'refer', 'sort', 'method']","What does Stable mean when referring to a sorting method?
"
749,749,749,50.0,0.10920000076293944,"hash, table, bucket, open, insert, close, key, function, slot, closed","['hashtable', 'use', 'value', 'bucket', 'call']","In Hashtables: After using the Hashfunctionif 2 values correspond to the same bucket, what is this called?
"
750,750,750,23.0,0.06610000133514404,"datum, structure, data, space, implement, possible, memory, store, work, for","['tree', 'computer', 'science']","What is a tree in computer science?
"
751,751,751,38.0,0.13770000636577606,"tree, binary, node, avl, search, child, root, follow, height, leaf","['avl', 'tree', 'create', 'insert', 'number', 'many', 'insertion', 'cause', 'current', 'tree', 'become', 'unbalanced']","An AVL tree is created by inserting the numbers 1, 3, 7, 2, 4, 6, and 5. How many of these insertions cause the current tree to become unbalanced?
"
752,752,752,40.0,0.19830000400543213,"number, find, take, step, item, average, many, give, second, if","['if', 'average', 'number', 'step', 'open', 'hashtable', 'total', 'number', 'bucket', 'intend', 'insert']","If Christof’s average number of steps in his open hashtable is 1.42 and the total number of buckets is 1000. What is the max no. of keys he intends to insert?
"
753,753,753,38.0,0.6736000180244446,"datum, structure, data, space, implement, possible, memory, store, work, for","['however', 'always', 'uncertain', 'town', 'lie', 'hun', 'currently', 'restinghe', 'database', 'town', 'rank', 'gdp', 'per', 'capita', 'want', 'able', 'remove', 'town', 'burn', 'building', 'ground', 'add', 'town', 'refugee', 'camp', 'begin', 'form', 'able', 'quickly', 'tired', 'long', 'day', 'work', 'if', 'town', 'certain', 'find', 'able', 'find', 'town', 'similar', 'follow', 'datum', 'structure', 'would', 'appropriate', 'store', 'list', 'town']","Attila the Hun is wanting to ravage Europe. However he is always uncertain which town to lay waste to. The Huns are currently resting.He has a database of towns ranked by GDP per capita. He wants to be able to remove towns once he's burnt every building to the ground, and add towns as refugees camps begin to form. He should be able to do this quickly as he will be tired after a long day of work. If a town with a certain GDP is not found, he should be able to find a town with similar GDP.Which of the following data structures would be most appropriate to store the list of towns?
"
754,754,754,38.0,0.2658999860286713,"int, if, for, while, return, follow, code, mean, sum, new","['time', 'follow', 'codepublic', 'void', 'look', 'int', 'int', 'for', 'for', 'for', 'int']","What is the time complexity of the following code?public void look(int a){ int ans[] = int[10]; int n = a; for(int i=0;i<n;i++){ for(int j=n;j>0;j--){ ans[i] = i*j; } } for(int i=0;i<n;i++){ System.out.println(ans[i*2]); }}
"
755,755,755,25.0,0.29750001430511475,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'true', 'array', 'list', 'link', 'list', 'assume', 'array', 'list', 'link', 'list', 'sort']","Which of the following is not true about Array lists and linked lists? (you can assume the Array list and linked list are not sorted)
"
756,756,756,25.0,0.18690000474452967,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'sort']","Which of the following sorting algorithms use h-sorting?
"
757,757,757,36.0,0.0820000022649765,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'property', 'merge']","Which of the following is not a property of merge sort?
"
758,758,758,36.0,0.19550000131130216,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['fast', 'sort', 'method', 'complexity', 'sorting', 'array', 'already', 'sort']","Name the fastest sort method and its complexity when sorting an array that has already been sorted.
"
759,759,759,36.0,0.17299999296665192,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['order', 'describe', 'post', 'order', 'traversal', 'binary', 'search', 'tree']","Which of these orders describes post-order traversal of a binary search tree?
"
760,760,760,17.0,0.18619999289512634,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'binary', 'search', 'tree']","What is the in-order traversal of the following Binary Search Tree: 25 / \ 17 30 / / 10 20 / \ 8 15
"
761,761,761,2.0,0.10729999840259552,"hash, table, bucket, open, insert, close, key, function, slot, closed","['for', 'structure', 'hash', 'table', 'follow', 'recommend']","For the Algorithm and data structure of hash tables, which of the following is recommended?
"
762,762,762,23.0,0.11029999703168868,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['true', 'false', 'unstable', 'sort', 'reorder', 'item', 'while', 'take', 'account', 'initial', 'order']","True or False, an Unstable sort reorders items while taking into account their initial order.
"
763,763,763,36.0,0.09149999916553496,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'statement', 'false']","Which of the following statements is false?
"
764,764,764,36.0,0.11190000176429747,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['statement', 'true']","Which statement is true?
"
765,765,765,25.0,0.17419999837875366,"consider, total, first, call, line, nee, decide, xtotal, via, organise","['many', 'function', 'value', 'total', 'for', 'void', 'total', 'int', 'total', 'for', 'total', 'total']","How many elementary operations does this function have and what is the value of total after the for loop has finished?public void total() { int x = 4; int total = 0; for (int i=0; i<x-1; i++) { total = total + i; }}
"
766,766,766,29.0,0.25679999589920044,"for, time, complexity, search, runtime, function, none, follow, correct, give","['complexity', 'follow', 'give', 'method', 'constant', 'for', 'int', 'for', 'for', 'false', 'for', 'for']","What is the complexity of the following, given that the methods checkPassword, hackProfessor and openMozilla Firefox are of constant complexity?int n = password.length(); int findPassword = 0; int x=1;for( int j = 0; j < n; j++){ int x=x*10;}for( int i = 0; i < x; i++;){ for(password.checkPassword(findPassword) == false) findPassword++;}}password.hackProfessor(findPassword);for (int i2 = 1; i2 <= n; i2++) { for(int j2 = 1; j2 <= n; j2++) { openMozillaFirefox(https://www.youtube.com/watch?v=oavMtUWDBTM); }}
"
767,767,767,29.0,0.1882999986410141,"for, time, complexity, search, runtime, function, none, follow, correct, give","['for', 'list', 'size', 'would', 'average', 'search', 'time', 'for', 'element', 'list', 'use', 'binary', 'search']","For a list of size n=30,000what would be the average search time for an element in the list using binary search?
"
768,768,768,50.0,0.2142000049352646,"element, add, index, end, move, place, ie, first, assume, contain","['take', 'follow', 'step', 'select', 'arbitrary', 'pivot', 'element', 'array', 'typically', 'first', 'element', 'array', 'if', 'array', 'contain', 'element', 'returnmove', 'element', 'leave', 'array', 'element', 'repeat', 'process', 'leave', 'sub', 'array', 'conquer', 'right', 'sub', 'sort', 'algorithm', 'describe', 'average', 'time', 'complexity']","Take the following steps:Select an arbitrary “pivot” element P from the array (typically the first element in the array).If the array contains only 0 or 1 element, return.Move all elements that are = P to the left of the array and all elements > P to the right.Recursively repeat this process on the left sub-array Conquer and then the right sub-array.What sorting algorithm do they describe and what is it's average time complexity?
"
769,769,769,36.0,0.1606999933719635,"include, answer, expect, consist, lane, skiplist, cubic, program, sqrt, information","['order', 'slow', 'close', 'infinity', 'square', 'root', 'sqrt', 'cubic']","Order these from quickest to slowest when n is close to infinity:Square root: sqrt(n)n log(n)Cubic: Quadratic: Logarithmic: log(n)Exponential: Linear: nConstant: 1
"
770,770,770,7.0,0.1022000014781952,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['calculateand', 'represent']","What does this formula calculate?And what does represent?
"
771,771,771,47.0,0.1022000014781952,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['calculateand', 'represent']","What does this formula calculate?And what does represent?
"
772,772,772,17.0,0.10440000146627426,"right, leave, node, process, sub, current, subtree, describe, differ, left","['if', 'start', 'node', 'use', 'depth', 'search', 'node', 'would', 'process', 'select', 'next', 'search', 'choose', 'small', 'nodefor', 'example', 'choice', 'go', 'node', 'search', 'node', 'less']","If we start on node 7, using depth search, which node would be processed last?When selecting the next node to search, choose the smallest node.For example;7 has the choice of going to node 4 and 5It will search node 4 because 4 is less than 5
"
773,773,773,36.0,0.12399999797344208,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'set', 'sort', 'algorithm', 'list', 'implement', 'divide', 'conquer', 'approach']","Which of the following sets of sorting algorithms lists all that implement the divide and conquer approach?
"
774,774,774,36.0,0.14920000731945038,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['teach', 'sort', 'algorithm', 'would', 'expect', 'quickest', 'for', 'mostly', 'sort', 'array']","Which of the taught sorting algorithms would be expected to be the quickest for a mostly-sorted array?
"
775,775,775,36.0,0.1907999962568283,"number, find, take, step, item, average, many, give, second, if","['take', 'second', 'run', 'for', 'item', 'if', 'increase', 'number', 'item', 'would', 'expect', 'new', 'runtime', 'closest', 'for', 'follow', 'complexitiesi']","An algorithm takes 2 seconds to run for n items. If we were to increase number of items to 3n, what would we expect the new runtime to be closest to for the following complexities?i)ii)iii)
"
776,776,776,29.0,0.1517000049352646,"for, time, complexity, search, runtime, function, none, follow, correct, give","['correct', 'definition', 'for']","What is the correct definition for the upper bound ?
"
777,777,777,2.0,0.21140000224113464,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'avl', 'tree', 'element', 'add', 'element', 'add', 'element', 'root', 'root', 'child']","The following is an AVL tree. The element 17 is added, and the element 20 is added. Which elements are the root, and the roots children?
"
778,778,778,2.0,0.2149000018835068,"node, next, previous, constant, object, pointerthe, follow, private, nodenext, head","['say', 'link', 'list', 'tail', 'reference', 'would', 'code', 'add', 'node', 'end', 'non', 'empty', 'listnode', 'follow', 'object', 'element', 'element', 'next']","Say we have a linked list with a tail reference. What would the code look like to add a node to the end of the non-empty list?Nodes have following code:class ListNode { Object element; ListNode next; ListNode(Object e, ListNode n) { element = e; next = n; }}
"
779,779,779,6.0,0.2057999968528748,"get, amount, motorway, strategy, major, city, efficiency, minimun, datatherefore, increase","['say', 'node', 'base', 'major', 'city', 'edge', 'motorway', 'want', 'get', 'datum', 'for', 'use', 'motorway', 'get', 'datum', 'for', 'strategy']","Say we have a graph where the nodes are based on major cities in England and the edges are the major motorways. We want to get data for where we can get using only 1 motorway, then get data for 2 motorways, 3 motorways and so on. Which traversal strategy should we use?
"
780,780,780,0.0,0.3765999972820282,"vertex, edge, graph, change, show, matrix, also, if, formula, name","['say', 'want', 'store', 'data', 'graph', 'datum', 'show', 'factory', 'produce', 'certain', 'resource', 'supply', 'factory', 'factory', 'deliver', 'resource', 'approximately', 'factory', 'shall', 'store', 'graph']","Say we want to store data in a graph. The data shows which factories, that produce certain resources, supply to some of the other factories. There are 100 factories, each of which deliver resources to approximately 15 other factories each. How shall we store the graph?
"
781,781,781,0.0,0.09019999951124193,"element, add, index, end, move, place, ie, first, assume, contain","['say', 'store', 'index', 'index', 'array', 'child', 'node']","Say we have a heap, which is stored in an array, and a node at index n. What are the indexes in the array of the children of this node?
"
782,782,782,20.0,0.4336000084877014,"method, size, input, go, exist, elementary_operation, likely, give, use, alphabetical","['pole', 'for', 'election', 'however', 'mistake', 'mean', 'send', 'alphabetical', 'order', 'county', 'name', 'certain', 'county', 'send', 'datum', 'early', 'late', 'mean', 'list', 'order', 'incorrectly', 'position', 'error', 'term', 'job', 'line', 'little', 'time', 'fix', 'mistake', 'give', 'reading', 'skill', 'limited', 'computer', 'incredibly', 'slow', 'sort', 'method']","The poles for the 2080 US election are in. However there has been a mistake: they were meant to be sent in by alphabetical ordering of the 3242 county names, but certain counties sent their data in early or late. This has meant that the list is ordered incorrectly, with a positioning error term of at most 4. Jim, whose job is on the line, has very little time to fix the mistake. Given that his reading skills are limited, and his computer is incredibly slow, which sorting method should he use.
"
783,783,783,20.0,0.3562999963760376,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['array', 'list', 'follow', 'statement', 'array', 'list', 'falsenote', 'thearray', 'list', 'unsorte']","Array List:Which of the following statements about Array Lists is false?Note: assume theArray List is unsorted.
"
784,784,784,25.0,0.18880000710487368,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['bad', 'case', 'complexity', 'insertion']","In the worst case, what is the complexity of insertion sort?
"
785,785,785,36.0,0.1890999972820282,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['bad', 'case', 'complexity', 'insertion']","In the worst case, what is the complexity of insertion sort?
"
786,786,786,2.0,0.33709999918937683,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'binary', 'search', 'tree', 'bst', 'insert', 'node', 'try', 'maintain', 'valid', 'avl', 'tree', 'case', 'node', 'if', 'tree', 'unbalanced', 'type', 'rotation', 'necessary', 'balance', 'tree']","The following is a binary search tree (BST) where we have just inserted the node '13':We are trying to maintain a valid AVL tree. In this case, at what node (if any) is this tree unbalanced and what type of rotation(s) are necessary to balance the tree?
"
787,787,787,24.0,0.1923000067472458,"hash, table, bucket, open, insert, close, key, function, slot, closed","['average', 'number', 'step', 'find', 'bucket', 'open', 'closed', 'hash', 'table']","What is the average number of steps to find a bucket in and open and closed hash table with a load factor of 0.99?
"
788,788,788,40.0,0.1386999934911728,"tree, binary, node, avl, search, child, root, follow, height, leaf","['definition', 'avl', 'tree']","What is the definition of an AVL tree?
"
789,789,789,17.0,0.01669999957084656,"vertex, edge, graph, change, show, matrix, also, if, formula, name",[],"What is(n)?
"
790,790,790,29.0,0.090999998152256,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'statement', 'false']","Which of the following statements is false?
"
791,791,791,36.0,0.1476999968290329,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['follow', 'statement', 'true']","Which of the following statements are true?
"
792,792,792,36.0,0.08110000193119049,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['for', 'follow', 'true']","For ?(n2), which of the following is true.
"
793,793,793,30.0,0.13439999520778656,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['many', 'iteration', 'take', 'sort', 'follow', 'array', 'ascend', 'order', 'use', 'selection', 'sort']","How many iterations will it take to sort the following array into ascending order using a selection sort?2,5,1,3,4,6
"
794,794,794,25.0,0.24799999594688416,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'statement', 'link', 'list', 'array', 'false']","Which of the following statements about linked lists and arrays is false?
"
795,795,795,25.0,0.10660000145435332,"tree, binary, node, avl, search, child, root, follow, height, leaf","['tree', 'child', 'call']","A tree node which has zero children is called ___?
"
796,796,796,2.0,0.2345999926328659,"int, if, for, while, return, follow, code, mean, sum, new","['give', 'follow', 'incomplete', 'code', 'for', 'selection', 'code', 'must', 'go', 'string', 'for', 'int']","Given the following incomplete Java code for selection sort, which code must go at the place marked with X?public static void selectionSort(String[] array) { for(int i = 0; i < array.length; i ++) { int minimumIndex = i; X }}
"
797,797,797,35.0,0.1509999930858612,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'fastest', 'for', 'input', 'array', 'integer', 'int', 'array', 'fact', 'already', 'sort']","Which of the following sorting algorithms is the fastest for an input array of integers, int[] array, which in fact is already sorted?
"
798,798,798,35.0,0.23499999940395355,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['follow', 'option', 'correct', 'output', 'for', 'post', 'order', 'traversal', 'tree']","Which of the following options is the correct output for the post-order traversal of this tree?
"
799,799,799,52.0,0.1745000034570694,"tree, binary, node, avl, search, child, root, follow, height, leaf","['many', 'node', 'full', 'binary', 'tree', 'depth']","How many nodes does a full binary tree of depth d have?
"
800,800,800,23.0,0.18780000507831573,"hash, table, bucket, open, insert, close, key, function, slot, closed","['allow', 'remove', 'element', 'close', 'hash', 'table', 'use', 'linear_probe']","Is it allowed to remove elements from a closed hash-table that uses linear probing, and why?
"
801,801,801,23.0,0.11330000311136244,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['big', 'notation', 'follow', 'good', 'describe', 'function']","In big O notation which of the following best describes the function f(n) = 2n + nlog(n) + 0.5^(0.5n)?
"
802,802,802,6.0,0.3402999937534332,"node, next, previous, constant, object, pointerthe, follow, private, nodenext, head","['boolean', 'expression', 'indicate', 'whether', 'object', 'link', 'list', 'node', 'use', 'code', 'problem', 'sheet', 'object', 'element', 'listnode', 'next', 'element', 'next']","Which boolean expression indicates whether the objects in two linked list nodes (l and m) are the same?[using the code from the problem sheet:class ListNode { Object element; ListNode next = null; ListNode(Object e, ListNode n) { element = e; next = n; }}]
"
803,803,803,6.0,0.11879999935626985,"remove, base, set, implementation, insert, may, allow, incorrect, entity, limited","['runtime', 'use', 'count', 'sort', 'for', 'sort', 'number', 'maximum', 'digits', 'basis', 'base', 'digit']","What is the runtime when using Counting Sort for sorting n numbers with maximum d digits with basis k based on their digits?
"
804,804,804,37.0,0.08089999854564668,"element, add, index, end, move, place, ie, first, assume, contain","['give', 'array', 'element', 'many', 'iteration', 'sort', 'would', 'require', 'nee', 'move']","Given an array of elements 5, 3, 6, 2, 1, 4, 7, how many iterations of h-sorting with h=2 would be required before we need to move on to h=1?
"
805,805,805,2.0,0.17430000007152555,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'statement', 'use', 'classical', 'binary', 'tree', 'node', 'link', 'implement', 'hard', 'find', 'node', 'parent', 'reheapification', 'swap', 'hard', 'find', 'bottom', 'leave', 'extraction', 'hard', 'find', 'bottom', 'right', 'open', 'spot', 'insert', 'new', 'node', 'insertion']","Which of the following statements is/are true?When using a classical binary tree node with links to implement a heap:1) It is hard to find a node's parents to do reheapification swaps2) It is hard to find the bottom-most, left-most node during extraction3) It is hard to find the bottom-most, right-most open spot to insert a new node during insertion
"
806,806,806,52.0,0.2515000104904175,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['output', 'pre', 'order', 'traversal', 'follow', 'tree', 'if', 'node', 'process', 'print']","What will be the output of a pre-order traversal of the following tree if each node processed is printed out? 10 / \ 4 12 / \ \ 2 6 16
"
807,807,807,52.0,0.2045000046491623,"for, time, complexity, search, runtime, function, none, follow, correct, give","['for', 'function', 'complexity', 'class', 'for', 'for', 'int', 'sum']","For this function what is the complexity class of Big theta (?)?for ( int i = 0; i < q * 100; i++ ) { for ( int j = 0; j < q; j++ ) { sum++; }}
"
808,808,808,29.0,0.06949999928474426,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'option', 'true', 'for', 'tree']","Which of the following options is true for this tree? 8 / \ 4 12 / \ / \ 3 5 10 17 / \ / \ 2 11 15 18 / \ 14 16
"
809,809,809,24.0,0.1793999969959259,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'value', 'equivalent', 'sort', 'algorithm']","An h-sort with an h-value of 1 is equivalent to what other sorting algorithm?
"
810,810,810,36.0,0.11649999767541885,"number, find, take, step, item, average, many, give, second, if","['use', 'find', 'number', 'order', 'for', 'give', 'tree']","Which traversal is being used when you find the numbers 4, 2, 6, 1, 3, 5, 7 (in that order) for the given tree:
"
811,811,811,52.0,0.09350000321865083,"operation, great, remain, put, var, ask, power, much, relation, box","['many', 'operation', 'follow', 'code', 'for', 'var']","How many operations does the following code take?var x = 0;for(var i = 0; i < 2; i++) { x++;}
"
812,812,812,49.0,0.0934000015258789,"operation, great, remain, put, var, ask, power, much, relation, box","['many', 'operation', 'follow', 'code', 'for', 'var']","How many operations does the following code take?var x = 0;for(var i = 0; i < 2; i++) { x++;}
"
813,813,813,47.0,0.12200000137090684,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['represent', 'graph', 'large', 'number', 'node', 'efficient', 'oradjacency', 'list']","When representing a graph with a very large number of nodes, is it more efficient to use a adjacency matrix oradjacency list?
"
814,814,814,25.0,0.06570000201463701,"int, if, for, while, return, follow, code, mean, sum, new",['if'],"If g(n) = O(f1(n)) & h(n) = O(f2(n)) then g(n) + h(n) =O(f1(n)) + O(f2(n))
"
815,815,815,36.0,0.22030000388622284,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['bad', 'case', 'time', 'complexity', 'insertion']","What is the worst case time complexity of insertion sort?
"
816,816,816,36.0,0.15189999341964722,"tree, binary, node, avl, search, child, root, follow, height, leaf","['search', 'avl', 'tree']","What is the time complexity of searching an AVL tree?
"
817,817,817,47.0,0.2198999971151352,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['give', 'follow', 'direct', 'graph', 'correspond']","Given the following directed graph:what is the corresponding adjacency matrix?
"
818,818,818,47.0,0.094200000166893,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['representation', 'graph', 'for', 'dense', 'graph']","Which Representation of a graph should you use for a dense graph?
"
819,819,819,0.0,0.10199999809265137,"tree, binary, node, avl, search, child, root, follow, height, leaf","['mean', 'for', 'binary', 'tree']","What does it mean for a Binary Tree to be 'perfectly balanced'?
"
820,820,820,17.0,0.09700000286102296,"for, time, complexity, search, runtime, function, none, follow, correct, give","['time', 'complexity', 'traverse', 'binary', 'tree']","What is the 'Big-Oh' time complexity of traversing a binary tree?
"
821,821,821,17.0,0.24609999358654025,"right, leave, node, process, sub, current, subtree, describe, differ, left","['binary', 'tree', 'traversal', 'method', 'use', 'follow', 'current', 'nodeprocess', 'node', 'leave', 'subtreeprocess', 'node', 'right', 'subtree']","Which Binary Tree traversal method uses the following algorithm?Process the current nodeProcess the nodes in the left subtreeProcess the nodes in the right subtree
"
822,822,822,35.0,0.2833000123500824,"int, if, for, while, return, follow, code, mean, sum, new","['functionint', 'bigsnack', 'int', 'int', 'for', 'for', 'return']","What is the time complexity of this function?int bigSnack(int n) { int hi = 0; for (int x=0;x<n;x++) { for (int b=0;b<n;b++) { hi = hi + 5; } }return hi;}
"
823,823,823,35.0,0.2143999934196472,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'average', 'time', 'complexity', 'log']","Which of these sorts has the average time complexity of T(n log(n))
"
824,824,824,36.0,0.2149000018835068,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'average', 'time', 'complexity', 'log']","Which of these sorts has the average time complexity of T(n log(n))
"
825,825,825,36.0,0.2802000045776367,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['give', 'follow', 'tree', 'order', 'traversal', 'pre', 'order']","Given the following tree: 13 / \ 10 16 / \ / \ 7 11 15 24what is the order of traversal when doing a pre-order traversal?
"
826,826,826,52.0,0.26660001277923584,"int, if, for, while, return, follow, code, mean, sum, new","['notation', 'for', 'code', 'for', 'for', 'for', 'int', 'sum']","What is the big theta notation for this code:for(int i = 0; i < (1000n + 5)n; i++) { for(int j = 0; j < n2+ 7n + 2; j++ ) { acc ++; }}for(int k = 0; k < n3 + n2; k++) { sum++;}
"
827,827,827,35.0,0.12860000133514404,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['give', 'output', 'dictating', 'node', 'edges_apart']","Given the matrix:0 1 0 00 0 1 00 0 0 10 0 0 0Which matrix is this the output dictating nodes which are three edges apart?
"
828,828,828,2.0,0.2286999970674515,"tree, binary, node, avl, search, child, root, follow, height, leaf","['additional', 'property', 'must', 'avl', 'tree', 'generic', 'binary', 'search', 'tree']","What additional property must an AVL tree have over a generic Binary Search Tree?
"
829,829,829,2.0,0.10700000077486037,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['follow', 'good', 'way', 'store', 'datum', 'for', 'social', 'network', 'like']","Which of the following ADTs is the best way to store data for a social network like Facebook?
"
830,830,830,47.0,0.06360000371932982,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['type', 'sort']","Which type(s) of sorting use recursion?i. Mergesort.ii. Quicksort.iii. Heapsort.
"
831,831,831,29.0,0.2433000057935715,"for, time, complexity, search, runtime, function, none, follow, correct, give","['complexity', 'follow', 'answer', 'describe', 'asymptotic', 'time', 'complexity']","An algorithm has runtime complexity T(n) = 4n2+16n+4. Which of the following answers describes the asymptotic time complexity of the algorithm?
"
832,832,832,23.0,0.4677999913692474,"hash, table, bucket, open, insert, close, key, function, slot, closed","['consider', 'hash', 'table', 'close', 'hash', 'table', 'bucket', 'empty', 'open', 'hash', 'table', 'bucket', 'key', 'insert', 'ratio', 'average', 'number', 'step', 'take', 'insert', 'find', 'item', 'open', 'hash', 'table', 'respect', 'close', 'hash', 'table']","Consider two hash tables: a closed hash table with 750 buckets, 235 of which are empty; and an open hash table with 500 buckets and 275 keys inserted. What is the ratio of the average number of steps it will take to insert/find an item in the open hash table with respect to the closed hash table?
"
833,833,833,23.0,0.18649999797344208,"tree, binary, node, avl, search, child, root, follow, height, leaf","['give', 'follow', 'array', 'maxheap', 'value', 'right', 'child', 'right', 'child', 'node', 'value']","Given the following array of a maxheap: [42,37,24,18,21,23,12,17,10,13,6,8]; what is the value of the right child of the right child of the node with value 37?
"
834,834,834,2.0,0.0934000015258789,"tree, binary, node, avl, search, child, root, follow, height, leaf","['statement', 'tree', 'node', 'false']","Which statement about Tree nodes is false.
"
835,835,835,2.0,0.06660000234842299,"int, if, for, while, return, follow, code, mean, sum, new",['mean'],"What does a load factor of 0.9 mean?
"
836,836,836,23.0,0.11190000176429747,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['input', 'would', 'make', 'sort', 'quick', 'sort', 'number', 'must', 'order', 'smallest', 'large']","Out of the input arrays below, which one would make the sorting algorithm, Quick Sort, most efficient.The numbers must be ordered from smallest to largest.
"
837,837,837,29.0,0.19910000264644626,"for, time, complexity, search, runtime, function, none, follow, correct, give","['follow', 'function', 'great', 'asymptotic', 'growth', 'function', 'least', 'efficient', 'term', 'time', 'think', 'notation']","Which of the following functions has the greatest asymptotic growth? I.e. which function is the least efficient one in terms of time! (Think of O-Notation!)
"
838,838,838,29.0,0.14180000126361847,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'statement', 'true', 'falsequicksort', 'always', 'fast', 'insertion', 'sort']","Is the following statement TRUE or FALSE?Quicksort is always faster than insertion sort.
"
839,839,839,36.0,0.14650000631809235,"hash, table, bucket, open, insert, close, key, function, slot, closed","['definition', 'load', 'hash', 'table']","What is the definition of the ""load"" of a hash table?
"
840,840,840,40.0,0.09719999879598618,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['use', 'traversal', 'would', 'order', 'node', 'process']","Using the breadth-first graph traversal algorithm, what would the order of nodes processed be?
"
841,841,841,47.0,0.2335000038146973,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['follow', 'new', 'boolean', 'graph', 'true', 'graph', 'true', 'graph', 'true', 'graph', 'true', 'graph', 'true', 'graph', 'true']","which of the adjacency matricesrepresent the following code:// undirected graphboolean[][] graph = new boolean[6][6]graph[3][0] = true;graph[2][1] = true;graph[4][1] = true;graph[5][2] = true;graph[0][3] = true;graph[0][5] = true;
"
842,842,842,47.0,0.1340000033378601,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['log', 'factor', 'increase', 'double']","In time complexity O(log n), by what factor does T increase when n is doubled?
"
843,843,843,30.0,0.10010000318288803,"element, add, index, end, move, place, ie, first, assume, contain","['give', 'represent', 'index', 'parent']","Given the array representing a max heap [30,25,28,7,19,12,22], which index is the parent of 12
"
844,844,844,17.0,0.2465000003576279,"right, leave, node, process, sub, current, subtree, describe, differ, left","['describe', 'followingvisit', 'level', 'node', 'leave', 'right', 'visiting', 'node', 'next', 'level']","Which tree traversal algorithm is described by the following?Visit each level's nodes from left to right before visiting nodes in the next level.
"
845,845,845,52.0,0.1476999968290329,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'stable']","Which of the following sorts are stable?
"
846,846,846,36.0,0.23469999432563785,"vertex, edge, graph, change, show, matrix, also, if, formula, name","['theory', 'undirected', 'graph', 'number', 'vertice', 'odd', 'degree', 'even', 'lemma', 'consequence', 'thedegree', 'formula', 'for', 'graph', 'vertex', 'set', 'edge', 'set', 'work', 'sum', 'degree', 'vertex', 'for', 'follow', 'undirected', 'graph']","In graph theory, the handshaking lemma states that ""In any finite undirected graph, the number of vertices with odd degree is even"".The lemma is a consequence of thedegree sum formula: for a graph with vertex set and edge set .Work out the sum of degrees of the vertices for the following undirected graph:
"
847,847,847,0.0,0.11949999630451202,"store, close, want, difficulty, label, stepsopen, hashtable, collisionsthis, counter, presume","['open', 'hashtable', 'want', 'store', 'element', 'able', 'find', 'around', 'step', 'many', 'bucket']","In an open Hashtable, we want to store 2000 elements and be able to find any in around 1.40 steps. How many buckets should our Hashtable have?
"
848,848,848,23.0,0.06270000338554382,"int, if, for, while, return, follow, code, mean, sum, new","['happen', 'if']","What happens if you multiply an adjacency matrix by itself?
"
849,849,849,29.0,0.2329999953508377,"for, time, complexity, search, runtime, function, none, follow, correct, give","['average', 'time', 'complexity', 'interpolation', 'search', 'improve', 'binary', 'search', 'algorithm', 'sort', 'uniformly', 'distribute', 'element']","What is the average time complexity of Interpolation Search, an improved Binary Search algorithm, on a sorted array of N uniformly distributed elements?
"
850,850,850,29.0,0.18690000474452967,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['follow', 'represent', 'direct', 'graph']","Which of the following can you NOT use to represent a directed graph?
"
851,851,851,25.0,0.10199999809265137,"hash, table, bucket, open, insert, close, key, function, slot, closed","['time', 'complexity', 'insertion', 'look', 'use', 'hash', 'table']","What is the time complexity of insertion and look up when using hash tables?
"
852,852,852,36.0,0.14640000462532046,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['make', 'sort', 'algorithm', 'stable']","What makes a sorting algorithm 'stable'?
"
853,853,853,36.0,0.14550000429153442,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['main', 'condition', 'mix', 'term', 'number', 'direct', 'edgesm', 'number', 'undirected', 'edge']","What is the main condition of a mixed graph (ADT) in terms ofn and m?n = number of directed edgesm = number of undirected edges
"
854,854,854,30.0,0.1225999966263771,"pass, send, initial, replace, message, public_key, alice, necessary, publish, generate","['list', 'look', 'first', 'pass', 'sort', 'shellsort', 'pass', 'complete']","How will the list 9, 4, 7, 5, 8, 6, 1, 2 look after the first pass of 3-sort (shellsort h=3) and after all passes are complete.
"
855,855,855,26.0,0.16529999673366547,"tree, binary, node, avl, search, child, root, follow, height, leaf","['for', 'give', 'avl', 'tree', 'if', 'insert', 'rotation', 'require', 'balance', 'tree']","For the given AVL Tree, if 5 is inserted what rotation will be required to re-balance the tree?
"
856,856,856,17.0,0.12839999794960022,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['if', 'take', 'represent', 'graph', 'multiply', 'time', 'find']","If we take an Adjacency Matrix, A, that represents a graph, and multiply it by itself n times, we find out:
"
857,857,857,0.0,0.18690000474452967,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'stable']","Which of the following sorting algorithms are stable?
"
858,858,858,36.0,0.13420000672340393,"include, answer, expect, consist, lane, skiplist, cubic, program, sqrt, information","['skiplist', 'element', 'many', 'element', 'expect', 'lane']","In a SkipList of n elements, how many elements are expected in lane 1 and lane 3?
"
859,859,859,17.0,0.3248000144958496,"right, leave, node, process, sub, current, subtree, describe, differ, left","['description', 'tree', 'type', 'traversal', 'process', 'node', 'leave', 'sub', 'tree', 'process', 'node', 'right', 'sub', 'tree', 'process', 'current', 'node']","Below is a description of a tree traversal, which type of traversal is it?1. Process the nodes in the left sub-tree.2. Process the nodes in the right sub-tree.3. Process the current node.
"
860,860,860,52.0,0.01669999957084656,"vertex, edge, graph, change, show, matrix, also, if, formula, name",[],"What is an adjacency matrix?
"
861,861,861,36.0,0.1590999960899353,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['many', 'follow', 'sort', 'method', 'stable', 'selection', 'sortshell', 'sortbubble']","How many of the following sort methods are stable:Selection SortShell SortBubble SortHeap SortMerge Sort
"
862,862,862,36.0,0.1272999942302704,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'valid', 'maxheap', 'order']","Which of the following is a valid maxheap? (Assuminglexicographic order)
"
863,863,863,2.0,0.14550000429153442,"tree, binary, node, avl, search, child, root, follow, height, leaf","['give', 'element', 'find', 'final', 'balanced', 'avl', 'tree']","Given the elements [14, 18, 3, 2, 1, -1, -4, 5, 20], find the final balanced AVL Tree.
"
864,864,864,23.0,0.2540999948978424,"hash, table, bucket, open, insert, close, key, function, slot, closed","['closed', 'hashtable', 'size', 'linear_probing', 'right', 'orderthe', 'hash', 'function', 'form', 'final']","Insert the elements -3, -5, -1, 5, 0, 4, into a standard closed hashtable (of size 6) with linear probing (to the right) in that order.The hash function has the form h(x) = ((x+1)2-3) % 6.What does the final hashtable look like?
"
865,865,865,23.0,0.2540999948978424,"hash, table, bucket, open, insert, close, key, function, slot, closed","['closed', 'hashtable', 'size', 'linear_probing', 'right', 'orderthe', 'hash', 'function', 'form', 'final']","Insert the elements -3, -5, -1, 5, 0, 4, into a standard closed hashtable (of size 6) with linear probing (to the right) in that order.The hash function has the form h(x) = ((x+1)2-3) % 6.What does the final hashtable look like?
"
866,866,866,23.0,0.24660000205039975,"for, time, complexity, search, runtime, function, none, follow, correct, give","['runtime', 'for', 'follow', 'fragment', 'for', 'for', 'for', 'for', 'int', 'return']","The runtime for the following code fragment is?(f(m,n)). What is f(m,n)?int a;for (int i = -5; i < n; i++) for (int j = 1; j < 2i+1; 2*j) for (int k = 1; k < n-1; 3*k) a=a+1; for (int l = 0; l < m; 5*l) a=a+j;return a;
"
867,867,867,29.0,0.05880000069737434,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['extract', 'big', 'item', 'maxheap']","How do you extract the biggest item from a Maxheap?
"
868,868,868,2.0,0.12759999930858612,"value, balance, rotation, unbalanced, clockwise, become, dependant, occur, bst, insert","['value', 'would', 'signify', 'balance', 'need', 'avl', 'tree']","Which value would signify that a re-balance is needed in an AVL tree?
"
869,869,869,24.0,0.07729999721050262,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['form', 'tree', 'traversal']","Which is not a form of tree traversal
"
870,870,870,52.0,0.06480000168085097,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['use', 'sort']","Which sort uses h-sorting?
"
871,871,871,36.0,0.25519999861717224,"node, next, previous, constant, object, pointerthe, follow, private, nodenext, head","['see', 'for', 'object', 'element', 'element', 'next', 'class', 'linkedlist', 'private', 'listnode', 'head', 'private', 'int', 'list', 'size', 'public', 'object', 'get', 'int', 'if', 'error', 'return', 'nodeelement', 'method', 'get', 'find', 'nodeiin', 'link', 'list', 'output', 'element', 'get', 'output', 'headelement', 'code', 'go', 'for', 'method', 'work', 'correctly']","See the incomplete java code below for the classes ListNode and LinkedList:class ListNode { Object element; ListNode next; ListNode(Object e, ListNode n) { element = e; next = n; }}class LinkedList { private ListNode head = null; private int n = 0; // n is the list size public Object get(int i) { if (i<0 || i>=n) { // …error! } ListNode node = head; X return node.element; }}The method get finds nodeiin the linked list and outputs its element (get(0) outputs head.element). Which code should go at the place marked X for the method to work correctly?
"
872,872,872,6.0,0.14139999449253082,"tree, binary, node, avl, search, child, root, follow, height, leaf","['type', 'rotation', 'need', 'balance', 'follow', 'unbalanced', 'avl', 'tree']","What type of rotation is needed to balance the following unbalanced AVL tree? 5 / \ 2 7 / \ 1 3 \ 4
"
873,873,873,24.0,0.10610000044107436,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['use', 'selection', 'sort', 'follow', 'permutation', 'take', 'swap', 'ascend', 'order']","Using selection sort, which of the following permutations of [1,2,3,4,5] takes 5 swaps? (Ascending order)
"
874,874,874,35.0,0.25290000438690186,"int, if, for, while, return, follow, code, mean, sum, new","['big', 'for', 'random', 'value', 'else', 'if', 'for', 'else', 'for', 'int']","What is the Big-O of the code below for a random value of j?if( j>=0 && j<=5) a+=5;else if( j<0){ for(int i = 0; i<=n; i++){ a+=3; }}else{ for(int i = 0; i<n*n; i++){ a+=8; }}
"
875,875,875,35.0,0.1097000017762184,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['complexity', 'bad', 'case', 'scenario', 'for', 'quicksort']","What is the complexity of the worst-case scenario for quicksort?
"
876,876,876,25.0,0.23149999976158145,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['skip', 'list', 'contain', 'lane', 'use', 'organise', 'average', 'combined', 'sum', 'pointer', 'lane', 'close']","A skip list containing lanes from 0 to 12 is used to organise 262000 elements.On average, what will the combined sum of pointers in lanes 3, 8 and 11 be closest to?
"
877,877,877,25.0,0.1242000013589859,"for, time, complexity, search, runtime, function, none, follow, correct, give","['provide', 'limited', 'runtime', 'complexity', 'insert', 'find', 'remove', 'for']","Provided that the load factor is limited, what is the runtime complexity of insert, find and remove for a hashtable?
"
878,878,878,29.0,0.1476999968290329,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['follow', 'statement', 'true']","Which of the following statements are true?
"
879,879,879,36.0,0.1315000057220459,"for, time, complexity, search, runtime, function, none, follow, correct, give","['correct', 'order', 'asymptotic', 'complexity', 'fastest', 'slow']","Which of the below is the correct order of asymptotic complexity, from fastest to slowest
"
880,880,880,2.0,0.37560001015663147,"tree, binary, node, avl, search, child, root, follow, height, leaf","['binary', 'search', 'tree', 'binary', 'tree', 'avl', 'tree', 'type', 'tree', 'special', 'type']","Binary Search Trees, Binary Trees and AVL Trees are all types of Tree, but which is a special type of which?
"
881,881,881,2.0,0.1776999980211258,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'divide', 'conquer', 'strategy']","Which of the following sorting algorithms use a 'Divide & Conquer' strategy?
"
882,882,882,36.0,0.13019999861717224,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['order', 'first', 'last', 'node', 'process', 'order', 'traversal', 'binary', 'tree']","In which order (from first to last) are nodes processed by an In-Order traversal of a binary tree?
"
883,883,883,17.0,0.09849999845027924,"for, time, complexity, search, runtime, function, none, follow, correct, give","['bad', 'case', 'run', 'time', 'bst', 'search', 'for', 'tree', 'value']","What is the worst case run time of a BST search for a tree with N values?
"
884,884,884,2.0,0.17960000038146973,"tree, binary, node, avl, search, child, root, follow, height, leaf","['many', 'different', 'order', 'character', 'insert', 'avl', 'tree', 'describe', 'lecture']","How many different orders of the characters 'B', 'A', 'T', 'H' can be inserted into the AVL tree described in lectures, such that preorder traversal will return ""BATH""?
"
885,885,885,2.0,0.1103999987244606,"measurement, precision, accuracy, difference, image, significant, definition, regard, accuracylow, accuracyhigh","['definition', 'precision']","What is the definition of precision?
"
886,886,886,41.0,0.11029999703168868,"measurement, precision, accuracy, difference, image, significant, definition, regard, accuracylow, accuracyhigh","['definition', 'precision']","What is the definition of precision?
"
887,887,887,41.0,0.12700000405311584,"tree, binary, node, avl, search, child, root, follow, height, leaf","['follow', 'false', 'complete', 'binary', 'tree']","Which of the following is false about a complete binary tree?
"
888,888,888,23.0,0.34150001406669617,"hash, table, bucket, open, insert, close, key, function, slot, closed","['insert', 'follow', 'element', 'standard', 'close', 'hashtable', 'linear_probing', 'right', 'order', 'hash', 'function', 'form', 'slot', 'hashtable']","Insert the following elements into a standard closed hashtable with linear probing (to the right): 22, 9, 3, 16, 6, 29, 12, 26, in that order. The hash function has the form h(x) = x % 8 (with slots 0,...,7). What does the hashtable look like?
"
889,889,889,23.0,0.2215999960899353,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'always', 'stable']","Which of the following sorting algorithms is always stable?
"
890,890,890,36.0,0.1216999962925911,"tree, binary, node, avl, search, child, root, follow, height, leaf","['avl', 'tree', 'maximum', 'balance', 'factor', 'node', 'need', 'balance']","In an AVL Tree, what is the maximum balance factor a node can have before it needs re-balancing?
"
891,891,891,2.0,0.13930000364780426,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'bad', 'complexity']","Which of the following is the worst complexity?
"
892,892,892,36.0,0.01669999957084656,"vertex, edge, graph, change, show, matrix, also, if, formula, name",[],"What is a ADT?
"
893,893,893,12.0,0.10140000283718108,"number, find, take, step, item, average, many, give, second, if","['use', 'binary', 'search', 'datum', 'set', 'element', 'maximum', 'number', 'iteration', 'would', 'take', 'find', 'specific', 'element']","Using binary search with a data set with 1,048,576 elements, what is the maximum number of iterations would it take to find a specific element?
"
894,894,894,38.0,0.2046000063419342,"datum, structure, data, space, implement, possible, memory, store, work, for","['follow', 'data', 'structure', 'difficult', 'datum']","Which of the following data structures is it difficult to remove data from?
"
895,895,895,27.0,0.2831999957561493,"would, use, result, determine, create, sequence, state, maxheap, num, body","['would', 'resultant', 'maxheap', 'add', 'number', 'maxheap', 'image', 'create', 'use', 'drawio']","What would be the resultant maxheap after adding the number ""15"" to the maxheap (All images created using draw.io):
"
896,896,896,27.0,0.14020000398159027,"hash, table, bucket, open, insert, close, key, function, slot, closed","['mean', 'for', 'open', 'hash', 'table']","What is meant by the the Load Factor (L) for an Open Hash Table?
"
897,897,897,23.0,0.14920000731945038,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['big', 'time', 'complexity', 'level', 'order', 'traversal', 'for', 'tree', 'structure', 'node', 'pick', 'small', 'upper_bound', 'applie']","What is the Big-O time complexity of Level Order Traversal for a tree structure with n nodes? (Pick the smallest upper bound which applies.)
"
898,898,898,52.0,0.12919999659061432,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['select', 'correct', 'statement', 'time', 'complexity', 'big', 'notation']","Select the correct statement about time complexity (Big-O notation).
"
899,899,899,29.0,0.12700000405311584,"low, require, many, swap, perform, static, hard, partition, growth_rate, sortbubble","['sort', 'algorithm', 'use', 'low', 'ram', 'embed', 'system']","Which sorting algorithms are used in some low RAM embedded systems?
"
900,900,900,35.0,0.308899998664856,"int, if, for, while, return, follow, code, mean, sum, new","['bad', 'case', 'average', 'case', 'good', 'case', 'complexitie', 'if', 'sum', 'return', 'for', 'int', 'sum', 'if', 'sum', 'for', 'int', 'sum']","What is the O (worst case), ? (average case), and O (best case) complexities of this method:void foo(int sum) { if(sum == 0) { return; } for (int i = 0 ; i < n*n ; i++) { sum += i + n; } if(sum == 5000) { for (int i = 0 ; i < n*n*n ; i++) { sum += i; } }}
"
901,901,901,35.0,0.17229999601840973,"value, balance, rotation, unbalanced, clockwise, become, dependant, occur, bst, insert","['insert', 'value', 'binary', 'search', 'tree', 'many', 'singular', 'rotation', 'occur', 'direction', 'final', 'rotation', 'order', 'for', 'perfectly_balanced']","Inserting the values 1, 2, 3, 4, 5, 6, 7 into a binary search tree, how many singular rotations occur and what is the direction of the final rotation in order for it to be perfectly balanced?
"
902,902,902,2.0,0.19169999659061432,"tree, binary, node, avl, search, child, root, follow, height, leaf","['maximum', 'number', 'element', 'insert', 'root', 'leave', 'sub', 'tree', 'tree', 'avl', 'tree', 'include', 'insertion', 'cause', 'unbalance', 'part', 'answer']","With the BST below, what is the maximum number of elements which can be inserted into the root's left sub-tree until the tree is not an AVL tree (include the insertion which causes the unbalance as part of your answer)?5 \ 6
"
903,903,903,2.0,0.19059999287128448,"hash, table, bucket, open, insert, close, key, function, slot, closed","['open', 'closed', 'hash', 'table']","Which is a valid comparison between open and closed hash tables?
"
904,904,904,23.0,0.09109999984502792,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'statement', 'false']","Which of the following statements is false?
"
905,905,905,2.0,0.3779999911785126,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['faster', 'link', 'list', 'array', 'insert', 'new', 'item', 'front', 'remove', 'item', 'middle']","Which is faster (linked list or array) when1) inserting a new item at front?2) removing an item from the middle?
"
906,906,906,25.0,0.09740000218153,"for, time, complexity, search, runtime, function, none, follow, correct, give","['time', 'complexity', 'add', 'deleting', 'item']","What is the time complexity of adding and deleting items in a priority queue
"
907,907,907,50.0,0.09730000048875807,"for, time, complexity, search, runtime, function, none, follow, correct, give","['time', 'complexity', 'add', 'deleting', 'item']","What is the time complexity of adding and deleting items in a priority queue
"
908,908,908,50.0,0.1387999951839447,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['average', 'case', 'run', 'time']","What is the average case run-time of heap sort?
"
909,909,909,50.0,0.19910000264644626,"element, add, index, end, move, place, ie, first, assume, contain","['assume', 'index', 'array', 'representation', 'index', 'right', 'child', 'index']","Assuming 0 indexed array representation of a heapwhat is the index of the right child of the node at index 5
"
910,910,910,50.0,0.19910000264644626,"element, add, index, end, move, place, ie, first, assume, contain","['assume', 'index', 'array', 'representation', 'index', 'right', 'child', 'index']","Assuming 0 indexed array representation of a heapwhat is the index of the right child of the node at index 5
"
911,911,911,50.0,0.1745000034570694,"element, add, index, end, move, place, ie, first, assume, contain","['store', 'index', 'index', 'parent', 'item', 'index']","Assume a heap stored at an 0 indexed array.What is the index of the parent of the item in index 5.
"
912,912,912,50.0,0.1745000034570694,"element, add, index, end, move, place, ie, first, assume, contain","['store', 'index', 'index', 'parent', 'item', 'index']","Assume a heap stored at an 0 indexed array.What is the index of the parent of the item in index 5.
"
913,913,913,35.0,0.2400999963283539,"int, if, for, while, return, follow, code, mean, sum, new","['incorrect', 'implementation', 'selection', 'sort', 'for', 'sort', 'item', 'ascend', 'order', 'wrong', 'code', 'may', 'assume', 'for', 'int', 'int', 'minindex', 'for', 'if', 'minindex']","Below is an incorrect implementation of Selection Sort for sorting items in ascending order. What is wrong with the code? You may assume the swap function is correct.void selectionSort(int a[], int n){ for (int i = 0; i < n-1; i++){ int minIndex = i; for (int j = i + 1; j < n-1; j++){ if (a[j] < a[minIndex]){ minIndex = j; } } swap(a, i, minIndex); }}
"
914,914,914,35.0,0.2061000019311905,"hash, table, bucket, open, insert, close, key, function, slot, closed","['possible', 'remove', 'entry', 'closed', 'hash', 'table', 'linear_probing']","Why is is not possible to remove an entry from a Closed Hash Table with Linear Probing?
"
915,915,915,23.0,0.09700000286102296,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'list', 'number', 'look_like', 'different', 'layer', 'quick', 'sort', 'pivot', 'use', 'thefirst', 'element']","what will the following list of numbers look like at different layers of Quick Sort? (where the pivot used is thefirst element)6, 5, 3, 4, 1, 8, 7, 2, 9
"
916,916,916,20.0,0.2345999926328659,"method, size, input, go, exist, elementary_operation, likely, give, use, alphabetical","['quadratic', 'time', 'use', 'elementary_operation', 'give', 'input', 'likely', 'amount', 'elementary_operation', 'for']","A quadratic time algorithm uses 27 elementary operations when given an input n=10. What is the (most likely) amount of elementary operations for n=1000?
"
917,917,917,20.0,0.12929999828338626,"value, balance, rotation, unbalanced, clockwise, become, dependant, occur, bst, insert","['would', 'balance', 'value', 'node', 'value', 'avl', 'tree']","From the diagram (above), what would the balance value of the node with value ""Ronda"" be? Is this an AVL tree?
"
918,918,918,2.0,0.1272999942302704,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['average', 'runtime', 'sort', 'algorithm', 'big', 'notation']","What is the average runtime of these sorting algorithms? (in Big O notation)InsertionSortQuickSortMergeSort
"
919,919,919,35.0,0.2375999987125397,"int, if, for, while, return, follow, code, mean, sum, new","['complexity', 'follow', 'functionfor', 'int', 'int', 'while', 'sum']","What is the complexity of the following function?for (int i=0 ; i < n ; i++){ int k = n; while (k > 1){ sum++; k = k/2; }}
"
920,920,920,35.0,0.096500001847744,"for, time, complexity, search, runtime, function, none, follow, correct, give","['let', 'function', 'if', 'big', 'complexity']","Let g, h, f1 and f2 be functions. If g(n) = O( f1(n) ) and h(n) = O( f2(n) ), what is the big-O complexity of (g(n)+h(n))?
"
921,921,921,2.0,0.29750001430511475,"tree, binary, node, avl, search, child, root, follow, height, leaf","['give', 'root', 'node', 'leaf', 'node', 'if', 'balanced', 'avl', 'tree']","Given 67, 54, 3, 98, 34, which is the root node and which are leaf nodes if it were a balanced AVL tree
"
922,922,922,2.0,0.16609999537467954,"element, add, index, end, move, place, ie, first, assume, contain","['average', 'many', 'node', 'would', 'expect', 'fourth', 'list', 'element', 'assume', 'first', 'lane', 'contain', 'element']","On average, how many nodes would you expect to be in the fourth lane of a skip-list with 64 elements (Assuming the first lane contains all elements)?
"
923,923,923,50.0,0.09350000321865083,"slow, fastest, linked, experimental, inefficient, factorial, gs, tocheck, jump, listd","['fastest', 'sort', 'randomly', 'order', 'linked', 'list']","Which of these algorithms should be the fastest to sort a randomly ordered linked-list?
"
924,924,924,36.0,0.149399995803833,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['good', 'bad', 'average', 'amortise', 'runtime', 'add', 'element', 'arraylist']","What is the best, worst, and average/amortised runtime of adding an element to an arraylist?
"
925,925,925,48.0,0.1022000014781952,"hash, table, bucket, open, insert, close, key, function, slot, closed","['statement', 'hash', 'table', 'false']","Which of these statements about hash tables is FALSE?
"
926,926,926,23.0,0.17900000512599945,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'set', 'sort', 'algorithm', 'stable']","Which of the following sets of sorting algorithms are all stable?
"
927,927,927,36.0,0.12080000340938568,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'list', 'number', 'iteration', 'bubble', 'sort']","What will the following list of numbers look like after 2 iterations of a bubble sort:6, 5, 3, 4, 1, 8, 7, 2, 9
"
928,928,928,36.0,0.07119999825954437,"tree, binary, node, avl, search, child, root, follow, height, leaf","['if', 'add', 'number', 'follow', 'tree', 'type', 'balance', 'algorithm', 'require']","If I was to add the number 8 to the following tree, what type of balancing algorithm will be required: (4) / \ (2) (6) \ (9)
"
929,929,929,24.0,0.1097000017762184,"for, time, complexity, search, runtime, function, none, follow, correct, give","['follow', 'definition', 'correctly', 'describe', 'meaning', 'accuracy']","Which of the following definitions correctly describes the meaning of ""accuracy""?
"
930,930,930,41.0,0.1527000069618225,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'skip', 'list', 'element', 'would', 'compare', 'include', 'program', 'moment', 'find']","In the following skip list, which elements would be compared with ""d"", including the lane that the program is in at that moment, before ""d"" is found:Lane 1: ""a"" ""e""Lane 2: ""a"" ""c"" ""e""Lane 3: ""a"" ""b"" ""c"" ""d"" ""e""
"
931,931,931,40.0,0.19859999418258667,"number, find, take, step, item, average, many, give, second, if","['merge', 'take', 'sort', 'array', 'item', 'long', 'would', 'take', 'approximately', 'sort', 'array', 'item']","Merge sort algorithm takes 69s to sort an array of 1000 items. How long would it take (approximately) to sort an array of 10000 items?
"
932,932,932,40.0,0.06599999964237213,"tree, binary, node, avl, search, child, root, follow, height, leaf",['tree'],"Which of these is NOTa characteristic of a B+ tree?
"
933,933,933,2.0,0.19120000302791595,"tree, binary, node, avl, search, child, root, follow, height, leaf","['if', 'unbalanced', 'avl', 'tree', 'new', 'leaf', 'node', 'tree', 'balance']","If this is an unbalanced AVL tree, what are the new leaf nodes of the tree once it has been balanced? (7) / \ (5) (10) / \ (4) (9) / (1)
"
934,934,934,2.0,0.17299999296665192,"tree, binary, node, avl, search, child, root, follow, height, leaf","['implementation', 'avl', 'tree', 'would', 'want', 'rebalance', 'tree', 'insertion']","In an implementation of an AVL Tree, why would you want to rebalance the tree after insertion?
"
935,935,935,2.0,0.11190000176429747,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['statement', 'true']","Which of these statements are true?
"
936,936,936,17.0,0.3815999925136566,"right, leave, node, process, sub, current, subtree, describe, differ, left","['describe', 'process', 'node', 'leave', 'subtree', 'process', 'current', 'node', 'process', 'node', 'subtree']","What kind of traversal does this describe?1)process nodes in left subtree2)process current node3)process nodes in right subtree
"
937,937,937,17.0,0.0731000006198883,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['statement', 'false']","Which of these statements is FALSE
"
938,938,938,40.0,0.07270000129938126,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['statement', 'false']","Which of these statements is FALSE
"
939,939,939,40.0,0.2517000138759613,"tree, binary, node, avl, search, child, root, follow, height, leaf","['construct', 'perfectly_balanced', 'binary', 'tree', 'give', 'follow', 'number', 'leaf', 'node', 'leave', 'right']","When constructing a perfectly balanced binary tree given the following numbers: 40, 5, 37, 9, 100, 28, 59Which will be leaf nodes? (left to right)
"
940,940,940,2.0,0.15119999647140506,"tree, binary, node, avl, search, child, root, follow, height, leaf","['invent', 'avl', 'tree']","Who invented AVL trees?
"
941,941,941,36.0,0.181099995970726,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'algorithm', 'fast', 'average', 'case']","Which sorting algorithm has the fastest average case?
"
942,942,942,36.0,0.17440000176429749,"number, find, take, step, item, average, many, give, second, if","['give', 'sorted', 'list', 'many', 'step', 'would', 'binary', 'search', 'take', 'find', 'list']","Given the sorted list: 10, 16, 25, 33, 52, 58, 61, 70, 100, 140How many steps would a binary search take to find 10 in the list?
"
943,943,943,40.0,0.183899998664856,"number, find, take, step, item, average, many, give, second, if","['give', 'array', 'many', 'step', 'would', 'take', 'find', 'value', 'use', 'binary']","In the given array, how many steps would it take to find the value '20' when using binary search?__________________________________| 6 | 10 | 13 | 15 | 19 | 20 | 27 | 39 | 41 | 48 |
"
944,944,944,40.0,0.10159999877214433,"int, if, for, while, return, follow, code, mean, sum, new","['int', 'for', 'perform']","int[] arr;for ( int i = 0; i < n; i++ )arr[i] = 0;What is T(n), the number of elementary operations, that this algorithm performs
"
945,945,945,40.0,0.21150000393390656,"number, find, take, step, item, average, many, give, second, if","['for', 'dictionary', 'word', 'many', 'step', 'binary', 'search', 'take', 'find', 'particular', 'word']","For a dictionary with 10,000,000 words in it, how many steps does the binary search algorithm take to find a particular word?
"
946,946,946,40.0,0.15289999544620514,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['statement', 'transitivity', 'rule']","Which of these statements is the Big-Oh transitivity rule?
"
947,947,947,36.0,0.33390000462532043,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'good', 'case', 'bad', 'case', 'time', 'complexity']","Which of the following sorting algorithms has the same best-case and worst-case time complexities?
"
948,948,948,36.0,0.1151999980211258,"number, find, take, step, item, average, many, give, second, if","['max', 'number', 'comparison', 'need', 'find', 'name', 'binary', 'search', 'follow', 'list']","What is the max number of comparisons needed to find a name with binary search in the following list:AaronAndreaBenBryceEmmaJamesJohnVictoria
"
949,949,949,40.0,0.07169999927282332,"tree, binary, node, avl, search, child, root, follow, height, leaf","['tree', 'type']","A tree is a type of ....
"
950,950,950,2.0,0.20829999446868894,"tree, binary, node, avl, search, child, root, follow, height, leaf","['suppose', 'follow', 'avltree', 'if', 'remove', 'root', 'node', 'correctly', 'could', 'binary', 'treelook', 'like']","Suppose we have the following AVLTree. If we remove the root node 4 correctly, how could the binary treelook like after? (4) / \ / \ / \ / \ (2) (6) / \ / \ / \ / \ (1) (3) (5) (7) / \ / \ (0) (8)
"
951,951,951,2.0,0.1476999968290329,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['follow', 'statement', 'true']","Which of the following statements is true?
"
952,952,952,36.0,0.0608999989926815,"represent, graph, follow, exactly, apply, way, direct, give, distance, path","['property', 'apply', 'notation']","Which of these properties do not apply to big-Oh notation?
"
953,953,953,35.0,0.12359999865293506,"for, time, complexity, search, runtime, function, none, follow, correct, give","['let', 'real', 'number', 'time', 'complexity', 'function', 'say', 'if']","Let c,N be real numbers, and f(n), g(n) be time complexity functions.The function f(n) is said to be O(g(n)) if:
"
954,954,954,29.0,0.15230000019073486,"for, time, complexity, search, runtime, function, none, follow, correct, give","['bind', 'asymptotic', 'complexity']","Which of these is the exact bound of asymptotic complexity?
"
955,955,955,36.0,0.19020000100135806,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'fastest', 'for', 'nearly', 'sort', 'datum']","Which of the following sorting algorithms is the fastest for nearly sorted data?
"
956,956,956,36.0,0.01669999957084656,"vertex, edge, graph, change, show, matrix, also, if, formula, name",[],"Which statement is incorrect?
"
957,957,957,29.0,0.17159999907016754,"hash, table, bucket, open, insert, close, key, function, slot, closed","['many', 'bucket', 'would', 'need', 'open', 'hash', 'table', 'if', 'wish', 'store', 'item', 'average', 'step', 'nearest', 'integer']","How many buckets would you need in your open hash table If you wish to store 10,000 items in an average of 1.45 steps? (To the nearest integer)
"
958,958,958,2.0,0.2110999971628189,"tree, binary, node, avl, search, child, root, follow, height, leaf","['give', 'follow', 'selection', 'integer', 'follow', 'would', 'valid', 'avl', 'tree']","Given the following selection of integers,2,5,11,14,17,24,51Which of the following would be valid AVL trees:1: 14 11 17 2 5 24 512: 24 14 51 5 17 2 11 3: 14 5 24 2 11 17 514: 51 17 24 2 5 11 14
"
959,959,959,2.0,0.16820000112056732,"measurement, precision, accuracy, difference, image, significant, definition, regard, accuracylow, accuracyhigh","['follow', 'image', 'represent', 'option', 'regard', 'precision', 'accuracy']","The following image represents which option in regards to its precision and accuracy.
"
960,960,960,41.0,0.16200000047683716,"right, leave, node, process, sub, current, subtree, describe, differ, left","['follow', 'unbalanced', 'avl', 'tree', 'impossible', 'balance', 'note', 'for', 'tree', 'element', 'value', 'current', 'node', 'place', 'leave', 'current', 'node']","Which of the following unbalanced AVL trees are impossible to balance? (NOTE: For these trees, elements that have the same value as the current node are placed to the left of the current node)1) 4 4 42) 9 8 83) 2 2 14) 5 1 7 1 1
"
961,961,961,17.0,0.06369999796152115,"measurement, precision, accuracy, difference, image, significant, definition, regard, accuracylow, accuracyhigh","['mean', 'precision']","what is the meaning of precision
"
962,962,962,29.0,0.09759999811649324,"tree, binary, node, avl, search, child, root, follow, height, leaf","['calculate', 'balance', 'tree', 'sub', 'tree']","how do you calculate the balance of a tree or sub-tree
"
963,963,963,17.0,0.1428000032901764,"tree, binary, node, avl, search, child, root, follow, height, leaf","['root', 'object', 'empty', 'tree']","What is in the ""root"" object of an empty tree?
"
964,964,964,6.0,0.06669999659061432,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection",['stable'],"Which of these are stable?
"
965,965,965,36.0,0.1835000067949295,"for, time, complexity, search, runtime, function, none, follow, correct, give","['exact', 'bind', 'complexity', 'for', 'follow', 'code', 'for', 'for', 'int', 'sum']","What is the exact bound complexity for the following code:for ( int i= 0; I < n; i++ ) for ( int j = 99; j < n*n; j++ ) sum++;
"
966,966,966,29.0,0.18080000579357147,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['quicksort', 'stable', 'bad', 'case', 'complexity']","Is quicksort stable? What is its worst case complexity?
"
967,967,967,36.0,0.1264999955892563,"tree, binary, node, avl, search, child, root, follow, height, leaf","['avl', 'tree', 'mean', 'if', 'node', 'balance', 'value']","In an AVL Tree, what does it mean if a node has a balance value of -1 ?
"
968,968,968,17.0,0.1347000002861023,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['true', 'false', 'transitivity', 'apply', 'use', 'omega']","True or False - Transitivity applies when using Big O, Theta and Omega?
"
969,969,969,30.0,0.10700000077486037,"number, find, take, step, item, average, many, give, second, if","['use', 'small', 'element', 'simplify', 'quick', 'sort', 'average', 'many', 'level']","When using QuickSelect, we use the k-th smallest element to simplify quick sort. On average, how many levels will there be?
"
970,970,970,40.0,0.184799998998642,"number, find, take, step, item, average, many, give, second, if","['calculate', 'average', 'number', 'step', 'need', 'find', 'empty', 'space', 'hash', 'table', 'table', 'intend', 'bucket']","Calculate the average number of steps needed to find an empty space in a hash table when the table is intended to have 57 keys and has 145 buckets in the array.
"
971,971,971,40.0,0.17870000004768372,"number, find, take, step, item, average, many, give, second, if","['if', 'take', 'second', 'process', 'element', 'take', 'second', 'process', 'result', 'complexity']","If an algorithm takes 1 second to process 1,000 elements and takes 8,000 seconds to process 20,000 results, what is its complexity?
"
972,972,972,25.0,0.4533999860286713,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'statement', 'compare', 'link', 'list', 'array', 'true', 'link', 'list', 'would', 'faster', 'th', 'itemb', 'link', 'list', 'would', 'faster', 'remove', 'item', 'would', 'faster', 'insert', 'item', 'front', 'would', 'array', 'less', 'memory', 'since', 'storage', 'for', 'pointer']","Which of the following statements comparing linked lists with arrays are true:A) In a Linked List, it would be faster to get to the 110th item.B) In a Linked List, it would be faster to remove an item from the middle of it.C) In an Array, it would be be faster to insert an item in the front of it.D) Arrays use less memory since they do not use storage for pointers.
"
973,973,973,25.0,0.24779999256134036,"number, find, take, step, item, average, many, give, second, if","['give', 'close', 'hash', 'table', 'bucket', 'average', 'number', 'step', 'take', 'insert', 'find', 'item', 'if', 'maximum', 'number', 'key', 'insert']","Given a closed hash table with 50 buckets, what is the average number of steps it will take to insert/find an item if the maximum number of keys to insert is 40?
"
974,974,974,40.0,0.17470000684261322,"for, time, complexity, search, runtime, function, none, follow, correct, give","['time', 'complexity', 'for', 'binary', 'search']","What is the Time Complexity for Binary Search?
"
975,975,975,29.0,0.1315000057220459,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['if', 'follow', 'statement', 'true']","If f(n) = 2^n+ 10, g(n) = 5nlog(n), and h(n) = n^2 + log(n), which of the following statements is true?
"
976,976,976,30.0,0.098300002515316,"for, time, complexity, search, runtime, function, none, follow, correct, give","['complete', 'sentence', 'book', 'runtime', 'for']","Complete this sentence:To sort N books, the runtime for _________ is ___ .
"
977,977,977,23.0,0.27889999747276306,"hash, table, bucket, open, insert, close, key, function, slot, closed","['open', 'hash', 'table', 'almost', 'always', 'less', 'runtime', 'efficient', 'closed', 'hash', 'table']","Open hash tables are almost always less runtime efficient than closed hash tables
"
978,978,978,23.0,0.11209999769926073,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'stable']","Which of these sorts are ALL Stable?
"
979,979,979,36.0,0.060600001364946365,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['compute', 'big', 'algorithm']","How do you compute the Big-O of an algorithm?
"
980,980,980,40.0,0.14020000398159027,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['doubly', 'link', 'list', 'travel', 'direction']","Doubly Linked lists can only travel in one direction: down.
"
981,981,981,25.0,0.13220000267028809,"tree, binary, node, avl, search, child, root, follow, height, leaf","['tree', 'use', 'binary', 'tree', 'output']","What tree traversal algorithm was used on the binary tree to get the output of:
"
982,982,982,52.0,0.22370000183582306,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['would', 'output', 'for', 'give', 'tree', 'use', 'post', 'order', 'traversal']","What would the output be for the given tree when using post-order traversal? A / \ B C / \ / \ D E F G
"
983,983,983,52.0,0.11209999769926073,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['stable', 'sort']","What is the definition of a 'stable' sort?
"
984,984,984,36.0,0.18209999799728396,"int, if, for, while, return, follow, code, mean, sum, new","['complexity', 'follow', 'forvalue', 'for', 'if', 'return']","What is the complexity of the following code?int searchArray(int arr[], int n, int forValue) { for ( int i = 0; i < n; i++ ) { if (arr[i] == forValue) { return i*2; } }}
"
985,985,985,17.0,0.31869998574256897,"right, leave, node, process, sub, current, subtree, describe, differ, left","['type', 'follow', 'follow', 'step', 'process', 'node', 'leave', 'sub', 'tree', 'process', 'node', 'right', 'sub', 'tree', 'process', 'current', 'node']","Which type of traversal follows the following steps?1. Process nodes in the left sub-tree2. Process nodes in the right sub-tree3. Process the current node
"
986,986,986,52.0,0.15320000052452087,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['stable', 'sort', 'algorithm']","What is a stable sorting algorithm?
"
987,987,987,36.0,0.058699999004602425,"datum, structure, data, space, implement, possible, memory, store, work, for","['list', 'structure', 'quick', 'traverse']","Which List structure is the quickest to traverse?
"
988,988,988,25.0,0.13940000534057614,"true, statement, big, follow, planation, factor, notation, position, rule, omega","['off', 'big', 'hash', 'table', 'true']","Which statement about the trade-offs of having a big hash tables is true?
"
989,989,989,23.0,0.15039999783039093,"for, time, complexity, search, runtime, function, none, follow, correct, give","['bad', 'cast', 'runtime', 'complexity', 'bubblesort']","What is the worst-cast runtime-complexity of Bubblesort?
"
990,990,990,29.0,0.13019999861717224,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['good', 'case', 'runtime', 'complexity', 'ofbubble', 'sort']","What is the best-case runtime-complexity ofBubble Sort?
"
991,991,991,36.0,0.18639999628067014,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['for', 'operation', 'perform', 'singly', 'link', 'list', 'run', 'time', 'complexity', 'good', 'case', 'bad', 'case', 'average', 'case', 'give', 'reference', 'previous', 'element']","For which operation performed on a singly linked list are the run time complexities NOT best case = 1, worst case = n, average case = n? (When you are not given a reference to the previous element)
"
992,992,992,25.0,0.0997999981045723,"datum, structure, data, space, implement, possible, memory, store, work, for","['good', 'definition', 'for', 'datum', 'structure']","What is the best definition for a data structure?
"
993,993,993,38.0,0.11209999769926073,"datum, structure, data, space, implement, possible, memory, store, work, for","['datum', 'structure']","Why is a Skip List a probabilistic data structure?
"
994,994,994,38.0,0.2149000018835068,"datum, structure, data, space, implement, possible, memory, store, work, for","['option', 'correct', 'definition', 'for', 'datum', 'structure', 'secondary', 'datum', 'structure', 'context', 'algorithm']","Which of the options are the correct definitions for a data structure and a secondary data structure in the context of ADTs and Algorithms?
"
995,995,995,38.0,0.09399999678134917,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'carey_rule', 'sort']","Which of the following are Carey’s 2 Rules of Sorting?
"
996,996,996,12.0,0.09399999678134917,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'carey_rule', 'sort']","Which of the following are Carey’s 2 Rules of Sorting?
"
997,997,997,12.0,0.10199999809265137,"tree, binary, node, avl, search, child, root, follow, height, leaf","['make', 'binary', 'tree', 'balance']","What makes a binary tree balanced
"
998,998,998,2.0,0.1395999938249588,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['link', 'list', 'method', 'guarantee', 'complexity']","in a linked list which of these methods has a guaranteed complexity of 1?
"
999,999,999,25.0,0.1395999938249588,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['link', 'list', 'method', 'guarantee', 'complexity']","in a linked list which of these methods has a guaranteed complexity of 1?
"
1000,1000,1000,25.0,0.06629999727010727,"run, large, fast, term, quicksort, exact, record, partition, question, information",['refer'],"What doesBig-Omega O(f(n)) refer to?
"
1001,1001,1001,30.0,0.01669999957084656,"vertex, edge, graph, change, show, matrix, also, if, formula, name",[],"What is linear probing?
"
1002,1002,1002,29.0,0.01669999957084656,"vertex, edge, graph, change, show, matrix, also, if, formula, name",[],"What is linear probing?
"
1003,1003,1003,23.0,0.1818999946117401,"hash, table, bucket, open, insert, close, key, function, slot, closed","['delete', 'item', 'open', 'hash', 'table']","How do you delete an item from an open hash table?
"
1004,1004,1004,23.0,0.22030000388622284,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['bad', 'case', 'time', 'complexity', 'insertion']","What is the worst case time complexity of Insertion Sort?
"
1005,1005,1005,36.0,0.15449999272823334,"for, time, complexity, search, runtime, function, none, follow, correct, give","['for', 'list', 'sorted', 'item', 'time', 'complexity', 'binary', 'search']","For a list of n sorted items, what is the time complexity of Binary search?
"
1006,1006,1006,27.0,0.2289000004529953,"would, use, result, determine, create, sequence, state, maxheap, num, body","['search', 'engine', 'bugle', 'use', 'system', 'call', 'pagerank', 'determine', 'order', 'show', 'result', 'inthis', 'involve', 'solve', 'large', 'matrix', 'problem', 'use', 'size', 'follow', 'statement', 'false']","A search engine 'Bugle' uses a system called PageRank to determine the order it shows results in.This involves solving a large matrix problem using an algorithm of order N2log(N) where the size of the matrix is N x N.Which one of the following statements is false?
"
1007,1007,1007,52.0,0.28600001335144043,"order, traversal, tree, post, follow, pre, level, output, use, traverse","['follow', 'output', 'order', 'traversal', 'tree', 'processing', 'simply', 'print', 'node', 'value']","Which of the following is the output of In-order traversal on this tree: a / \ b e / \c d(Where the processing is simply printing the node value)
"
1008,1008,1008,52.0,0.0980999991297722,"tree, binary, node, avl, search, child, root, follow, height, leaf","['for', 'follow', 'tree', 'follow', 'sequence']","For the following tree, which traversal algorithm will print the following sequence : a b c d e f a / \ b c / d / \e f
"
1009,1009,1009,52.0,0.302700012922287,"tree, binary, node, avl, search, child, root, follow, height, leaf","['consider', 'binary', 'tree', 'numeric', 'node', 'leave', 'sub', 'tree', 'consist', 'number', 'node', 'right', 'sub', 'tree', 'consist', 'number', 'great', 'nodethis', 'tree', 'empty', 'root', 'value', 'follow', 'number', 'insert', 'tree', 'order', 'leave', 'right', 'ie', 'insert', 'first', 'height', 'number', 'level', 'tree']","Consider a binary tree with numeric nodes where the left sub-tree consists of numbers less than the node, and the right sub-tree consists of numbers greater than the node.This tree is empty other than the root value: 10.The following numbers are inserted into the tree in order from left to right (i.e. 15 is inserted first):15, 6, 12, 4, 9, 11, 7, 8What is the height (number of levels) of the tree?
"
1010,1010,1010,2.0,0.06080000102519989,"value, balance, rotation, unbalanced, clockwise, become, dependant, occur, bst, insert","['sort', 'sequence', 'value']","Which of these is a valid shell sort sequence of h values?
"
1011,1011,1011,39.0,0.1371999979019165,"run, large, fast, term, quicksort, exact, record, partition, question, information","['implementation', 'selection', 'sort', 'run', 'for', 'sort', 'list', 'record', 'long', 'likely', 'run', 'sort', 'record']","An implementation of selection sort runs for 2s to sort a list of 1,000 records. How long will it likely run to sort 10,000 records?
"
1012,1012,1012,29.0,0.19499999284744265,"for, time, complexity, search, runtime, function, none, follow, correct, give","['take', 'for', 'give', 'asymptotic', 'time', 'complexity', 'many', 'second', 'expect', 'take', 'for']","An algorithm takes 1s for n = 100. Given that its asymptotic time complexity is?(n2), how many seconds do you expect it to take for n = 800?
"
1013,1013,1013,23.0,0.2870000004768372,"hash, table, bucket, open, insert, close, key, function, slot, closed","['close', 'linear_probing', 'right', 'ie', 'direction', 'high', 'index', 'hash', 'function', 'form', 'hash', 'table', 'slot', 'if', 'insert', 'element', 'order', 'end']","You wish to use a standard closed hashtable with linear probing (to the right, i.e. in the direction of higher indices). The hash function has the form h(x) = (x*x) % 5 , and the hash table has slots 0, ... , 4. If you insert the elements 3, 2, 4, 1, 5 in that order, what does the hashtable look like at the end?
"
1014,1014,1014,23.0,0.12129999697208405,"consider, total, first, call, line, nee, decide, xtotal, via, organise","['main', 'advantage', 'consider', 'amortise', 'runtime']","What is the main advantage of considering an amortised runtime?
"
1015,1015,1015,29.0,0.19040000438690186,"number, find, take, step, item, average, many, give, second, if","['for', 'loop', 'nest', 'asymptotic', 'time', 'complexity', 'find', 'multiplying', 'order', 'loop', 'if', 'for', 'loop', 'nest', 'big', 'complexity', 'give']","When for loops are nested, the asymptotic time complexity can be found by multiplying the order of each loop. If the for loops are not nested, big-O complexity is given by...
"
1016,1016,1016,23.0,0.3935999870300293,"hash, table, bucket, open, insert, close, key, function, slot, closed","['use', 'standard', 'closed', 'hashtable', 'linear_probing', 'right', 'hash', 'function', 'form', 'hash', 'table', 'slot', 'if', 'insert', 'element', 'order', 'end']","You are using a standard closed hashtable with linear probing (to the right). The hash function has the form h(x) = x % 5 and the hash table has slots 0,1,2,3,4. If you insert the elements 9,3,14,7,1 in this order, what does the hashtable look like at the end?
"
1017,1017,1017,6.0,0.4923999905586242,"node, next, previous, constant, object, pointerthe, follow, private, nodenext, head","['if', 'insert', 'new', 'node', 'doubly', 'link', 'list', 'combination', 'follow', 'set', 'reference', 'must', 'updatea', 'node', 'next', 'previous', 'pointersb', 'tail', 'previous', 'node', 'next', 'pointerd', 'follow', 'node', 'previous', 'pointere', 'previous', 'node', 'previous', 'pointer']","If we insert a new node into the middle of a doubly linked list, which combination of the following sets of references must we update?a) The new node’s next and previous pointersb) The tail referencec) The previous node’s next pointerd) The following node’s previous pointere) The previous node’s previous pointer
"
1018,1018,1018,6.0,0.22599999606609344,"number, find, take, step, item, average, many, give, second, if","['give', 'particular', 'load', 'for', 'open', 'hash', 'table', 'average', 'number', 'step', 'insert', 'find', 'item']","Given a particular load L for an Open Hash Table, what is the average number of steps to insert or find an item?
"
1019,1019,1019,25.0,0.36520001292228704,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'case', 'link', 'list', 'preferable', 'array', 'insert', 'new', 'element', 'front', 'remove', 'element', 'middle', 'get', 'th', 'element', 'either']","In which of the following cases is a linked list preferable to an array?1) Inserting a new element at the front of either2) Removing an element in the middle of either3) Getting the 200th element of either
"
1020,1020,1020,25.0,0.36520001292228704,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'case', 'link', 'list', 'preferable', 'array', 'insert', 'new', 'element', 'front', 'remove', 'element', 'middle', 'get', 'th', 'element', 'either']","In which of the following cases is a linked list preferable to an array?1) Inserting a new element at the front of either2) Removing an element in the middle of either3) Getting the 200th element of either
"
1021,1021,1021,17.0,0.3625999987125397,"right, leave, node, process, sub, current, subtree, describe, differ, left","['binary', 'tree', 'describe', 'pseudocodebelow', 'process', 'node', 'leave', 'sub', 'tree', 'process', 'current', 'node', 'process', 'node', 'right', 'sub', 'tree']","What binary tree traversal algorithm is described by the pseudocodebelow?1. Process the nodes in the left sub-tree.2. Process the current node.3. Process the nodes in the right sub tree.
"
1022,1022,1022,17.0,0.25279998779296875,"for, time, complexity, search, runtime, function, none, follow, correct, give","['theta', 'time', 'complexity', 'follow', 'for', 'for']","What is the theta time complexity of the following algorithm fragment (f(a,b))?for (int i=0; i<a+b; i++) {System.out.println(i);}for (int i=0; i<a*a*a; i++) {System.out.println(i);}
"
1023,1023,1023,29.0,0.14550000429153442,"tree, binary, node, avl, search, child, root, follow, height, leaf","['give', 'number', 'would', 'final', 'balanced', 'avl', 'tree']","Given the numbers [1,4,6,3,7,2,10]. What would be the final balanced AVL Tree?
"
1024,1024,1024,2.0,0.09160000085830687,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['follow', 'statement', 'false']","Which are the following statements are false?
"
1025,1025,1025,36.0,0.21529999375343326,"int, if, for, while, return, follow, code, mean, sum, new","['follow', 'result', 'stable', 'sort', 'int', 'for', 'alength', 'int', 'while']","Does the following code result in a stable sort?void Sort(int[] a){ for(int s = 2; s <= a.length; s++) { int SortNum = a[ s - 1 ]; int i = s - 2; while (i >= 0 && SortNum <= a[i]) { a[i+1] = a[i]; i--; } a[i+1] = SortNum;}}
"
1026,1026,1026,35.0,0.1356000006198883,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['for', 'value', 'sort', 'essentially', 'bubble', 'sort']","For what value of h is h-sorting essentially a bubble sort?
"
1027,1027,1027,40.0,0.19779999554157254,"number, find, take, step, item, average, many, give, second, if","['give', 'follow', 'sorted', 'list', 'number', 'many', 'iteration', 'linear', 'search', 'go', 'find', 'number']","Given the following sorted list of numbers: 5, 14, 67, 146, 874, 946.How many iterations does linear search go through to find the number 146?
"
1028,1028,1028,40.0,0.10599999874830246,"sorted, point, example, final, say, real, divide, word, since, measure","['use', 'divide', 'conquer']","Which of these algorithms uses divide and conquer?
"
1029,1029,1029,36.0,0.1388999968767166,"number, find, take, step, item, average, many, give, second, if","['give', 'int', 'array', 'many', 'step', 'take', 'sort', 'ascend', 'order', 'use', 'bubble', 'sort']","Given the int array 6, 5, 1, 4, 7, 8, 2, how many steps will it take to sort it in ascending order using bubble sort?
"
1030,1030,1030,40.0,0.08789999783039093,"for, time, complexity, search, runtime, function, none, follow, correct, give","['time', 'binary', 'search']","What is the time complexity of Binary Search?
"
1031,1031,1031,36.0,0.11209999769926073,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'stable']","which of these sorts is stable
"
1032,1032,1032,36.0,0.06639999896287918,"look, like, system, abstraction, talk, unnecessary, distraction, manner, hide, abstract",['abstraction'],"What is the definition of Abstraction?
"
1033,1033,1033,18.0,0.1290999948978424,"measurement, precision, accuracy, difference, image, significant, definition, regard, accuracylow, accuracyhigh","['follow', 'image', 'represent', 'low', 'accuracy', 'high', 'precision']","Which of the following images represents low accuracy and high precision?
"
1034,1034,1034,23.0,0.1462000012397766,"hash, table, bucket, open, insert, close, key, function, slot, closed","['average', 'time', 'complexity', 'find', 'element', 'hash', 'table', 'assume', 'slot', 'available', 'element']","What is the average time complexity of finding one element in a hash table (Assuming more slots are available than elements)?
"
1035,1035,1035,23.0,0.10260000079870224,"for, time, complexity, search, runtime, function, none, follow, correct, give","['notation', 'calculate', 'time', 'complexity']","When do you use Big-Theta notation when calculating time complexity?
"
1036,1036,1036,29.0,0.19380000233650208,"for, time, complexity, search, runtime, function, none, follow, correct, give","['describe', 'bad', 'case', 'performance', 'time', 'complexity', 'for']","Which of these describes the worst case performance time complexity for an algorithm?
"
1037,1037,1037,23.0,0.3034999966621399,"hash, table, bucket, open, insert, close, key, function, slot, closed","['empty', 'close', 'hashtable', 'use', 'linear_probe', 'right', 'hashtable', 'store', 'data', 'bucket', 'datum', 'insert', 'use', 'function', 'datum', 'store', 'result', 'bucket', 'insert', 'would', 'result', 'if', 'insert', 'follow', 'integer']","An empty closed hashtable which uses linear probing (to the right).The hashtable can store up to 6 data in 6 buckets (from 0-5).Data is inserted using the function:Where x is the data to be stored and the result is the bucket to insert it in.What would the resulting hashtable be, if we were to insert the following integers?18,33,9,3,27,21
"
1038,1038,1038,23.0,0.2379000037908554,"number, find, take, step, item, average, many, give, second, if","['s', 'average', 'number', 'step', 'find', 'item', 'anopen', 'hash', 'table', 'bucket', 'element', 'table']","Whats the average number of steps to find any items in anopen hash table of 1213 buckets with 1000 elements in the table?
"
1039,1039,1039,40.0,0.17970000207424164,"for, time, complexity, search, runtime, function, none, follow, correct, give","['follow', 'question', 'unanswerable', 'give', 'for', 'function', 'would', 'answerable', 'give', 'information']","which of the following questions is unanswerable given only that for functions f and gf(n) = ?(1)g(n) = O(n)but would be answerable given more information
"
1040,1040,1040,29.0,0.06319999694824219,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['if', 'matter']","If an algorithm has a complexity of, does it matter what k is? Why?
"
1041,1041,1041,0.0,0.18230000138282776,"tree, binary, node, avl, search, child, root, follow, height, leaf","['need', 'binary', 'tree', 'height', 'balanced']","Why we need to a binary tree which is height balanced?
"
1042,1042,1042,38.0,0.11330000311136244,"run, large, fast, term, quicksort, exact, record, partition, question, information","['follow', 'code', 'perform', 'partition', 'operation', 'correctly', 'quicksort']","Which of the following code performs the partition operation correctly in QuickSort?
"
1043,1043,1043,17.0,0.1559000015258789,"datum, structure, data, space, implement, possible, memory, store, work, for","['follow', 'datum', 'structure', 'similar', 'skiplist']","which of the following data structure are similar to skipList?
"
1044,1044,1044,29.0,0.2272000014781952,"for, time, complexity, search, runtime, function, none, follow, correct, give","['select', 'option', 'give', 'datum', 'structure', 'andcomplexity', 'for', 'search', 'time', 'check', 'contain', 'object', 'match']","Select the option where the given data structure andcomplexity for search time (check that it contains an object) do not match.
"
1045,1045,1045,29.0,0.1492999941110611,"hash, table, bucket, open, insert, close, key, function, slot, closed","['follow', 'statement', 'open', 'hash', 'table', 'false']","Which of the following statements about open hash tables is false
"
1046,1046,1046,23.0,0.16030000150203705,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['implement', 'singly', 'link', 'list', 'follow', 'statement', 'true']","When implementing a singly linked list, which of the following statements is true?
"
1047,1047,1047,25.0,0.1679999977350235,"for, time, complexity, search, runtime, function, none, follow, correct, give","['big', 'complexity', 'follow', 'code', 'for', 'for', 'for', 'int']","What is the big O complexity f(n) of the following code?(A) for( int i = 0; i < n; i++){(B) for( int j = i; j < n; j++){(C) for( int k = 0; k < 4; k++){ System.out.println(""Hello World!""); } } }
"
1048,1048,1048,29.0,0.06350000202655792,"include, answer, expect, consist, lane, skiplist, cubic, program, sqrt, information","['follow', 'include']","Which of the following is not included in an Abstract Data Type (ADT)?
"
1049,1049,1049,36.0,0.10689999908208847,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['example', 'stable', 'sort']","Which of these is not an example of a stable sort?
"
1050,1050,1050,36.0,0.2108000069856644,"for, time, complexity, search, runtime, function, none, follow, correct, give","['correct', 'order', 'for', 'runtime', 'complexity', 'class', 'fastest', 'slow', 'for', 'large', 'value']","Which of these is the correct order for the runtime complexity classes - from fastest to slowest, for large values of n?
"
1051,1051,1051,35.0,0.2401999980211258,"int, if, for, while, return, follow, code, mean, sum, new","['theta', 'complexity', 'int', 'int', 'for', 'for', 'int', 'return']","what is the theta complexity of this algorithm f(n)function int f(int n){ int c = 0; for (int i=1 i<n; i=i*2){ for (int j=0; j<i; j++){ c++; } } return c;}
"
1052,1052,1052,35.0,0.1573999971151352,"number, find, take, step, item, average, many, give, second, if","['give', 'follow', 'sorted', 'list', 'number', 'use', 'binary', 'search', 'algorithm', 'many', 'comparison', 'would', 'take', 'determine', 'if', 'number', 'list', 'use', 'floor', 'function', 'for', 'find', 'middle', 'element', 'list']","Given the following sorted list of numbers:1, 2, 34, 45, 104, 287, 287, 299Using the binary search algorithm; how many comparisons would it take to determine if the number 0 is in the list (when using the floor function for finding the middle element of the list)?
"
1053,1053,1053,40.0,0.11209999769926073,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['stable', 'sort']","What is a stable sort?
"
1054,1054,1054,36.0,0.17350000143051147,"list, link, array, false, follow, remove, insert, faster, doubly, statement","['insert', 'doubly', 'link', 'list', 'must', 'update']","When inserting a node in a doubly linked list, we must update:
"
1055,1055,1055,6.0,0.1454000025987625,"for, time, complexity, search, runtime, function, none, follow, correct, give","['time', 'complexity', 'function', 'determine']","How is the time complexity function determined?
"
1056,1056,1056,36.0,0.18690000474452967,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'stable']","Which of the following sorting algorithms is stable?
"
1057,1057,1057,38.0,0.2102999985218048,"datum, structure, data, space, implement, possible, memory, store, work, for","['follow', 'data', 'structure', 'difficult', 'recommend', 'remove', 'value']","In which of the following data structures is it difficult (not recommended) to remove values from?
"
1058,1058,1058,23.0,0.1745000034570694,"hash, table, bucket, open, insert, close, key, function, slot, closed","['give', 'particular', 'load', 'for', 'closed', 'hash', 'table', 'maximum', 'number', 'step', 'find', 'bucket']","Given a particular load L for a Closed Hash Table w LP, what is the maximum number of steps to find the bucket?
"
1059,1059,1059,36.0,0.28119999170303345,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'algorithm', 'bad', 'case', 'time', 'complexity']","Which of the following sorting algorithms does not have a worst case time complexity of O(n2)?
"
1060,1060,1060,36.0,0.22020000219345093,"for, time, complexity, search, runtime, function, none, follow, correct, give","['follow', 'bound', 'correct', 'for', 'run', 'time', 'follow', 'codefor', 'int', 'for']","Which of the following bounds are correct for the run time of the following code?for ( int i = 0; i < n; i++) for ( int j = 0; j < n; j++) out.println(“Hapax Legomenon”)A)O( n2 )B)?( n2 )C) O(log n)D)O( n3)
"
1061,1061,1061,23.0,0.5131999850273132,"hash, table, bucket, open, insert, close, key, function, slot, closed","['suppose', 'give', 'element', 'definitely', 'hash', 'table', 'search', 'for', 'element', 'hash', 'table', 'linear_probe', 'calculate', 'bucket', 'for', 'element', 'key', 'use', 'hash', 'function', 'however', 'check', 'appropriate', 'bucket', 'contain', 'different', 'key', 'follow', 'possible', 'reason', 'for', 'thisa', 'element', 'insert', 'hash', 'table', 'get', 'write', 'element', 'bucket', 'element', 'place', 'bucket', 'calculate', 'hash', 'functionc', 'key', 'bucket', 'calculate', 'hash', 'key', 'force', 'move', 'bucket', 'bucket', 'already', 'fill']","Suppose you are given that an element is definitely in the Hash Table. You search for this element in the Hash Table with linear probing. You calculate the bucket for the element's key using the hash function. However, when you check the appropriate bucket it contains a different key. Which of the following are possible reasons for this?A) The element was inserted in the Hash Table but then got over-written by another element with the same bucket number.B) The element is placed below it's bucket calculated by the hash function.C) The other key had the same bucket calculated by the hash function.D) The other key was forced to move down to the bucket because it's own bucket was already filled.
"
1062,1062,1062,23.0,0.2680999934673309,"hash, table, bucket, open, insert, close, key, function, slot, closed","['for', 'hash', 'table', 'slot', 'already', 'contain', 'element', 'likely', 'go', 'collision', 'hash', 'table']","For a Hash Table with T slots already containing n elements how likely are there going to be collisions in the Hash Table?
"
1063,1063,1063,23.0,0.11779999732971193,"number, find, take, step, item, average, many, give, second, if","['suppose', 'search', 'for', 'element', 'sorted', 'list', 'size', 'use', 'binary', 'searchin', 'many', 'step', 'matter', 'element', 'look', 'for', 'find']","Suppose you are searching for an element in a sorted list of size x using binary search.In how many steps no matter what element we are looking for can we find it?
"
1064,1064,1064,43.0,0.2313999980688095,"maximum, problem, random, integer, solve, fill, interface, product, similar, anywhere","['problem', 'may', 'face', 'work', 'array', 'base', 'slow', 'add', 'element', 'endb', 'limit', 'remove', 'anywhere', 'listd', 'slow', 'random', 'access']","Which of these are problems one might face working with Array-based Lists?A) Slow to add an element at the endB) Limited capacityC) Slow to insert/remove anywhere in the listD) Slow random access
"
1065,1065,1065,43.0,0.13140000402927401,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['many', 'iteration', 'bubble', 'sort', 'would', 'take', 'sort', 'follow', 'list', 'ascend', 'order']","How many iterations of the bubble sort algorithm would it take to sort the following list in ascending order?3, 1, 4, 5, 9 ,2, 6
"
1066,1066,1066,23.0,0.26350000500679016,"hash, table, bucket, open, insert, close, key, function, slot, closed","['follow', 'option', 'problematic', 'use', 'closed', 'hash', 'table', 'linear_probing']","Out of the following options, which is the most problematic when using a closed hash table with linear probing?
"
1067,1067,1067,23.0,0.19339999556541446,"would, use, result, determine, create, sequence, state, maxheap, num, body","['function', 'many', 'term', 'body', 'int', 'int', 'result', 'for', 'int', 'result', 'result', 'num', 'return', 'result']","Below is a function, how many elementary operations, in terms of n, are there in the body of the function?public int examQ(int num, int n){ int result = 0; for(int i=0; i<n; i++) { result = result + num; } return result;}
"
1068,1068,1068,27.0,0.1704999953508377,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['sort', 'method', 'potential', 'faster', 'improve', 'time', 'complexity', 'if', 'list', 'already', 'sort', 'first', 'place']","Which sorting method has the potential to be faster (improving from O(n^2) time complexity to O(n)) if the list is already sorted in the first place?
"
1069,1069,1069,36.0,0.06620000302791595,"choose, log, type, small, wrong, memory, requirement, meet, back, book",['type'],"What is an Abstract Data Type?
"
1070,1070,1070,23.0,0.19059999287128448,"hash, table, bucket, open, insert, close, key, function, slot, closed","['imagine', 'empty', 'close', 'hashtable', 'use', 'linear_probe', 'right', 'counter', 'collisionsthis', 'close', 'hashtable', 'store', 'maximum', 'datum', 'bucket', 'label', 'ascend', 'order', 'use', 'hash', 'function', 'datum', 'store', 'bucket', 'store', 'follow', 'datum', 'leave', 'right', 'hashtable', 'order', 'would', 'data', 'store', 'insertion']","Imagine an empty closed hashtable that uses linear probing (to the right) to counter collisions.This closed hashtable can store a maximum of 5 data in 5 buckets labelled 0-4 in ascending order. It uses the hashing function f where:Where x is the data to be stored and f(x) is the bucket to store it in.If you were to insert the following data (from left to right) into this hashtable:6, 3, 2, 1, 5What order would the data be stored after insertion?
"
1071,1071,1071,23.0,0.1860000044107437,"for, time, complexity, search, runtime, function, none, follow, correct, give","['consider', 'follow', 'runtime', 'for', 'list', 'sort', 'size', 'list', 'time', 'take', 'second', 'good', 'approximation', 'runtime', 'complexity', 'algorithm']","Consider the following runtimes for a list-sorting algorithm, with n as the size of the list and t as the time taken in seconds:n = 2000, t = 57n = 4000, t = 456n = 8000, t = 3648Which is the best approximation of the runtime complexity of the algorithm?
"
1072,1072,1072,29.0,0.10209999978542328,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['mean', 'for', 'sort', 'stable']","What does it mean for a sort to be stable?
"
1073,1073,1073,39.0,0.1500999927520752,"run, large, fast, term, quicksort, exact, record, partition, question, information","['function', 'refer', 'run', 'time', 'algorithm', 'for', 'awhich', 'follow', 'definitely', 'true']","2 functions refer to the run-times of 2 algorithms:f(n)>0, g(n)>0a>0, A>0g(n) = A f(n) for all n>aWhich of the following is definitely true?
"
1074,1074,1074,39.0,0.1430000066757202,"sort, algorithm, case, insertion, complexity, stable, quick, bad, time, selection","['follow', 'sort', 'quick', 'run', 'time', 'average', 'for', 'large', 'amount', 'datum']","Which of the following sorts has the quickest run-time (on average) for large amounts of data?
"
1075,1075,1075,23.0,0.3914999961853027,"hash, table, bucket, open, insert, close, key, function, slot, closed","['plan', 'store', 'datum', 'close', 'hash', 'table', 'linear_probe', 'right', 'hash', 'function', 'use', 'meaning', 'slot', 'hash', 'table', 'if', 'insert', 'element', 'hash', 'table', 'order', 'would', 'look_like', 'end']","You plan to store data in a closed hash table with linear probing to the right. The hash function you are using is h(x) = x % 8, meaning there are 8 slots in your hash table; 0,1,2,3,4,5,6,7. If you insert the elements 14, 21, 13, 10, 6, 9, 1, 18 into the hash table, in that order, what would it look like at the end?
"
1076,1076,1076,29.0,0.4004000127315521,"for, time, complexity, search, runtime, function, none, follow, correct, give","['follow', 'correct', 'definition', 'for', 'function', 'asymptotic', 'time', 'complexity', 'give', 'byo', 'for', 'for']","Which of the following is the correct definition for a function f(n) having asymptotic time complexity given byO(n²)?[For f(n) > 0 for n>0]
"
1077,1077,1077,29.0,0.3086999952793121,"for, time, complexity, search, runtime, function, none, follow, correct, give","['runtime', 'for', 'follow', 'code', 'fragment', 'for', 'for', 'for']","The runtime for the following code fragment is . What is f(n)?for (int i=0; i<n; i++) for (int j=0; j<i/10; j++) for (int k=1; k<n; k=2*k) System.out.println(i);
"
