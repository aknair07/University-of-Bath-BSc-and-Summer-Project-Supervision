Question,Answer 1,Answer 2,Answer 3,Answer 4,Answer 5,Explanation,Author
"The runtime for the following code fragment is ?(f(n)). What is f(n)?for (int i=0; i<n; i++) for (int j=0; j<i/10; j++) for (int k=1; k<n; k=2*k) System.out.println(i);
", , ,"n^2(logn)
", , ,,"wd371 (wd371)
"
"An algorithm has time complexity . Using the Definition of Big-Oh as given in the 2019 Week 1a Lecture (slide 14), fix B = 4.Assuming, what is the lowest possible value of b for which the definition holds?
", , , ,"b = 9
", ,"Solve for the roots of |T(N)|=4N^2. The roots are, N=6, N=9 for the equation T(N)=4N^2. Roots to -T(N)=4N^2 can be safely ignored.So the choice is b=9. You can quickly verify by substituting N=8 that b=6 does not satisfy the definition. b=12 satisfies the definition but is not the lowest possible value of b satisfying the definitionThe slightly harder version of this question can be found here:https://peerwise.cs.auckland.ac.nz/course/main.php?cmd=answerQuestion&id=4248139
",
"Which one of the following sorting algorithms is the quickest for an almost sorted array?
", ,"Insertion sort
", , , ,,"aa2955 (aa2955)
"
"What is the Big oh complexity of heap sort?
", ,"O(n log n)
", , , ,,"aa2955 (aa2955)
"
"What is the time complexity of Dijkstra's Algorithm without a min-priority queue?
","O(V2)
", , , , ,"shortest_path -> slide 21
",
"Santa has had one too many beers while flying the sleigh back to the North Pole when the police pull him over. The police ask for hisEASA Part-FCL commercial pilot license (CPL) and he realises that he left it in one of 60 remaining gift boxes. The gift box he needs to find is labelled ""Santa Claus"" with ""North Pole"" on. Each location ""e.g Africa"" is put into its own pile, there are 12 remaining piles in total. Each pile is ordered by name ""e.g Mrs Claus"", there are 5 gift boxes in each pile. Using a binary search, what is the worst-case complexity?
", , , ,"log2(12) + log2(5)
", ,"Binary search is log2(n) complexity, log(12) + log(5) for final.
",
"What is the time complexity for completing 'n' searches in a balanced binary search tree?
","nlogn
", , , , ,,"aar73 (aar73)
"
"What is the worst case time complexity of the merge sort
", ,"?(nlogn)
", , , ,,"mdsb20 (mdsb20)
"
"Which data structure is described by:the value at each node is = the values at its two children.
", , ,"Min heap
", , ,"Definition given in Week 5b Slide 4.
",
"An algorithm has a time complexity of?(n^3), when n = 2 it takes 2 seconds to complete how long does it take to complete when n = 4
", , ,"16
", , ,"2^3 = 8, 8/4 = 24^3 = 64, 64/4 = 16
",
"I am using the hash function H(x) = x % 7 to add functions to an open hash table. This hash table is indexed 0 to 6, with each bucket having a max length of 3.If a bucket ""overflows"", ie it is full and another element is added, this element is added to an overflow bucket.How many elements are inserted into the overflow bucket after the following elements are inserted?Elements inserted left to right (ie 29 is first insert 69 is last insert) : 29, 64, 63, 16, 48, 74, 143, 39, 80, 281, 4, 69.
", , ,"2
", , ,"29 % 7 = 125 % 7 = 464 % 7 = 163 % 7 = 016 % 7 = 248 % 7 = 674 % 7 = 4143 % 7 = 339 % 7 = 4 ---- ""4 bucket full""80 % 7 = 3281 % 7 = 1 ---- ""1"" bucket full4 % 7 = 4 ---- put into overflow7071 % 7 = 1 ---- put into overflow69 % 7 = 62 elements were added to the overflow
",
"Given a load factor of 0.3 what is the average number of steps for a Closed Hash table with linear probing to find an item.
", , ,"1.21 steps
", , ,"Answer is 1.21 steps, see slide 31 of week10b-hashtablesall.pptx
",
"You have been approached by a company to recommend a fast and efficient sorting algorithm to use in Java. They often deal with large inputs of numerical data, and have limited storage. Which sorting algorithm is most suitable?
", ,"Quick Sort
", , , ,"Bubble Sort, Selection Sort and Insertion Sort are bounded by O(n^2), which is unacceptable for this situation. Both Quick Sort and Merge Sort have good runtimes (nlog(n)). However, the main reason why Quick Sort is preferred is that no extra space is used (sorting is done in place), compared to Merge Sort which can be memory consuming.
",
"What is the time complexity of the following algorithm : 0.00001n4 + 100n2 + 19nlogn + (10n2* 5n3 ) ?
", ,"O(n5)
", , , ,"The biggest function will dominate since we have(10n2 * 5n3 ) this equates to 50n5 which dominates the others.
","hacker_man (jm2787)
"
"What is the time complexity of the following algorithm : 0.00001n4 + 100n2 + 19nlogn + (10n2* 5n3 ) ?
", ,"O(n5)
", , , ,"The biggest function will dominate since we have(10n2 * 5n3 ) this equates to 50n5 which dominates the others.
","hacker_man (jm2787)
"
"Which formal definition represents an algorithm operating asymptotically equal as f(x)?
","
", , , , ,,"mma82 (mma82)
"
"It's another Monday morning and you've just rolled up to your workstation at an unnamed car manufacturing company. But, egads! You find that all of the computers have been struck with ransomware!The ransomware states that all of your important, company related files have been encrypted. In order to decrypt them, you can either send 5 BTC to a shady BTC wallet address OR you can solve the following AVL-Tree question.Given the following AVL Tree:what will the tree look like after the number7 has been inserted?
", ,"
", , , ,,"ajm266 (ajm266)
"
"Which one of the following statements regarding sorting is incorrect?
", , ,"A heap sort is stable.
", , ,"a) is correct, as an insertion sort is indeed stable.b) is correct, as the best, average and worst time complexity for a selection sort are all .c) is incorrect, asa heap sort is not stable.d) is correct, as the best, average and worst time complexity for Shell's sort are all .e) is correct, as the worst case time complexity of a bubble sort is indeed .
",
"How does a Dijkstra's Algorithm behave when all of the edges are weighted equally?
","Breadth-first search
", , , , ,,"eb2006 (eb2006)
"
"Given the functionsf(x) = 0.1 n5g(x) = 50 nlognh(x) = 0.5 2nhint ( O = at least , ? = at most, O = exactly (both O and? apply))Which of the following is true ?
", ,"f is O(g), g is ?(h), and h is O(g)
", , , ,"A - Wrong as f is much larger than g inf is ?(g), the larger function dominates n5dominates nlogn, for the same reason g is O(f) is wrongB - f is atleast g, because f dominates g we can say that f will be atleast g, g is at most h as h dominates g , and h is atleast g for the same reason making this correctC - f is exactly g is wrong since f dominates g, g is atmost h and h is atleast g however are correct
",
"Build an AVL Tree with the following values:15, 20, 24, 10, 13, 7, 30, 36, 25Which value does the root node point to?
", , ,"13
", , ,"See Week 8b-Trees3, slide 38 for implementation
",
"What is the best and worst case for Merge Sort?
", ,"Best Case: nlog(n)Worst Case: nlog(n)
", , , ,,"eotb20 (eotb20)
"
"Which of the max heaps A-H could be represented in an array?
", , , , ," B, C and E.
","For a max heap to be representable as an array, it must be either a complete binary tree or a almost-complete binary tree where the bottom row stops part way along from left to right. If a max heap didn't satisfy this condition then there would be a gap in the array.A is not a complete binary treenor an almost complete binary tree.Bis a complete binary tree so can be represented in amax heap array.Cis an almost complete binary tree. The right child of node '42' is missing but this wouldn't leave a gap in the array as all other leaf nodes in the bottom level to its left are present and there are no leaf node to the right of the missing node. This tree could be represented in amax heap arrayDis not a complete binary tree nor an almost complete binary treeso there would be gaps in the array.E is an almost complete binary tree so could be represented in a max heap array.Fis not a complete binary tree nor an almost complete binary tree.G is not a complete binary treenor an almost complete binary tree.H is not a complete nor an almost complete binary tree.Max heapsB, C and Esatisfy the conditions so could be represented in an arrayWeek 5 - Lecture B - Slide 5
",
"Given an integer array of randomly ordered 0's and 1's what is the worst case time complexity to sort them so that all the 0's come before the 1's. Use the most efficient sorting algorithm given the conditions of the array.
","O(N)
", , , , ,"The answer is A: O(N).Use the partition algorithm from quick sort. This works by choosing the first element as your pivot and then sorting every other element in relation to that pivot. As this only requires you to iterate through the array once it has complexity O(N).
",
"Which of the following does the method used to find a number in a phone book most closely resemble?
", , ,"Interpolation Search
", , ,,"jj716 (jj716)
"
"Consider the following binary search treeWhen completing a post order traversal what is the correct order
", ,"Jacqueline, Jenny, James, Katherine, Martha , Kenny , Jill
", , , ,,"jbersey15 (jsb73)
"
"Consider an AVL tree where the following have been inserted (in the given order):10, 2, 21, 55, 69, 9, 79, 10After removing 55, what would the output of the In Order traversal of the tree be ?
", ,"2, 9, 10, 10, 21, 69, 79
", , , ,"The balanced AVL tree looks like this: 10 / \ 2 21 \ / \ 9 10 69 \ 79In Order traversal works by going through all left nodes, then root and finally right nodes, thus the answer is2, 9, 10, 10, 21, 69, 79.
",
"Which of the following rules for big O is FALSE?
", , , ,"If g1(n) = O(f1(n)) and g2(n) = O(f2(n)), then g1(n)f1(n) = O(g2(n)f2(n))
", ,"A: The rule is sums, bigger function always dominates.B: The rule is scaling, constants do not matter in time complexity.C: The rule is transitivity,if A = B, and B = C, then also A = C.D: The rule is products, however the answer should beg1(n)g2(n) = O(f1(n)f2(n)) instead.
",
"Alice is organising a dinner party between a few close friends at her workplace. She is trying to figure out the seating plan and working on sending the invites. Most of the invitees know each other, so the number of friendships is larger than the number of invitees. Alice thinks a graph would help her figure out the seating plan where all the invitees are vertices and friendships of each person are edges.Alice also wants to store names along with employee ID numbers, which are 5 digit numbers, in order to send out email invites for the party.Which data structures are most suitable for each of these uses?
", , ,"Adjacency matrix for the seating plan, open hash table for the invites.
", , ,"An adjacency matrix is the most suitable data structure for the seating plan, as the matrix will be dense (many edges compared to vertices). See 2019 Lecture 17 on Graphs, slide 17.An open hash table is the most suitable data structure for the invites, as it stores both the data and a key, which in this case is the employee ID number. See 2019 Week10b slides.
",
"What is the worst case run time when trying to find an element in an AVL tree that consists of m * 2n elements ?
", , ,"T(log m) + T(n)
", , ,"T(log n), where n is the number of elements, is the time taken to search an AVL tree. Given that the number of elements ism * 2n, the complexity becomesT(log (m * 2n)) =T(log m) + T(log (2n)) =T(log m) + T(n log(2)) =T(log m) +T(n).
",
"Which of the following best describes the run time of this algorithm:for(int i = 0; i<N; i++){ int j = -1; while(j<i){ System.out.println(""Good luck in your exams""); j++; } for(k=0; k<T; k++){ System.out.println(""You'll smash them!""); }}
","T(N2+ NT)
", , , , ,"The outer for loop will loop N times. Within this, the while loop will run up to N times, and the for loop will run T times.So the complexity isT(N(N+T)) =T(N2 + NT).
",
"What is theoretical analysis of an algorithm?
", , ,"Predicting the trend of the complexity as large data sets are used.
", , ,,"eb2006 (eb2006)
"
"Listed below are sorting algorithms that are considered to be stable. However, one of them can be unstable depending on the implementation. Please select that sort.
", , ,"Selection Sort
", , ,,"tu241 (tu241)
"
"Consider a closed hashtable H with linear probing. Suppose we want to store up to 900 items in H, and we want theaverageamount of steps to find any item to be less than 2.By considering the loadL, what is the smallest (whole) number of buckets H can have?
", , , ,"1350
", ,"First we calculate the loadL by using the formula for closed hashmaps with linear probing; average number of steps = 0.5 * (1 + 1/(1 - L)). Since we want the average number of steps to be less than 2, we pick 2 equal to average number of steps to give 1 + 1(1 -L) = 4, orL = 2/3. Therefore sinceL is equal to the total intended items over the amount of buckets B, 900 = 2/3 *B. If B is any smaller than this thenL must be greater and we do not have the desired step efficiency, so we want the smallest integer bigger than or equal to theB this formula gives us. Luckily, from this we getB = 1350, so this is our answer.Source of idea: Week10b-Hashtable Slide 31
",
"There are many methods to consider when designing an algorithm. Please select the option that is not a proper design technique.
", ,"Static Programming
", , , ,,"tu241 (tu241)
"
"Of the following sorting algorithms, which one has equivalent Best, Worst and Average time complexitiesandis not unstable?(For example, Selection Sort has a Best, Worst and Average time complexity of n^2. It is also stable, and thus would be a correct answer if it were there.)
", ,"Merge Sort.
", , , ,"(Information obtained from 2019 Lecture 7a, slide 5)Algorithm time complexities in order: Best, Average, Worst.Quick: nlogn , nlogn , n^2 (Quick Sort is the only unstable algorithm here so can be instantly ruled out, the rest are stable.)Merge: nlogn , nlogn, nlognBubble: n , n^2 , n^2Insertion: n , n^2 , n^2From these options, Merge Sort is the correct answer as it is the only stable algorithm with all 3 cases having the same time complexity (namely nlogn).
",
"Of the following processes, which data structure (Singly Linked Lists or Arrays) can complete the following tasks described faster:Task 1: Getting to the 1000th item in the data structure.Task 2: Inserting a new item at the front of the data structure.Task 2: Removing an item from the middle of the data structure.Example: An answer of [LL : A : LL] would imply that the Linked List performed task 1 fastest, the Array performed task 2 fastest, and the Linked List performed task 3 fastest.(Not the correct answer).
", , , ,"[A : LL : LL]
", ,"(Week 3b 2019, slide 13)Task 1: Arrays are faster since we can get to item 1000 in 1 step, whereas in a Linked List we must pass through 999 nodes to reach the 1000th node.Task 2: Lists are faster since it takes very few steps to update nodes, whereas in an Array we must shift every element after the insertion point to the right.Task 3: Lists are faster for similar reasons to Task 3, but shifting left instead of right.This implies the answer [A : LL : LL].
",
"Calculate given that . (Hint: Use the fact that [x^p= x mod p] when p is prime).
", ,"a = 3.
", , , ,"Using Fermat's Little Theorem (2019 week 11b, slide 12), we have that[x^p = x mod p] when p is prime. Noticing that 51 = 3 * 17, we let p = 17 (which is prime), and x = 7.Thus we obtain that 7^17= 7 mod 17.From which wee see that 7^51 = (7^17)^3 and so 7^51 = 7^3 mod 17 = 3 mod 13, and we are finished.
",
"What isDijkstra's algorithm?
", ,"A shortest path algorithm
", , , ,"(Purposefully not chosen a topic to not give answer away)
","andrewwardle (atw38)
"
"What isDijkstra's algorithm?
", ,"A shortest path algorithm
", , , ,"(Purposefully not chosen a topic to not give answer away)
","andrewwardle (atw38)
"
"Bob decides to run three sorting algorithms in a row, named a, b and c respectively. Given n = 16, which of these functions would takes the largest number of comparisons assuming the data begins in a ""worst case"" situation (2019 week 7a slide 5)
", ,"1. insertion sort2. insertion sort3. merge sort
", , , ,,"ram72 (ram72)
"
"Consider the following problem:Given an array of integers, find the maximum product of two integers in the array. For example, consider the array [ -10, -3, 5, 6 , -2 ]. The maximum product is formed by either the (-10, 3) or (5, 6) pair.What is the complexity of the most efficient algorithm that solves this problem?
", ,"n
", , , ,"The answer is n.The most efficient algorithm traverses once through the array in order to find the 2 largest and 2 smallest (also smaller than 0) elements and compares the products.
",
"Consider an unordered complete binary tree containing all letters from A to G. Knowing that a preorder traversal of the tree results in the sequence [ B, G, C, D, A, E, F ] and a postorder traversal results in the sequence [C, D, G, E, F, A, B ], what results from an inorder traversal?
", , ,"C, G, D, B, E, A, F
", , ,"We traverse by visiting the left subtree first, then the root, then the right subtree for each node of the tree, thus the inorder traversal is C, G, D, B, E, A, F.
",
"Using an ascending order merge sort, which of these inputs requires the highest possible number of comparisons?
", , , , ," All of the above.
","A merge sort always makes the same number of comparisons regardless of input order. The number of comparisons made is equal to n log2 n
",
"What is the maximum height of a perfectly balanced search tree of size n (2019 Lecture 8a slide 28)
","log(n)
", , , , ,"The answer is log(n) because the number of nodes in a row is equal to 2x where x is the number of the row. Therefore the answer is log(n) as this is the inverse of 2x
",
"A bubble sort algorithm takes 2ms to sort a list of 100 elements. How long should it take to sort 100000 (105) elements?
", , , , ," 2000 seconds
","Bubble sort has a time complexity of O(n2). Using this we can calculate the time constant of the algorithm by doing 1002 / 2 which is 5000. We can then calculate the time taken by doing 1000002 / 5000 which is 2000000 milliseconds or 2000 seconds.
",
"What order would the elements of the following tree be processed in aPost Order Traversal? 5 / \ 3 7 / / \ 2 6 9
", ,"(2,3,6,9,7,5)
", , , ,,"lewist (lt508)
"
"What is the maximum possible number of elements in a binary tree of depth 7?
", ,"255
", , , ,"The number of nodes possible in a binary tree of depth d is 2d+1- 1(Week 7b, slide 11).27+1- 1 = 256 - 1 = 255
",
"How many different insertion sequences of the key values, using the hash function h(k)=k mod 10, will result in the closed hash table with linear probing given below?
", , , ,"40
", ,"The first key which is not at the index computed by hash function is 42. It means index 2 and 3 were already occupied and therefore, key 42 is placed at index 4.The keys 72 and 33 are present at index 2 and 3 respectively. As these keys are at their correct position, their order of insertion does not matter. These 2 keys can be inserted in 2! = 2 ways. Therefore, the sequence will be any order of (72, 33) followed by 42.The next key which is not at the index computed by hash function is 31. It means indexes 1 to 5 were already occupied and key 31 is placed at index 6. Therefore, it is the last key to be inserted into hash table.The keys 61 and 25 are each present at their correct position computed by the hash function. Therefore, they can be inserted at any place in the sequence before 31. The sequence excluding 31 has so far 3 elements (72, 33, 42), which create 4 positions for 61 (2 in-between and 2 corners). Now we have 4 elements in the sequence excluding 31, and so there 5 positions for 25 (3 in-between and 2 corners).Total number of ways is: 2*4*5 =40.
",
"Select the correct definition for a full binary tree.
", ,"All nodes have 0 or 2 children.
", , , ,,"av2020 (av533)
"
"Which one of the List has the quickest average run time for insert() if n >= 1000;
", , ,"Doubly Linked List
", , ,"The correct answer is C because the average run time for insert() for each List is:Array List =?(n)Singly Linked List =?(n)Doubly Linked List = ?(1)Skip List =?(log n)When n >= 100?(1) <?(log n) <?(n)
",
"Imagine you are sorting a bookshelf. As you are a conscientious computer scientist, you know better than to use the bubble sort algorithm. However, you are also very tired and don't want to implement a much more complex algorithm. You decide to sort the books by doing one pass from left to right using bubble sort to find the last book, and then another pass from right to left, again using bubble sort, to find the first book. Is this actually faster than doing a simple bubble sort?
", ,"Depends on the starting order of the books
", , , ,,"tb791 (tb791)
"
"Use Fermat's little theorem (specifically xp = x (mod p) where p is prime, Week 11b 2019, slide 12)to calculate 360% 29.
", , , , ," 23
","Usingxp = x (mod p) where p is prime, we choose p to be 29 and x to be 3, hence 329= 3 (mod 29)(1) Now we see that 360= 3(29 * 2) + 2=(329)2* 32.(2) Since329 = 3 (mod 29), (329)2= 9 (mod 29).Putting this all together, we get 9 (from (2)) * 9 (last component of (1)) (mod 29), which is 81(mod29). So the answer is 23 (mod 29).
",
"You have been hired by the Housing Opportunities of Northern Delaware Association to create a system which allows them to keep track of which addresses they currently have available. They have spent many decades supporting the people of the area in finding the perfect home, but have recently began to fall behind newer tech-based companies, and are determined to catch up and ensure they provide the highest quality service they can.The system is required to have the following qualities:- It must be quick to search for a given address, to find whether or not it is currently stored in the system, and to access its details. Speed is more important than space used, to ensure users are not left waiting for too long while the system runs.- It should be easy to add new addresses to the system as they become available, and to remove them once they are taken off the market.- The data does not need to be sorted, as employees personally work with each customer to recommend different homes, and so will be searching for entries directly.- You have only a rough estimate of how many addresses will need to be stored at a given time, and the number tends to vary by a large margin throughout the year due to seasonal buyers.Which data structure should you implement in the new system?
", , ,"An Open Hash Table
", , ,"A Hash Table is the optimal data structure for the system. Linked Lists and Tree structures require you to search through a potentially large number of nodes to find a specific address, while hashing allows you to jump either straight to the required data or at least very close to it.Unlike a Closed Hash Table, Open Hash Tables are able to grow out linked lists as more data is added instead of simply filling up. Open Hashing also requires a much lower average number of steps to find any given piece of data.
",
"How many cases are there when we are removing a node from a binary search tree?
", ,"3
", , , ,"There are 3 cases:One node is a leafOne node has one childOne node has two children
",
"How many nodes are accessed during a breadth-first search for the number 11 in the following tree:
", , , , ," 5
","Breadth-first search first checks the root node, then its children (left then right). This is a recursive operation, so each time the child nodes are checked, their children are checked (left then right) too.This is more easily defined as a recursive function:boolean search(TreeNode node, int elementToFind){ return (node.value == elementTofind) || search(node, node.left) || search(node, node.right);}As a result, each element is accessed at each level, left to right, like so:12, 8, 18, 5, 11, 17, 4
",
"Which of the following data structures has a worst case space complexity of O(n log n)?
", , , ,"Skip List
", ,"Skip List - every other data structure has a O(n) space complexity. However, the skip list has a greater size because each new node added does not add a constant number of pointers, but rather an increasing number (think of the number of lanes and how it increases when more elements are added: more lanes = more pointers).
",
"Which one of the following sorting algorithms order is the correct descending order in term of best run time if n >= 100?
", , , , ," Selection sort > Insertion sort > Merge sort
","E is correct because the best run time for each algorithm is:Selection sort = ?(n^2)Merge sort = ?(nlog(n))Insertion sort = ?(n)For n >= 100:?(n^2) > ?(n) > ?(nlog(n))
",
"Dijkstra algorithm is a example of which of the following type of algorithm
", , , ,"greedy
", ,"The answer is D because greedy algorithms make the optimal choices at each step in other to find the overall optimal way of solving the problem
",
"Pre-Order traversal on the following tree will give which output? 9 / \ 6 15 / \ \ 1 8 21 / \ 7 25
", ,"9, 6, 1, 8, 7, 15, 21, 25
", , , ,"See the lecture slides from week 7b pre-order traversal. This take the element from the left as you traverse the tree which gives option B
",
"Which of the following data structures has the slowest average time complexity for inserting an item?
", , ,"Skip List
", , ,"A Skip List has an average time complexity ofT(log(n) for insertion making it the slowest compared toT(n) for an Array andT(1) for the Hash Table, Stack and Queue.
",
"What is the average and worst case search time for a given element in a skip list?
", , , ,"Worst Case: O(n)Average Case: O(log n)
", ,"See skip list run time slide in lecture 3b.Land log(n) -1 skips approximatly n/2 nodes for average case of O(log n)and for worst case the skip list is unable to skip any elements meaning it is a linear search og O(n)
",
"I am using the hash function H(x) = x % 7 to add functions to an open hash table. This hash table itself is indexed 0 to 6 and stores pointers to the head elements of singly linked lists which store the values added to the hash table.After the following elements are inserted (in the order they are written), how many values are stored in the linked lists that are pointed to by index 0 and index 6 respectively? (Please note that the head pointer does NOT count as a value stored)Values to add to the hash table: 49, 22, 36, 135, 48, 73, 209, 105, 1042, 591, 5, 256.
", , , ,"2 and 3 respectively
", ,"49 % 7 = 022 % 7 = 136 % 7 = 1135 % 7 = 248 % 7 = 673 % 7 = 3209 % 7 = 6105 % 7 = 01042 % 7 = 6591 % 7 = 35 % 7 = 5256 % 7 = 4Hence 2 items are stored at index 0 and 3 items are stored at index 6
",
"Take the following pseudocode for sorting books by height on a shelf:void sort(shelf of N books){ for i = 1 to N { find the smallest book between slots i and N swap this smallest book with book i; }}Which type of sort has occurred?
", , , ,"Selection sort
", ,"This is a selection sort algorithm which repeatedly finds the smallest book and puts it at the start of the shelf.
",
"The load factor for a hash table is:
", , , ,"The number of occupied locations divided by the capacity
", ,"The load factor is defined as:load factor = n/k,where n is the number of locations occupied in the hash table and k is the number of bucketsThe load factor should be less than 1
",
"Which Data Structure best suits this description of a graph,and what is it's asymptotic memory usage?few vertices and many edges (dense)
","Adjacency Matrix?(v^2)
", , , , ,,"a4k (ajl96)
"
"Which of the following hashing techniques is based on randomisation?
", , , ,"Universal hashing
", ,,"aureliacretu (ac2590)
"
"Which method of tree traversal will produce reverse polish notation (RPN) from a tree made of operations and numbers?
", , ,"Post-Order Traversal
", , ,,"mj694 (mj694)
"
"Which two sorting algorithms have a best (O), average (?), and worst-case (O) time complexity of n(log(n))?
", , ,"Merge Sort & Heap Sort
", , ,"Bubble Sort has a best-case time complexity ofO(n), an average-case of?(n^2) and a worst-case ofO(n^2) so it cannot be A or E.Quick Sort has a worst-case time complexity ofO(n^2) so it cannot be B or D.This leaves C with Merge and Heap Sort which do have a time complexity of n(log(n)) for each of best, average and worst cases.Full table of time complexities can be found in the slides of lecture week7A 2019.
",
"You have been hired by a surgery to create a system that can hold patient records. The surgery is extremely busy, so retrieving records must be as fast as possible. The surgery has stated that the previous system allowed them to sort records, but this feature was no longer required. As many patients join and leave, insertion and deletion must both be very fast.
","Hash Table (Open Hashing)
", , , , ,"Evidently, due to the need for extremely fast lookup times, a hash table is required with its O(1) complexity. This works well as the data will not need to be sorted. The open hashing table should be chosen, as deletion is much easier when compared to the closed hashing table, while still maintaining fast insertion.
",
"Analyse the sorting algorithm belowvoid sort(int arr[]){ int n = arr.length; for (int i = 0; i < n-1; i++) { int min_idx = i; for (int j = i+1; j < n; j++) if (arr[j] < arr[min_idx]) min_idx = j; int temp = arr[min_idx]; arr[min_idx] = arr[i]; arr[i] = temp;}State the name of the algorithm, the worst complexity, average complexity and best complexity
", , ,"Selection sort, n^2, n^2, n^2
", , ,"C is the right answer because the algorithm is a selection sort and the worst, average and best complexity of selection sort is n^2
",
"Emma likes to organise her book collection alphabetically. When she goes away to Uni, her mother buys a few books for her every month.However, she doesn't stick to Emma's system and just slides the books wherever it's more convenient. She doesn't rearrange the existing books.When Emma comes home on vacation, she wants to sort her books back into alphabetical order.What's the fastest algorithm that Emma could use?
", , ,"Insertion sort
", , ,"Insertion sort is fastest for nearly sorted data.Heap sort, merge sort and quick sort don't adapt to nearly sorted data.
",
"A shell sort where h=1 is equivalent to which other sort?
", ,"Insertion sort
", , , ,"Insertion sort is effectively a special case of the shell sort, with h=1
",
"Which of the following search algorithms is fastest if the dataset is already sorted?
","Bubble sort
", , , , ,,"mjs209 (mjs209)
"
"What is the output of pre-order traversal on this tree?
", ,"8,3,1,6,4,7,10,14,13
", , , ,,"oof26 (oof26)
"
"Consider the following binary tree:What would be the outcome of printing each node via in-order traversal?
", ,"D B G E H A C F
", , , ,"In-order traversal considers the left node, current node, and right node, in that order, traversing recursively.
",
"If you perform a bubble sort on the list:62, 90, 14, 43, 54, 94, 18, 74, 3, 49How many swaps will have been carried out after the 5th pass?
","23
", , , , ,"62, 14, 43, 54, 90, 18, 74, 3, 49, 94 - 7 swaps in 1stpass14, 43, 54, 62, 18, 74, 3, 49, 90, 94 - 7 swaps in 2nd pass14, 43, 54, 18, 62, 3, 49, 74, 90, 94 - 3 swaps in 3rdpass14, 43, 18, 54, 3, 49, 62, 74, 90, 94 - 3 swaps in 4th pass14, 18,43, 3, 49, 54, 62, 74, 90, 94 - 3 swaps in 5thpass7 + 7 + 3 + 3 +3 = 23 swaps
",
"Given the hash function of % 11 into an open hashing table, which item will take the most comparisons to find if the following items are added using the given hashing function?11, 17, 32, 132, 4, 9, 100, 34, 25, 98, 165, 77, 40.
", ,"77
", , , ,"In an open hashing table when a value is found it is stored in a data structure such as a list or an array. This means that duplicates are stored later in the list/array and more comparisons are needed to find the item as you will need to compare the searched for value against every item before it as you can not know if it is actually stored otherwise. In this case 0 is the most popular value at 4 values and so the last item to be added will require the most comparisons (which is 77).
",
"Which two sorting algorithms have a best case time complexity of O(n)
", , , ,"insertion sort and bubble sort
", ,"Selection Sort = O(n^2)Bubble Sort = O(n)Insertion Sort = O(n) Heap Sort = O(n log(n)) Quick Sort = O(n log(n)) Merge Sort = O(n log(n))
",
"Consider you are implementing a hash table with 200 possible buckets, and intend to add a maximum of 150 keys to the table.The hash table is closed and uses linear probing.What is the average number of steps taken to insert/find an item in this hash table?
", ,"~2.5
", , , ,"1) Calculate the load factor, L by the number of keys divided by the number of buckets -> 150/200 = 0.752) Average steps = 0.5 * ( 1 - 1 / (1-L) ) = 0.5 * ( 1 - 1 / ( 0.25) ) = 2.5
",
"The result of each pass of a sorting algorithm is shown below:Initial list: 3 4 2 1 7 5 8 61st pass: 2 1 3 4 7 5 8 62nd pass: 1 2 3 4 7 5 8 63rd pass: 1 2 3 4 5 6 7 84th pass: 1 2 3 4 5 6 7 8Which sorting algorithm was used?
", , ,"Quick sort
", , ,"It just is, 3 was used as a pivot in the 1st pass, 2 and 4 used in 2nd pass, 7 used in 3rd pass, 5 used in 4th pass, and then the algorithm knows the sort is complete.
",
"Which data structure can be implemented to enable both adding at the beginning and removing at the end to have O(1) complexity?
","Ring Buffer
", , , , ,"Ring Buffer, also known as Circular Buffer,is a data structure that uses a single, fixed-size buffer as if it were connected end-to-endThe circular buffer is well-suited as a FIFO buffer
",
"Which data structure has nodes, leaves and branches?
","Tree
", , , , ,"Linked lists contain nodes but not the other two, a tree contains all three
",
"Which data structure is a degenerate binary tree most similar to?
", , , ,"Linked List
", ,"A degenerate tree is a binary tree in which each parent node has at most one child node each. This creates a tree with a height of n instead of log(n), and the tree behaves like a linked list.
",
"(529 - x) is divisible by 29, x>0. What is the smallest possible value of x?
", ,"5
", , , ,"Fermats little theorem, if p is prime, ap=a mod p
","joetucker (jt2039)
"
"(529 - x) is divisible by 29, x>0. What is the smallest possible value of x?
", ,"5
", , , ,"Fermats little theorem, if p is prime, ap=a mod p
","joetucker (jt2039)
"
"What type of partial order does this represent?(<H) = (=V) ? (<S) ? (=V)
","Horizontal order
", , , , ,,"abt (abt32)
"
"This abstract data structure uses nodes to contains its elements, has a pointer that indicates its head, or leading, element (and potentially one to indicate its tail element) and each of its nodes contains a reference to both the node ahead of it and behind it. What is it?
", , ,"Doubly Linked List
", , ,"It is a doubly linked list - seeWeek3b-TFLinkedlistsedit on Moodle.
",
"Jimmy owns a large selection of vinyl records. He has just inherited more records from his recently deceased mother.His mother had the exact amount of records that Jimmy has, doubling Jimmy's collection.Jimmy has decided that now is a good time to finally sort his collection by arranging the records in alphabetical order, whilst adding the new ones.Jimmy has some preferences when it comes to sorting the collection:- He doesn't have any more space for sorting. He has enough storage for all of the records, no more, no less.- With a large number of items to sort, he wants this done as fast as possible.
", , , ,"Quick sort
", ,"Heap sort:- More storage is required for sorting.Bubble sort:- Not great for larger quantities of data.- Not good for real life situations.Insertion sort:- Tends to not be as good for larger quantities of data.Merge sort:- Requires more space for sorting.Quick sort is best because it doesn't require any more space, and is the fastest algorithm that deals with large quantities well.
",
"If 617 – x is divisible by 17.What is the value of x?
", ,"6
", , , ,"Application of Fermat's Little Theorem (not expressed in the notation of modular arithmetic).17 | 617 – 6Expessed in the notation of modular arithmetic:617= 6 ( mod17 )
",
"Which of the following statements regarding complexity isnot correct?
", , ,"When computing the complexity of multi-input algorithms, we only need to consider the size of the largest input
", , ,"C is not correct - We must consider both input sizes in multi-input algorithms
",
"The following algorithm has time complexity O(f(n))int count = 0;for(int i = 0; i<n; i++){ for(int j = 0; j<(10*n); j++){ count++; } }for(int k = 0; k<n; k++){ count++; }return count;what is f(n)?
", , , ,"n2
", ,"n2 grows faster than n, so in big-O notation the time complexity 'n' from the second loop is overshadowed by the 'n^2' from the first loop, as is the complexity for initializing count and returning count. The scalar 10 is irrelevant by definition of big-O .
",
"Below we see an unbalanced tree. 5 / \ 1 6 \ 4 / 3The tree is balanced with the Right Left case, what is the output if we traverse the newly balanced tree using in order traversal?
", ,"1, 3, 4, 5, 6
", , , ,"The balanced tree should look like this: 5 / \ 3 6 / \1 4So the order printed is 1, 3, 4, 5, 6Explanation for post order traversal is described on slide 22 Week7b-Trees1File 2019
",
"Let the time taken to execute a heap sort be T(n) (where n is the number of elements to be sorted).Which of the following is true?
", , ,"T is O(log(n)), T is O(n), and T is O(2n)
", , ,"T is?(n1.25) (approx)O is a lower bound for complexity, O an upper bound and? an exact boundHence:A is wrong asO(n2) is too high +?(2n) !=?(n1.25)B is wrong as?(n)!= ?(n1.25) +O(n) is too lowC is right as both theO are less than n1.25 and the O is above itD is wrong for the same reasons as BComplexity - 2019 Week2b Powerpoint [Slide 5]
",
"An algorithm of complexity ?(2^n) takes 2 seconds to run at n=4. How long will it take to run at n=10?
", ,"128 seconds
", , , ,"(2^4)/2 = 8. (2^10)/8 = 128
",
"What is the worst case time complexity of a heap sort (2019 week 7a slide 5)
", ,"O(n*log(n))
", , , ,"O(n*log(n)) Is the both the best and worst case time complexity of a heap sort
",
"Which of the following sorting algorithms is unstable and has average time complexityT(n log(n))?
", , , , ," Quick Sort
","Merge Sort - stable,T(n log(n))Bubble Sort - stable, ?(n^2)Insertion Sort -stable, ?(n^2)Selection Sort - unstable, ?(n^2)Quick Sort - unstable,T(n log(n))
",
"What is the time complexity of the following function:int f(int n){ int count = 0; for(int i = 0; i<=n; i++){ for(int j = i; j>0; i++){ j/=2; count++; } } return count;}
","n
", , , , ,"Note that in the second for loop we increase i as well so i increases every execution.We need roughly n executions of the inner loop for i to reach n, then the loops stop.So overall time complexity of the function is n.
",
"Below we see an unbalanced tree. 5 / \ 1 6 \ 4 / 3What is the correct case for balancing and what is the output if we traverse the tree using post order traversal?
", , ,"Right Left caseOutput of 1, 4, 3, 6, 5
", , ,"The balanced tree should look like this: 5 / \ 3 6 / \1 4This is done by doing a right rotation about the node '4': 5 / \ 1 6 \ 3 \ 4Then rotating about left about node '1' to get the balanced tree. Making it the case of Right Left.Explanation for post order traversal is described on slide 24 Week7b-Trees1File 2019
",
"If an algorithm of order O( sqrt(n) ) takes 4 seconds to run at n = 50, what is the expected time for n = 200?
", , ,"8 seconds
", , ,"for O( sqrt(n) ):increasing n by a factor of 4 increases time by a factor of 2
",
"Which array function has a worst case time complexity which is higher than its average case?Key:o = objecti = index
", ,"add(o)
", , , ,,
"Consider a closed hash table where h(x) = x% 8 where the index is 0 through 7. When inserting the following data, which value occupies the place indexed 4?27, 145, 87, 45, 23, 56, 79, 135
", , ,"56
", , ,"Inserting each number in order gives that 23 takes slot 2, followed by 145 in slot 1. Using the remainder when these are divided by 8.Next 87 takes slot 7, 45 takes slot 5. Then 23 would also be in 7 so we traverse the list to the next space which we find at 2. 56 occupies 0, then 79 would also take 7 but we traverse putting it in place 4 so is the required term
",
"What is the result of using a breadth first traversal on this graph, printing every node visited?
", , , ,"A,B,C,D,E
", ,"2019 Lecture 17- Graphs 1.
",
"A closed hash function h(x) = x%13 has slots 0 through to 12. When the elements (2, 55, 4, 26, 11, 14, 37, 30, 43, 40, 44, 6, 23) are inserted into the Hash table, in what slots are 43, 6 and 44 respectively?
", ,"6th, 9th, 8th
", , , ,"2%13 = 2. So 2 is in slot 2.55%13 = 3. So 55 is in slot 3.4%13 = 4. So 4 is in slot 4.26%13 = 2. So 26 is in slot 0.11%13 = 2. So 11 is in slot 11.14%13 = 1 .So 14 is in slot 1.37%13 = 11. Slot 11 is already filled. So 37 is in slot 12.30%13= 4. Slot 4 is already filled. So 30 is in slot 5.43%13= 4. Slot 4 is already filled, slot 5 is already filled. So 43 is in slot 6.40%13= 1. Slot 1 is filled. All of the subsequent slots are filled until slot 7. 40 is in slot 7.44%13= 5. Slot 5 is filled. Slots 6 and 7 are filled. So 44 is in slot 8.6%13= 6. Slot 6 is filled. All ofof the subsequent slots are filled until slot 9. 6 is in slot 9.23%13= 10. 23 is in slot 10.
",
"Which binary tree is correct for the sequences below?In-order : B, A, D, C, Epre-order : A, B, C, D, E
", ,"A / \ B C / \ D E
", , , ,"In-order:a) DBEAC*b) BADCEc) BEDCAd) DBCAEe) EAFCBpre-ordera) ABDEC*b) ABCDEc) EBCDAd) ABDCEe) AECFB
",
"Which of the following is the correct post-order traversal of the binary tree shown below? 2 / \ 31 14 / \ / \12 7 25 16
", ,"12, 7, 31, 25, 16, 14, 2
", , , ,"A - Random generation of the numbersB - Post-order (left, right, root)C - Pre-order (root, left, right)D - In-order (left, root, right)E - Reading values from left to right, starting from the bottom row
",
"Consider the following statements about the following functions: , , and .Which one of the following statements is correct?
", ,"is of order at least and is of order at most
", , , ,"a) is incorrect, as even though f is of order at most g, it is incorrect to say that f is of order at most k.b) is correct.c) is incorrect, as although h is of order at most f, it is incorrect to say that g is of order at most f.d) is incorrect, as for f to be of order exactly k, f needs to be of order at most k (which it does not satisfy).e) is incorrect.The hierarchy of growth rates can be found on slide 12 of the week 2b powerpoint under lectures on moodle.
",
"What is the average Big Theta time complexity for Quicksort?
","
", , , , ,"See 2019 lecture 4b slide 7.
",
"What is considered a maximum height of a perfectly balanced search tree?
", , , ,"log(n)
", ,"The maximum height is log(n) for a perfectly balanced search tree.See lecture notes - Week8b - Trees3 (1) - Slide 3
",
"Consider the following algorithm with asymptotic time complexity O(f(n)).for (int i=0; i<20*n; i++) for(int j=0; j<n; j++) System.out.println(""A"");for (int i=1; i<n; i++) System.out.println(""B"");What is f(n)?
", , ,"
", , ,"The correct answer is n^2 because the first double for-loop requires n^2 operations (despite the constant of 20 in the first for loop). The second for loop requires n operations. Hence the overall time complexity is n^2.Reference Week2b slide 6.
","fs489 (fs489)
"
"Consider the following algorithm with asymptotic time complexity O(f(n)).for (int i=0; i<20*n; i++) for(int j=0; j<n; j++) System.out.println(""A"");for (int i=1; i<n; i++) System.out.println(""B"");What is f(n)?
", , ,"
", , ,"The correct answer is n^2 because the first double for-loop requires n^2 operations (despite the constant of 20 in the first for loop). The second for loop requires n operations. Hence the overall time complexity is n^2.Reference Week2b slide 6.
","fs489 (fs489)
"
"What makes an XOR or memory-efficient doubly-linked list different from a standard doubly-linked list?
", ,"Each node has only one pointer using the bitwise exclusive or combination of the previous and next pointers for that node allowing forward and backward traversal.
", , , ,"The memory efficient doubly linked list uses bitwise XOR (exclusive or) operation on the previous and next pointers to store both pointers as a single value. Traversal is accomplished by storing the previously visited node (unless on starting node when the previous value is 0) and XOR on this value with the current node pointer gives the next value. This same property of node1 XOR node2 = node3 can be reversed and therefore has the properties of a doubly linked list with reduced memory.
",
"Let , . What is the complexity in big O notation of ?
","
", , , , ,"Please see 2019 week 2b powerpoint slide 6.
",
"Which of the following is the pseudo code for insertion sort?
", ,"function sorterB(list) for i from 1 to length[list]-1 value = list[i] j = i-1 while j >= 0 and list[j] > value list[j+1] = list[j] j = j-1 end while list[j+1] = value end forreturn list
", , , ,,"jjh88 (jjh88)
"
"In a hash table, what is it called when 2 or more elements would be assigned to the same bucket given their hash function?
", , ,"Collision
", , ,"The condition when 2 or more elements are assigned to the same bucket is called a Collision.
",
"An algorithm takes 3 seconds to run with an input n = 10 and it takes 81 seconds to run with an input n = 30. If we run the algorithm with an input of n = 100, how long is it most likely to take?
", , ,"3000s
", , ,"It takes 10 seconds to run with an an input of n = 3. When we increase n by a factor of 3, the time is takes increases by a factor of n^3 ( = 3^3 = 81). Hence this algorithm has time complexity n^3.If we increase n by a factor of 10, then the time it takes should increase by a factor of 10^3 = 1000. Therefore the correct answer is 3 x 1000 = 3000. Answer C).Reference Week2b Powerpoint Slide 15.
",
"What fields are stored in the nodes of a doubly linked list?
","Two link fields and one data field - A pointer to the next node, a pointer to the previous node, and the element in the node.
", , , , ,"You can traverse a doubly linked list in both forwards and backwards directions ('next' and 'previous').
",
"Define a min heap (as described in 2019 week5b slide 4).
", , , , ," A binary tree such that the value at each node is less than or equal to the value at its two children.
","See2019 week5b slide 4 for reference.
",
"For an array list of size n what are the best, worst and average runtime complexities for each of it's operations?
","
", , , , ,"The answer is A, see page 15 of the ""D&A-Revision2.pdf"" file on the moodle page.
",
"What is the runtime of a Binary Search Tree Search?
","Average ?(log n)Best?(1)Worst?(n)
", , , , ,"On average, a BST with N values, usually will be a fairly balanced tree. This will mean that with each node traversed, there will be 50% of the list eliminated. Making the average runtime?(log n). In the best case scenario, the first node considered will be the one which is being search for. And in the worst case, the BST will not be balanced, and the algorithm will have to search through all of the nodes before finding the specified one.
",
"Which of the following sorts is not recursive?
", ,"Bubble sort
", , , ,,"emmafrichards (er575)
"
"Which, if any, of the Binary Trees labelled A-H is a complete binary tree?
", , , ,"B and C
", ,"A complete binary tree is a binary tree where:Every leaf node has the same depthEvery non-leaf node has exactly two childrenThe only binary trees that satisfy both of these conditions are B and C
",
"Processing the following tree in post-order gives which outcome?
","DFGBECA
", , , , ,"Post order traversal is discussed on lecture slides 24-25 of week7bIf you want a slightly hacky way to figure them out, I do it like this:
",
"Which node needs to be rotated in the following AVL tree to become balanced: 25 / \ 20 30 / \ \10 22 40 \ 50
", , ,"30
", , ,"Since the node with value '30' has an balance factor of -2, we know that this node is the one which requires the rotation.
",
"Kristoff has 9823598273 reindeer. The reindeer are stood in the worst configuration. He must order his reindeer before he and Sven can go on an adventure, which sort should he use to sort them in the least amount of time?
", ,"Merge sort
", , , ,"Merge sort has a worst case time complexity ofO(n log(n)) while the others have a worst case time complexity ofO(n^2).
",
"Consider the array: 4, 1, 3, 2, 5.Using Bubble sort, how many passes through the array are required to sort it from lowest to highest?Note: not including a final pass to confirm correct order.
", ,"2
", , , ,"After the first pass, order will be 1, 3, 2, 4, 5After the second pass, order will be 1, 2, 3, 4, 5
",
"Consider an algorithm with the following time complexity for an input n:What is the asymptotic time complexity of this function?
", ,"
", , , ,"Let f(n) and g(n) be be real functions with f(n) > 0 and g(n) > 0 for n>0.Then f(n) = O(g(n)) if and only if the complexity of f(n) is equal to or less than the complexity of g(n). In other words, if and only if there exist constants c>0 and m>0 such that: |f(n)| <= c|g(n)| for all n>m.a) n is not an upper boundb) Correct answer: n! grows the fastest - faster than an exponential like 7^nc) Big-Omega denotes lower bounds; n^n is not a lower bound since it grows faster than n!See Week2b Powerpoint Slides 12-13 for reference.
",
"Depth-first Traversal is defined by:
", , ,"Moving forward until you hit a dead end or previously visited vertex, then backtracking to find another path.
", , ,,"elora (ep612)
"
"Which type of sort uses pivots and partitions?
", , , , ," None of the above.
","The answer is Quicksort so none of the above.
",
"What is stored in each node of a singly linked list?
", , , ,"A pointer to the next node and the element in the current node.
", ,"A singly linked list only travels in one direction, to the 'next' node. There are no pointers to a previous node in a singly linked list.
",
"For the graph with the following path lengths, which are traversable both ways:A<->B 2A<->C 3B<->C 6B<->E 4C<->D 8D<->E 2D<->F 1E<->F 4What is the length of the shortest path between Nodes A and F?
", , ,"9
", , ,"Either by using Dijkstra's or inspecting the graph by eye we can determine that the shortest path is ABEDF, which has a length of (2+4+2+1)=9
",
"Given the following integer binary search tree, three new elements 12, 8 and 5 are inserted in that order.For each new element which node is each of the new elements a child of?For example, ""4, 49, 2"" would mean that 12 is a child of 4, 8 is a child of 49 and 5 is a child of 2.
", , ,"6, 12, 6
", , ,"After first insertion 12 is the child of 6:After second insertion 8 is the child of 12:After third insertion 5 is a child of 6:So the answer is 6, 12, 6
",
"A graph has the following adjacency matrix. Which are the only start and end points with 2 routes that are 3 edges apart? a b c da | 0 0 0 1 |b | 0 0 1 0 |c | 1 1 0 1 |d | 0 1 0 0 |
", , , , ," Start: CEnd: B
","Cube the adjacency matrix to get:| 0 0 1 0 || 0 1 1 1 || 1 2 1 1 || 1 1 0 1 |Therefore the only entry with a 2 is C to B.
",
"Which of the following about AVL trees is not true?
", , , ,"This is not a balanced AVL tree:
", ,"A: True. The left subtree has height 4 while the right has height 2, therefore it is not balanced.B: True. The average complexity of searching, inserting and deleting is O(log n).C: True. It is possible to remove any item of an AVL tree.D: False. The heights of both subtrees of each nodes do not differ by more than 1, therefore it is balanced.E: True. The worst case complexity of searching, inserting and deleting is O(log n).
",
"Which of the following sorting algorithms has the fastest best case time complexity?
","Insertion Sort
", , , , ,"If the list is already sorted then time complexity for Insertion sort is only O(n) since algorithm only completes one full pass
",
"What is the number of swaps needed to swap this list of numbers:8, 22, 7, 9, 31, 5, 13 in ascending order using bubble sort?
", , , ,"10
", ,"8, 22, 7, 9, 31, 5, 13First run: 8, 7, 9, 22, 5, 13, 31 = 4 swapsSecond run:7, 8, 9, 5, 13, 22, 31 = 3 swapsThird run:7, 8, 5, 9, 13, 22, 31 = 1 swapFourth run: 7, 5, 8, 9, 13, 22, 31 = 1Fifth run:5, 7, 8, 9, 13, 22, 31 = 1 swapTotal = 10 swaps to sort the list of numbers.
",
"What is the time complexity of the following algorithm?int m = 0;int i = n;while (i > 0) { m = m + 2i; i = i / 2;}
", , ,"O(log n)
", , ,"Has this time complexity as the value of i is halved each time the while loop is cycled through.
",
"Which of the following estimations of complexity is most suitable for theunder-estimationof time/size complexity?
","Big Omega (O)
", , , , ,,"jib25 (jib25)
"
"Which of these sorting algorithms is stable
", ,"Merge Sort
", , , ,"Selection Sort - 2019 Week4a [Slide 10] -https://stackoverflow.com/questions/4601057/why-is-selection-sort-not-stableShell Sort - 2019 Week5a Powerpoint [Slide 8] *Look at notes under slideQuick Sort - 2019D&A-Revision2 [Slide 24] -https://stackoverflow.com/questions/13498213/quicksort-algorithm-stability
",
"What is the result of pre-order traversal of this tree?
", , ,"S T U V Z X Y W
", , ,"The algorithm for pre-order traversal is as follows:void preOrder(Node cur){if (cur == null) // if empty, return…return;System.out.print(cur.value + “ ”); // Process the current node.preOrder(cur.left); // Process nodes in left sub-tree.preOrder(cur.right); // Process nodes in left sub-tree.}
",
"Java is supposed to be ""design-independent"", which of the following best describes this phrase?
", ,"It uses specific definitions of data structures (in terms of memory size and functions) so it may run on as many devices as possible.
", , , ,,"jib25 (jib25)
"
"When performing a BST search on N values, on average how many steps are required to find our value?
", , ,"?(log N)
", , ,"Lecture 14 – Trees 2, slide 11
",
"A certain quadratic time algorithm uses 50 elementary operations to process an input of size 20. What is the most likely number of elementary operations it will use if given an input of size 2000?
", ,"500000
", , , ,"Because the algorithm is quadratic, if the input increases by x times, the number of operations should increase x2 times. In this case, if the input increases by factor of 100, the number of operations increases by a facot of 1002. Therefore, 50 operations x 1002 = 500000.
",
"Consider a closed hash table with linear probing.Compute the average number of steps taken to insert an item into a hash table with total number of available buckets being 10,000 and the number of unused buckets being 1,500.
", ,"Average no.of steps ˜ 4
", , , ,"Max no. of keys to insert = 1,500 - 10,000 = 8,500Load (L) = Max no. of keys to insert / Total buckets in array = 8,500 / 10,000 = 0.85Average no. of steps to insert item = 0.5 * (1 + 1/(1 - L)) = 0.5 * (1 + 1/(1 - 0.85)) = 3.83333.... ˜ 4 steps
",
"A quadratic time algorithm uses 50 elementary operations to process aninput of size 10. What is the most likely number of elementary operations it will use if given an input of size 10,000?
", , , ,"50,000,000
", ,"The input increases from 10 to 10,000. Thisis now 1000 times the original input size.However, as the algorithm has a quadratic time complexity, this value has to be squared and then multiplied by 50 to get the the number of operations overall.This can be calculated using the formula:((New Input / Old Input) ^ 2) * (Number of Operations for Old Input)So in this case, it will be:((10,000 / 10) ^ 2) * 50 = 50,000,000 operations
",
"Consider graph F. Assume that we use Dijkstra's algorithm to find shortest paths from node START to any other node in F. Which of the following orderings on the nodes of F could be used by Dijkstra's algorithm to compute the shortest paths that start at START?
", , ,"START,3,2,4,END,1
", , ,"From START, pick the node which is connected to START by lowest value edge. In this case its node 3. Then, looking at all possible edges from START and 3, pick the lowest one again, in this case node 2. Repeat this step again, to see that next node is 4. Following the same principle, the next node should be END, and finally, last node should be 1.
",
"If we have an open hash table with 10 keys inserted and 20 buckets, what is the average number of steps taken to find an element in the table?
", ,"1.25
", , , ,"Load factor is 10/20 = 1/2. Average numbers of steps to find an element in an open hash table is 1 + L/2 = 1 + 1/4 = 1.25.
",
"what is the average time complexity of this code?public int fibonacci(int x){ if (x<=1){ return x; } else{ return fibonacci(x-2)+ fibonacci(x-1); }}
", ,"O(2^n)
", , , ,,"amd (amd77)
"
"What is the worst case complexity of shell sort?
", , , , ," None of the above
","Shell sort has worst case O(n^2) and is an unstable algorithm.As the algorithm is unstable items can jump around and therefore it can take O(n^2) iterations for a list to be sorted in a worst case scenario.Reference lecture 5a powerpoint, slide 8 (footnotes have more detail)
",
"Honda uses the following binary search tree (sorted alphabetically) in order to store their car names: Amaze / \Accord Jazz / Grace / \ Brio InsightIn order to increase naming efficiency, they wish to convert this into an AVL tree, however do not want to re-insert all of the data.Therefore they choose to carry out 'rotations' to get a valid AVL tree.What is the minimun number of each rotation that must be carried out to produce a valid AVL tree?
","1 Right Rotate, 1 Left Rotate
", , , , ,"1 Right rotation around Jazz gives: Amaze / \Accord Grace / \ Brio Jazz / Insight1 Left Rotation around Grace gives us: Grace / \ Amaze Jazz / \ /Accord Brio Insight
",
"Consider the list [420, 69, 80085, 21, 666, 1337].If you begin to sort the list so that it will be ordered from lowest to highest value using selection sort, what order will the elements be in after the first two swaps?
", , , ,"[21, 69, 420, 80085, 666, 1337]
", ,"The list begins as[420, 69, 80085, 21, 666, 1337].The lowest value in the list is 21, so this will swap position with the first element in the list, 420, giving you the list[21, 69, 80085, 420, 666, 1337].The lowest value in the unsorted list is now 69, which is already in position so no swap needs to be performed.The lowest value in the unsorted list is now 420, so this will swap position with the first element in the unsorted list, 80085, giving you the list[21, 69, 420, 80085, 666, 1337].Although this list has not yet been fully sorted, this is how it looks after its first two swaps.
",
"Given a list of unordered, unbounded, integers, and the task of finding the smallest value present in the list, what method provides the lowest average time complexity to complete the task?
", , , ,"Linear Search
", ,"Note that the list contains unbounded integers. Hence an O(n) sort such as counting sort or bucket sort is impossible.A: O(nlogn) time due to sort (and no reason to binary search)B: O(nlogn) time due to sortC: O(nlogn) time to construct the BSTD: O(n) time hence the winnerE: No reason to ternary search
",
"Johnny Jones has a unordered list of twenty family relatives' names that he wants to put into a non-AVL tree.Which is the correct reason as to why Johnny should not sort the list before adding them to the tree?
", , ,"Because adding a sorted list to the tree will cause the tree to be lopsided and therefore as slow as linear search to search.
", , ,,"david_smith (dfs29)
"
"What algorithm is considered a ""stable"" algorithm?
", , , ,"Equal terms stay in their relative positions after sorting
", ,"A stable algorithm is one in which two objects appear in the same order in sorted list as they appeared in the unsorted list. For example, Insertion, Merge and Bubble sorts are all stable, while Selection sort is not.
",
"Consider the following graph and it's adjacency matrix M:When an adjacency matrix is multiplied by itself (i.e. M * M = ?) what does the resultant matrix represent?
", ,"The resulting matrix shows which vertices are two edges from each other.
", , , ,"When adjacency matrices are multiplied by themselves they produce a matrix showing which vertices are two edges apart.If this resulting matrix is multiplied by itself then we get all vertices that are three vertices apart and so on.Taken from DA Lecture 17 Graphs 1.
",
"Given a graph in adjacency list form, using what combination of data structure and algorithm can we efficiently find the shortest distance between two nodes.
", , , ,"Min Heap and Dijkstra's Algorithm
", ,"An efficient O(ElogV) time implementation of Dijkstra's pathfinding algorithm will use a min heap to store all nodes currently in the queue to be processed, and break upon reaching the destination node.
",
"Which of these sorting algorithms is unstable?
", ,"Quick sort
", , , ,"A stable sorting algorithm is one in which equal items retain their relative position after sorting.However, in quick sort this is not guaranteed.For example, if sorting an array [7, 5, 5], the '5's will not stay in their initial order.
",
"Calculate x for:
", , , ,"2
", ,"Application of Fermat's little theorem.Week 11b slide 12
",
"Calculate the average number of steps taken to find/insert an item into this closed hash table:Number of keys= 3500 Number of Buckets=15750
", , ,"1.42
", , ,"Load = (Max number of keys to insert) / (Total number buckets in array)Average number of steps for a closed hash: Week10b slide 31
",
"In a singly linked list without a tail reference, what is the time complexity of adding an element to the end of the list?
", ,"T(n)
", , , ,"With a tail reference the time complexity could beT(1) but without a tail reference it has to check all n elements thusT(n).
",
"Define an unstable sorting algorithm
", ,"An algorithm that outputs two items with the same value in a different order to the way they were input
", , , ,,"swt39 (swt39)
"
"In an Open Hash Table, what type of data structure does each array bucket point to?
", ,"Linked List
", , , ,"Week 10b – Hashtables 1, slide 23
",
"What is the time complexity of Dijkstra's Algorithm? (v is the number of vertices, e is the number of edges)
", , , ,"?(v2)
", ,"from Lecture 18 – Graphs 2, slide 21
",
"What is 2^35 mod 7?
","4
", , , , ,"By Fermat’s Little Theorem, 2^6 = 1 mod 7. Thus, 2^35 = 2^5 = 32 = 4 mod 7.
",
"An implementation of insertion sort runs for 10 seconds to sort a list of 10^8 records.How long will it likely run to sort 10^9 records?
", , , , ," 1000 seconds
","Insertion sort has quadratic time complexity of O(n^2). So if the input is multiplied by 10 from 10^8 to 10^9, then the time will be multiplied by 10^2=100 so 10*100=1000 seconds.
",
"What is the definition of an AVL tree?
", ,"A self-balancing Binary Search Tree where the difference between heights of left and right subtrees cannot be more than one for all nodes.
", , , ,,"ec862 (ec862)
"
"Consider the following functions:f(n) = 5n^2 , g(n) = 10n^2 and h(n) = 10^nSelect the true statement below:
", , ,"g is ?(f), h is O(g), and f is O(h)
", , ,"g and f are both of order n^2 so have similar time complexity. h is of highest order because (a^n) grows faster than (n^a) for all a being constants. thus g describes the lower bound of h and h describes the upper bound of f.
",
"Which of the following is valid advice when hashing passwords.
", , ,"Salt your hash by hashing the username and the password together.
", , ,"A - Hashes for passwords should actually be slow rather than fast so that dictionary or brute force attacks are slowed down.B - The physical storage device should have no impact on your hash functionC - Actual valid advice to increase resistance to dictionary attacksD - Hash function MD5 has been thoroughly brokenE - Never store your passwords in plain text
",
"What is the average time complexity for searching in a Skip List?
", , , ,"T(log(n))
", ,"Powerpoint - Week3b Slide 16
",
"A closed Hash-table with linear probing uses the function h(x) = x % 5 as a hash function and has slots 0,1,2,3,4.When the elements, (13, 4, 19, 5, 27), are inserted into the Hash-table in order, what is the resulting Hash-table?
","19, 5, 27, 13, 4
", , , , ,"Insert 13:13 % 5 = 3 0 1 2 3 4|__|__|__|13|__|Insert 4:4 % 5 = 4 0 1 2 3 4|__|__|__|13| 4|Insert 19:19 % 5 = 4 0 1 2 3 4|19|__|__|13| 4|Insert 5:5 % 5 = 0 0 1 2 3 4|19| 5|__|13| 4|Insert 27:27 % 5 = 2 0 1 2 3 4|19| 5|27|13| 4|
",
"What is the shortest path from u to z?
", , , ,"3
", ,"Using Dijkstra’s Algorithm (2019 Lecture 18) the shortest path is length 3 through the path u -> x -> y -> z
",
"Which of the following binary trees are valid AVL trees.A: 20 / \ 8 22 / / \ 4 21 40/3B: 20 / \ 25 15C: 20 / \ 8 22 / \ 5 21D: 20 / \ 8 22
", , , , ," D only
","A is not valid as the node containing 8 is unbalancedB is not valid as 25 is more than 20 while it has to be less since it is on the left hand side of the tree to 20. (and similar in reverse for 15 and 20)C is not valid as 21 is more than 20 while it is on the left hand side of the tree from 20D is hence the only valid AVL tree
",
"What is insertion sort's best case for time complexity?
", , , , ," O(n) when data is already sorted
","Insertion sort's best case is when the data is already sorted. This is because you will look:at the 2nd item, see the 1st item is less or equal, move on,at the 3rd item, see the 2nd item is less or equal,...,at the nth item, see the n-1th item is less or equal
",
"Which sorting algorithm best fits this description:StableBest case : (n log n)Average case: (n log n)Worst case: (n log n)
", , , ,"Merge sort
", ,"Quick, Merge, and Heap all match the complexities, however merge sort is the only one of them that is stable
",
"What is the runtime complexity for this code?for (int i=1; i<n; i++) System.out.println(“test”);int y = n;for (int j=1; j<n; j++) for (int k=1; k<y; k++) System.out.println(“test2”); y = y/2; for(int x = 10; x > 0, x = x-1) System.out.println(""test3"");
", , ,"(n log n)
", , ,"int y = n;for (int j=1; j<n; j++) for (int k=1; k<y; k++) System.out.println(“test2”); y = y/2;Is the code that we care about as it has the highest order of n complexityThe first loop has complexity n, the second has log(n) as y (same value as n) is halved each time, so each loop there are half as many iterations.
",
"Which of the following statements about sorting algorithms is false?
", , , ,"The merge sort, insertion sort, bubble sort, and quick sort are all stable sorting algorithms.
", ,"A is true because merge sort always has complexity n*log(n), while insertion sort has average (and worst-case) complexity of n^2 but best-case complexity of just n.B is true because both bubble sort and insertion sort have average (and worst-case) complexity of n^2 and best-case complexity of n.C is true as the merge sort effectively requires a second array of n data to use as a buffer.D is false because the quick sort algorithm is unstable (it does not maintain the order of equal valued elements).E is true because the insertion sort is effectively the shell sort with h=1.
",
"The following list is being sorted by first letter only:hondahalloumibeeThe sorting algorithm produces the following output:beehalloumihondaWhat property is guaranteed to be true about the sorting algorithm used?
", ,"The algorithm used was unstable
", , , ,"As we are only sorting by first letters as stated, honda and halloumi are considered equal. In the output, honda and halloumi have switched positions as halloumi is now above honda. This means the sort used is unstable, as in a stable sort items of equal value retain their relative position after sorting (2019 Week4a-post slide 10), i.e. honda would've stayed above halloumi as this is the order they were in the input.
",
"What will the following tree look like after being balanced?4 2 1 0 -1 3 6 5 7
", ,"4 2 0 -1 1 3 6 5 7
", , , ,,"ohr22 (ohr22)
"
"Below shows a binary search tree where V represents the values of each node in the tree. If the values had been inserted in the order 11, 4, 16, 2, 14, 19, 9, 3, 17, 12, 1, 15, 27, 10, 7 what would the value of X (in diagram) be? V V V V V V VV V V V X V V V
", , , ,"12
", ,"If the next input value in the list is greater than the value of the node you're currently visiting, travel right, otherwise, travel left. Continue until you reach the end of a branch.The tree would look like the following: 11 4 16 2 9 14 191 3 7 10 12 15 17 27
",
"Consider the following binary tree 17 / \ 14 43 / \ / \ 7 16 34 68 / \ 1 3By which traversal/traversals will the node 14 be printed out the latest?
", , ,"Post-Order
", , ,"Pre-Order: 17, 14 ... => 2nd element printedIn-Order: 1, 7, 3, 14 ... => 4th element printedPost-Order 1, 3, 7,16, 14 ... => 5th element printed
",
"What does the following arithmetic expression tree evaluate to? / \- +/ \ / \8 2 1 2
","2
", , , , ,,"tn364 (tn364)
"
"I have a standard closed hash table with linear probing, with the function h(x) = x % 7. I wish to put the following elements: 10, 3, 11, 20, 21, 22, 8 (in that exact order). What does the table look like afterwards?
","21, 22, 8, 10, 3, 11, 20
", , , , ,"10 % 7 = 3, so goes in 3_, _, _, 10, _, _, _3 % 7 = 3, but 10 is in 3, so goes in 4_, _, _, 10, 3, _, _11 % 7 = 4, but 3 is in 4, so goes in 5_, _, _, 10, 3, 11, _20 % 7 = 6_, _, _, 10, 3, 11, 2021 % 7 = 021, _, _, 10, 3, 11, 2022 % 7 = 121, 22, _, 10, 3, 11, 208 % 7 = 1, but 22 is in 1 so goes in 221, 22, 8, 10, 3, 11, 20Therefore, it is A
",
"Which Asymptotic Complexity has the highest growth rate:
", , ,"n log(n)
", , ,"Comparing against n, it is intuitive that log(n), log^2(n) and sqrt(n) have smaller growth rate than n; and it also stands to reason that nlog(n) has a higher growth rate than n as log(n)>1 for all values of n greater than the base of the log.
",
"A large company is looking to store their employee ID numbers in an open hash table. They currently have 20,000 employees, however they would like to future proof their system and design their system for a capacity of 30,000. They would like to perform operations on certain IDs with an average number of steps at 4. How many buckets would their hash table require to fit these specifications?
", ,"5000
", , , ,"Week10b-Slide30Use the average step formula for open hash tables to find the load value ( steps = 1 + L / 2 which gives L = 6 ).Then use the load formula to find the number of buckets ( buckets = values / load giving the answer buckets = 5000).
",
"What is the minimum number of nodes I need to add to an empty AVL tree in order for it to have a depth of 3?
", , , , ," 7
","The finished tree might look something like this: 6 / \ 3 8 / \ \ 2 4 9 / 1Remember, the root node is at depth 0.
",
"A binary tree has six levels, and all are full exceptfor the last level, which is only half full. How manynodes does it have?
", , ,"47
", , ,"Since it is a complete binary tree (ie. ""one in which every leaf node has same depth and every non leaf has exactly two children"")Level 1: 1 nodeLevel 2: 2 nodesLevel 3: 4 nodesLevel 4: 8 nodesLevel 5: 16 nodesLevel 6: 16 nodes (since half full)1+2+4+8+16+16 = 47
",
"You have been tasked with building a probabilistic Skip list with 1,048,576 nodes.How many lanes will the skip list have? i.e.( if a skip list has lanes labeled ""lane 0"",lane 1"" & ""lane 2"" it has 3 lanes).What is the probability that a node will be assigned to the lane labeled ""lane 15""?
", ,"20 LanesA 1/32768 chance of being assigned to the lane
", , , ,,"ath36 (ath36)
"
"Which of the following sorting algorithms has the largest best time complexity, i.e. the largest O(n) in the best case:
", ,"Selection Sort
", , , ,"Quick Sort: O(n log(n))Merge Sort: O(n log(n))Bubble Sort: O(n)Insertion Sort: O(n)Selection Sort: O(n2)Thus, Selection sort has the largest time complexity with O(n2)
",
"Given the hash function f(x) = x % 10, for the following input (1234,60,1264,3456,638,3666,349,201,470,1000,84,3), which statement is true for this input using open hashing:
", , ,"The elements 1234, 1264 and 84 hash to the same value
", , ,"In open hashing the function x % 10 gives:1234 = 460 = 01264 = 43456 = 6638 = 83666 = 6349 = 9201 = 1470 = 01000 = 084 = 43 = 3A is false as the elements 3456, 3666 and 60 DO NOT hash to the same valueB is false as 3 % 10 = 3, so NO error is generatedC is true as the elements 1234, 1264 and 84 all hash to the same value of 4D is false as each element DOES NOT hash to a different value(unique)E is false as multiple elements can hash to the same value (they are put into a linked list)Extra information on hashtables can be seen in the Week10b-HashtablesAll lecture from 2019
",
"You are implementing a data structure. When you insert a new items at the front of data structure, it can be done in just a few simple steps. When you try to access the 1500th item, you must pass through 1499 others first. If you want to remove an item, you can remove any item in just a few steps once you have found it. It does not have a previous pointer. What data structure have you implemented?
", ,"Linked list
", , , ,"You have to pass though x-1 nodes to access the x th node in a list. You can insert an item in just a few steps at the start of the list regardless of the number of nodes, unlike an array. Once you have found an item you want to remove, you can do so in just a few steps with a linked list, unlike an array where you would have to shift all the following items left one slot.Doubly linked lists make use of previous pointers, linked lists do not.More information:2019_TFLinkedlistsedit slide 13
",
"Draw a closed hash table with linear probing of size 7. The hash function is h(x) = x % 7.The following elements are inserted into the hash table: 2, 7, 13, 19, 21, 25, 29What is the correct order of the elements now in the hash table?
", , , ,"7, 21, 2, 29, 25, 19, 13
", ,"See 2019 lecture slides Week10b-HashtablesAll to understand the process of hashing and hash tables.
",
"Billy Bob needs to implement a searching algorithm. His algorithm keeps dividing the search area in half (on sorted data) until it arrives at his word. However, there's a twist! The algorithm is very clever, and, if for example the word starts with 'z', it will start searching towards the end. The steps taken by this algorithm is log_base2(log_base2(n)) on average. Which of the following algorithms did Mr. Bob implement?
", , ,"Interpolation search
", , ,"Interpolation search is an improved binary search by choosing a different element (i.e. not necessarily the halfway element) based on what you are searching for. So, for A, B, C? Search at the beginning! K, L, M? Search in the middle! X, Y, Z? Search at the end!More information:DA-2019_TF_Lecture02-ADTs, slide 10.https://en.wikipedia.org/wiki/Interpolation_search
",
"Given the following algorithm:for(int i = 0; i < n; i++) for(int j = 0; j < n; j++) System.out.println(""I love DSA!!!"");Which of the following following describes the correct time complexity bounds?
", , , ,"They are all correct.
", ,"They are all correct time complexity bounds. Theta means exactly, big-O means at most, and omega means at least. Therefore, if theta is n^2, then big-oh of anything greater than or equal to theta is correct, and omega of anything lesser than or equal to theta is correct.In other words,Exact bound (i.e. big theta).Upper bound (i.e. big O).Lower bound (i.e. big omega).More information:2b Slide 10
",
"Which of the following sorting algorithms is stable?
", , , , ," Merge sort
","Merge sort is a stable sorting algorithm.Quick sort is typically not stable, but some stable versions do exist.
","tomdraper (td544)
"
"Which of the following sorting algorithms is stable?
", , , , ," Merge sort
","Merge sort is a stable sorting algorithm.Quick sort is typically not stable, but some stable versions do exist.
","tomdraper (td544)
"
"What is the best, average and worst time complexity of shell sort?
", , , ,"Best: O(nlog(n)), Average: Varies, Worst: O(n^2).
", ,"2019 week5a slide 10 gives links
",
"Which of the following sorting algorithms does not have an average time complexity of nlogn?
", , , ,"Shell sort
", ,"Shell sort has an average complexity of O(n1.25).
",
"Which of the following ontology languages and notations has the most commercial support globally?
", , , , ," Universal Modelling Language (UML)
","A - Web Ontology Language is limited to niche areas.B - Resource Description Framework (RDF) is small outside of academia.C - DARPA ML and Ontology Inference has a fair amount of use, but is mainly US-centric.D - Topic Maps/XML Topic Maps has limited use.E - Universal Modelling Language (UML) is widely used.
",
"What is the worst possible time complexity of an insertion sort on a list of size n?
", ,"T(n2)
", , , ,,"spf29 (spf29)
"
"How will the array look after using h-sort with an h-value of 2 on: 5,9,3,7,2
", , ,"2,7,3,9,5
", , ,,"aisd20 (aisd20)
"
"Which of the following sorting algorithms has an average time complexity ofT(n)=nlog(n) and space complexityT(n)=n?
", , , ,"Merge Sort
", ,"Heap Sort has a space complexityT(1).Insertion Sort has an average time complexityT(n^2).Stooge Sort is incredibly slow with time complexity higher than n^2.Merge sort has a time complexity of T(nlogn) and space complexity ofT(n) as it needs a temporary array for storing the sorted lists.
",
"Which of the following trees is a legit binary search tree containing the numbers (2,7,9,12,18,23,26,37,43,75)? Represented in PRE-ORDER traversal!
","26, 12, 7, 2, 9, 18, 23, 43, 37, 75
", , , , ,"A) Pre-order traversalB) In-Level traversalC) In-order TraversalD) Not a legitimate binary search treeE) Post-order Traversal
",
"Given this graph:How many paths of length 2 or less are there from vertex C to F?
", , ,"2
", , ,"If you make the adjacency matrix for this graph then square it you get a 1 in the (3,5) slot on both meaning there is one path of length one and one path of length two so adding these gives 2 paths of length 2 or less.
",
"What is the runtime of the following code ?for (int i=1; i<n; i=i*2) System.out.println(“hello”);for (int j=1; j<m; j++) for (int k=1; k<10; k++) for (int l=1; l<j; j++) System.out.println(“CM20254”);
", , , ,"
", ,"The answer is D since the first for loop is on its own and has complexity log(n) we then add on the complexity of the nested for loops which has complexity m^2.
",
"Which algorithm is the correct description of pre-order traversal
", ,"1. View contents of root.2. Traverse the left subtree, i.e., call Preorder(left-child)3. Traverse the right subtree, i.e., call Preorder(right-child)
", , , ,,"jp2294 (jp2294)
"
"Which of the following is a graph representation?
", , ,"Adjacency List
", , ,"Week 9a - graphs lecture; slide 12.
",
"Accuracy and precision are two important factors to consider when taking data measurements.What are the correct definitions of accuracy and precision?
", , ,"Accuracy is how close a value is to its true value.Precision is how repeatable a measurement is.
", , ,"Accuracy is how close a value is to its true value.Precision is how repeatable a measurement is and is measured using the standard deviation of the measurements X1, … , Xn.This information can be found on Moodle:Slides 8 and 9 of the Week1b-Powerpointv2 powerpoint.
",
"What is the formula to calculate the load on a hash table?
","
", , , , ,"The answer is A.Look at moodle powerpoint Week10b-HashtablesALL
",
"Which answer is always TRUE for Linked Lists?
", , ,"In a Linked List, the best and worst case runtime for the operation add(o) is the same.
", , ,"A. Linked Lists never need to be resized before an operation. When a Linked List is added to, regardless of whether it has a tail reference, the list does not need to be first resized.B. Array Lists find the nth element in one step. Linked Lists find the nth element in n steps. They only take the same length of time are when you are finding the first element.C. This is true, they both have a run time of 1.D. This is not always true. If a Linked List has a reference to the (i-1)th element, then the amortised runtime is 1.E. This is only true for skip lists.
",
"Management has asked you to change a closed hashtable to an open hashtable. It currently has a load factor of 0.75.What is the change in the average number of steps to find a bucket after you change the hashtable?Answer is: open av. - closed av, can be positive or negative
", , ,"-1.125, Decrease
", , ,"2019 Week 10b-HashtablesAll, Slides 31-32. Using the equations for average number of steps for closed and open hashtables with the 0.75 load factor we find closed av. = 2.5 and open av. = 1.375. So the change is 1.375-2.5 = -1.125 steps
",
"An algorithm has runtime, what is the asymptotic time complexity of this algorithm?
", , ,"
", , ,"The answer is C since the most significant term in the runtime is n^4. Explained in Lecture Week2b
",
"Define what a leaf node in a tree is.
", ,"A node with zero children
", , , ,,"aisd20 (aisd20)
"
"Order the complexities from lowest to highest growth rate:a = log(n)b = n log (n)c = (log(n))^2d = sqrt(n)e = 2^nf = n^3g = n
", , , ,"a, c, d, g, b, f, e
", ,"The order is:Logarithmic: log(n)Logarithmic-squared: log2(n)Square root: sqrt(n)Linear: nLogarithmic: nlog(n)Cubic: n^3Exponential: 2^n
",
"Which of the following is an AVL Tree:
", , ,"
", , ,"A) Look at the node with element 4. The left subtree has height 0, whereas the right subtree has height 2, so it is unbalanced and thus not an AVL tree.B) Left subtree of root has height 2, whereas right subtree of root has height 0 => unbalanced => not an AVL TreeC) Height of subtrees doesn't differ by more than one at any node, smaller elements always on left, larger elements always on right.D) 6 < 7, but is on 7's right subtree.E) C is an AVL tree.
",
"Insert the following numbers lexicographically in an AVL tree: {5,20,8,9,3,11,4,65,85,35,15,1}.What is the in-order transversal of the tree?
", , , ,"1, 11, 15, 20, 3, 35, 4, 5, 65, 8, 85, 9
", ,"Below is the balanced AVL tree: 5 / \ / \ 20 8 / \ / \ / \ / \ 11 35 65 9 / \ / \ / / \ / \ / 1 15 3 4 85
",
"You have been tasked with organizing and storing the books available in a library using their ISBN number. Assuming there is only one copy of any book owned by the library, what data structure should you use to complete your task?Some key considerations:You must be able to remove and add books as neededLookup times must be as short as possibleSpace is not an issueBooks do not need to be sorted, merely stored and retrieved
", , , , ," Open Hash Table
","You should use an open hash table because it has O(1) time for insertion, searching, and deletion. You should use a hash table because you can use the ISBN number as a key to perform the hash function on. You wouldn't use a closed hash table because deleting books would be an issue. You wouldn't use a binary search tree because it is not as time efficient as a hash table. You wouldn't use a graph because there are no edges involved so no links between books. You wouldn't use a linked list because it is slower than a hash table.
",
"log212! = 28.8355. What is the minimum number of comparisons needed to sort 12 items?
", , ,"30
", , ,"Week 5a slide 8
",
"Given a Linked List, what is the purpose of the following method, if the method call is doesSomething(head):public void doesSomething(Node node) {if(node== null)return;doesSomething(node.next);System.out.println(node.value);}
", , , , ," To output the value of each node in the linked list, from last to first
","The function recursively traverses the linked list from front to back and once it reaches the end the recursion unwinds and the node values are output starting from the back to the front.
",
"The following text describes a type of tree traversal: - Process current node - Process nodes in the left sub-tree - Process nodes in the right sub-treeWhich of the following traversals does the above describe?
", ,"Pre-Order Traversal.
", , , ,"Below is example code for printing out the data in all the nodes in a tree using the pre-order traversal:void preOrder(Node current) { if (current == null) { return; } System.out.println(current.data); //This is recursive so all the nodes in the left sub-tree will be processed first preOrder(current.left); preOrder(current.right);}
",
"What is the output of the pre-order traversal of the AVL tree which started empty and had the following elements inserted in this order:6, 43, 11, 23, 9, 15
", ,"11, 6, 9, 23, 15, 43
", , , ,"6 is entered, balanced43 is entered, balanced11 is entered, unbalanced --> LL rotate, now balanced23 is entered, balanced9 is entered, balanced15 is entered, unbalanced --> R rotate on '43' subtree, now balancedPre-order traversal as described in 2019 Lecture 13
",
"A graph in which all edges go from one vertex to another in a specific direction is known as what?
", , ,"Directed Graph
", , ,"Directed graph is just what is it called (See 2019 Lecture 17)
",
"Finish the name of this module:Data Structures and _____
", , , ,"Algorithms
", ,"While C is factually accurate, D is the correct answer because the name of this course is Data Structures and Algorithms.
","samuelth (sth35)
"
"Finish the name of this module:Data Structures and _____
", , , ,"Algorithms
", ,"While C is factually accurate, D is the correct answer because the name of this course is Data Structures and Algorithms.
","samuelth (sth35)
"
"In a hash table with 600 slots, after how many insertions is there likely to be (i.e. with probability 0.5 or greater) a collision?
", , , ,"29
", ,"The explanation for this is alongside the Birthday Paradox (2019 Week 10b - slide 12). A collision is likely after approximately (3.s.f). Therefore 29 insertions are necessary.
",
"Do hash tables that use a prime number of buckets always increase distribution and reduce collisions, explain why?
", , ,"Prime numbers can sometimes improve distributions and reduce collisions depending on the distribution of the input values. If uniformly distributed, primes numbers will have very little effect. On a skewed distribution, the prime numbers can help since you're significantly reducing the no. of common factors.
", , ,,"marcus (mzzt20)
"
"Insert 28, 29, 16, 9, 34, 8, 20 in order into an empty AVL Tree. What are the leaf nodes after rebalancing to satisfy the AVL Condition?
","8, 20, 34
", , , , ,"Add into the tree as normal (smaller than goes left, larger than goes right).The rebalancing problem comes once we add 8 to the tree, where the node (16) becomes unbalanced. Perform a single left rotation on the node and finally add 20.The leaves are 8, 20 and 34.
",
"What is the minimum number of comparisons required to sort any permutation of 7 integers?
", , ,"13
", , ,"It has been proven that the smallest number of comparisons is 13 for 7 objects. This is done by merge sorting 5 items and adding 1 then adding 1 again.
",
"What is the worst case scenario for finding an element in a singly linked list of size n?
", , , , ," n
","The worst case scenario is n as a singly linked list can only be traversed in one direction. This means that starting at the head the worst node to find is the last node as all n nodes must be compared.
",
"What is the difference between a singly linked list and a skip list?
", ,"A skip list has multiple lanes to allow for faster searching.
", , , ,"A skip list contains multiple lanes, a slow lane containing all of the nodes stored in a singly linked list way as well as faster lanes that have less elements in them to allow for faster searching.
",
"You've just started work at a long standing Technology company and your first project is to update old legacy data structures. You are given a closed hash tablewith linear probing containing identification numbers that is no longer being used, but is going to be archived due to its sensitive nature.You are tasked to copy this data into an array for archiving, but first the Load factor needs to be calculated.The closed hash table has 10,000 keys stored in it and you are told any item can be accessed in 3 steps on average. What is the Load Factor?
", , ,"0.8
", , ,"The Load Factor is defined as:L = (Max number of keys)/(Total number or buckets).The average number of steps to find an item in a closed hash table with linear probing is given by .Setting this equation to equal to 3 gives a Load Factor of 0.8.
",
"During this course a number of data structures have been taught. Generally these structures have worst case space complexity of O(n), with a single exception. One taught data structure has worst case space complexity O(n log(n)). Which of the taught data structures represents this exception?
", , , , ," Skip List
","A skip list has n elements and logn layers. In the worst case each element exists in each layer, so space complexity is O(nlogn).
",
"You wish to use open hashing (where each array slot contains a pointer to a linked list). The hash function has the form h(x) = x % 6 and the hash table has slots 0, ... , 5. If you insert the elements 5, 6, 7, 9, 15, 21, 22, 61 in that order, what is the minimum list length at the end?
","0
", , , , ,"For the elements5, 6, 7, 9, 15, 21, 22, 61 the open hash table will look like:0: 61: 7 612:3: 915214: 225: 5the 2 slot points to no values hence minimum list length is 0.
",
"An algorithm has runtime T(n) = 0.00149n14+ 100n2+ 48nlog(n) for input of size n. What is the asymptotic time complexity of this algorithm?
", , ,"
", , ,"Leading term is ,hence its asymptotic upper bound cannot be anything less than .Therefore A,B,D are incorrect. D is correct since this is an upper bound (but not exact bound) to T(n).
",
"In the context of an AVL Tree, AVL stands for:
", ,"Adelson-Velskii and Landis
", , , ,"B is the correct answers.AVL trees were named after two Soviet computer-scientists:Georgy Maximovich Adelson-Velsky andEvgenii Landis..
",
"Imagine you are a software engineer a Honda. Your boss asks you to implement a probabilistic skip list in Java with the probability of a new node being added to each lane decreasing by a factor of 0.5 for each lane as the lane number increases. However, due to lack of server space, she says that you may not use any arrays of size greater than 10 when defining the set of pointers for each node. Roughly how many items can this skip list hold before it can no longer be considered binary search when searching for nodes?
", , , ,"1024
", ,"Week3b-TFLinkedlistsedit. Each node can only have 10 pointers, therefore there can only be 10 lanes (0-9). The 9th lane can skip 29(512)nodes. Therefore, for lists of size greater than 1024, the 9th lane will skip less than half of the nodes and is no longer binary search.
",
"What is one disadvantage of using a Hash Table with a small load L?(say, for L < 0.2)
", , , ,"A lot of memory is wasted.
", ,"See 2019 Lecture ""Week10b - HashtablesAll""
",
"Consider average time complexity for each search algorithm.Select the only true statement.
", , , ,"Array List search is faster than Linked List search, with Array List O(1) and Linked List O(n)
", ,"ArrayList search is O(1) because it can access the i'th element in the array in constant time.Linked List search is O(n) because it must check each item from the beginning, and traverse the list element by element until it finds a match. Hence on average it will be doing n/2 comparisons which is O(n).
",
"Suppose I have a Close Hash Table with load L, and it takes me on average 1.15 steps to find an item in the table. What is the value of L (to 2 sig.fig.) ?
", , ,"0.23
", , ,"The average number of steps needed to find an item for a Closed Hash Table with load L is:# of steps =1/2(1 + 1/(1-L))Setting the above equation equal to 1.15 and rearranging, gives us L = 0.23.2019 Lecture ""Week10b""
",
"Two main measures for the efficiency of an algorithm are_________________
", ,"Time and Space
", , , ,,"hannzzz (hs975)
"
"Which of the following input Arrays makes insertion sort in ascending order perform the largest number of comparisons?
", , ,"(7,6,5,3,2,0)
", , ,,"hannzzz (hs975)
"
"Consider the following doubly linked list:HEAD - one - two - three - four - five - TAILwhere one is a Node object with integer value 1, prev = HEAD, next = two. This object type is similar for the remaining nodes.What will the list be after performing the following operations:Node temp = New Node(value=7, prev=one, next=three)one.next = temp;three.prev = temp;
", , ,"HEAD - one - temp - three - four - five - TAIL
", , ,"The temp node is made with forward pointer to node three, and prev pointer to node one.one.next is updated to temp, hence 2 has been removed.three.prev is updated to temp, which removes the backwards pointer to the node two.
",
"An application for a supermarket checkout needs to store products with their serial numbers, and the application must be able to quickly find the product linked to the serial number which has been scanned by the cashier.Should the serial number of the product change, the application should also be able to quickly change the serial number associated with the relevant product. Which of the following data structures would be most appropriate to store the products and serial numbers in memory?
", ,"Open hashtable
", , , ,"Open hashtable is the preferred ADT as they are the most efficient in searching/editing key value pairs.
",
"Which of these is correct for the BEST time complexity for the following Algorithms?
", , ,"Insertion Sort: T(n)Selection Sort: T(n^2)Bubble Sort: T(n)Quick Sort: T(n log n)Merge Sort: T(n log n)
", , ,,"hannzzz (hs975)
"
"What is the Post-Order Traversal of the tree: 20 / \ 10 28 / \ 5 18 \ 19
", ,"[5,19,18,10,28,20]
", , , ,,"ath36 (ath36)
"
"Using open hashing with ahash function of the form h(x) = x % 7 and a hash table with slots 0, …,6, if you insert the elements 15, 7, 22, 8, 19, 31, 30, 29, 40, 81 in that order, what is the maximum list length at the end?
", , , ,"4
", ,"The hash table would look as following:0: 7, 811: 15, 22, 8, 292: 303: 314:5: 19, 406:
",
"What is the recurrence relation for worst case QuickSort, and what is the time complexity in this case?
", , , , ," Recurrence: T(n) = T(n-1) + O(n)Time Complexity: O(n^2)
","In the worst case, QuickSort will have pivots that are the smallest or largest element in the list. In this case, we first sort the list around the pivot which is O(n), and then perform Quicksort on the remainder of the list which is T(n-1).This yields the recurrence relation: T(n) = T(n-1) + O(n).As for complexity, the average case is O(nlogn), however the worst case is O(n^2), which is answer E.
",
"A quadratic time algorithm uses 70 elementary operations to process an input of size 20. What is the predicted number of elementary operations it will use for an input of size 200?
", ,"7000
", , , ,"The input size has increased by a factor of 10. Since it is a quadratic function, the number of elementary operations will increase by a factor of 10^2.
",
"Consider the following hypothetical situation:You have a sorting algorithm which uses quicksort 50% of the time, and insertion sort 50% of the time, on average. n input lists arrive such a given list is already completely sorted with probability x, and the rest are random.Give an equality for x in terms of n for when this approach will be quicker than always using Selection sortYou may refer to the below:(Note that because of the hypothetical nature of the question, the answer may seem counter-intuitive, but will make mathematical sense)
", , ,"
", , ,"The average runtime for our method considering the different cases where the list is/isn't sorted is:We want to find where this is less than selection sort, which is expanding and multiplying by two, we have:so our final answer is:
",
"You work for Spotazon music, and have been asked to implement a data structure to store music playlists. Users will want to be able to easily add/remove tracks from any point in the playlist, and they should be able to skip forward/skip backwards a track. Your brief is to use a data structure that will maximise the speed of these functions. Which of the following data structures would be most appropriate.
", , ,"Doubly-Linked List
", , ,"The doubly linked list has forward and back pointers, so the speed of traversing the tracks in either direction will be optimal. Furthermore, inserting/deleting to a specified point is fast (THETA(n)) [see Week 3b-TFLinkedListsedit on moodle].
",
"You use a standard closed hashtable with linear probing (to the right, i.e. in the direction of higher indices). The hash function has the form h(x) = x % 7 and the hash table has slots 0, … , 6. If you insert the elements 18,19,25,701,77,74,y in that order, where y is an unknown integer, what does the hashtable look like at the end?a) 77,701,74,y,18,19,25b) 77,25,701,y,18,19,74c) 77,701,y,19,18,25,74d) 77,18,19,701,25,74,ye) None of the above are correct
","77,701,74,y,18,19,25
", , , , ,"Standard hastable theory using Linear Probing. The unknown integer y makes no difference and goes in the only slot available, as it is at the end.
",
"Consider the following two lists:List X: List of integers from 1 to 100 (inclusive) in ascending orderList Y: Random permutation of list XWhich of the statements A-D is FALSE (on average)?
", , , ,"Quicksort will sort list Y faster than Insertion sort will sort list X
", ,"A) True because nlogn < n2B) True because n < n2C) True because n < n2D) False because nlogn > n
",
"Which of the following algorithms has the lowest complexity class
", , ,"k = n;while (k > 1){ sum++; k = k/2;}
", , ,"Recall the order of complexities is as followsConstant: 1, Logarithmic: log(n), Log-squared: =log^2(n),Square root: sqrt(n),Linear: n, n log(n), Quadratic: n^2, Cubic: n^3...A has complexity n log(n)B has complexity n^3C has complexity log(n)QuickSort's complexity is n^2MergeSort's complexity is n log(n)Therefore the fastest algorithm is C
",
"What are the steps taken to complete a Radix Sort on a list of integers?
", ,"Assume the key is a d-digit number, with d? {0, ..., k-1}. Complete a counting sort on the individual values that share the least significant position, and then continue to the next least-significant digit to complete a stable counting sort and so on.
", , , ,,"jrb93@bath.ac.uk (jrb93)
"
"What is the runtime of the following code?for (int i=0; i < N; ++i) { for (int j=0; j < M/2; j=j*2) { System.out.println(j); if (i%2 == 0) { for (int k=0; k < 2*N; ++k) { System.out.println(i + "" is even""); } } }}
","
", , , , ,"The outermost loop undergoes O(N) iterations.The second loop undergoes iterates up to O(M), but increases logarithmically (thanks to the j=j*2) rather than linearly. Hence, this loop undergoes O(log(M)) iterations.Finally, the innermost loop undergoes O(N) iterations. The fact that this loop only executes for odd values of j is not relevant to the big theta approximation.Therefore, the overall runtime is that of answer A.
",
"Given the following numbers: 6,2,18,34,13,14.When constructing a perfectly balancedbinary search tree from the numbers in that order, which number is its root?
", , ,"13
", , ,,"tm694 (tm694)
"
"Selection Sort runs for 5 seconds for 100 records. How likely is it likely to run for 10,000 records?
", , , ,"50,000 seconds
", ,,"tm694 (tm694)
"
"Below is an incomplete code for the class LinkedList.Method 'Get' finds the ith element in the linked list. Which code must go at 'X' for the code to work.public Object get(int i){ if (i<0 || i>=n) { return error; } ListNode node = head; Xreturn node.element;}
", , ,"for (int j=0; j<i; j++){node = node.next;}
", , ,,"tm694 (tm694)
"
"You have to insert the element ""20"" in this skip list, p = 0.5, max lanes = 5:Which one of the following statements are true?
","The new element must point to ""30"" for each lane it exists on, apart from the lanes ""30"" doesn't exist on.
", , , , ,"""20"" goes before ""30"", therefore must point to ""30"" when it is inserted. The lanes can't ""skip over"" elements in the same lane, therefore every instance of ""20"" will point to a ""30"" on it's lane.This question is intended to be of high difficulty.Source: 2019, Week 3b, Slide 14-17
",
"Below is an example graph. Which of the following adjacency matrices represent this graph?
", , ,"
", , ,"See Moodle resource 'DA-Lecture17-Graphs1 TF 2019sem' for explanation on representing a graph as an adjacency matrix.
",
"What is the result of shell sorting the data set below with a gap size of 3.56 21 30 43 98 23
", ,"43 21 23 56 98 30
", , , ,"56 21 30 43 98 23 Original List43 21 30 56 98 23 Compare 56 and 43, and swap.43 21 30 56 98 23 Compare 21 and 98, no change.43 21 23 56 98 30 Compare 30 and 23, and swap.Then iterate once more through the list and no changes are made.
",
"Which of the following is TRUE?
", , ,"It is not always possible to make a Big Theta (?) statement about an algorithm
", , ,,"jj743 (jj743)
"
"What is the correct in order traversal of this Binary tree?
", ,"abcde
", , , ,,"ja853 (ja853)
"
"Using Dijkstra's algorithm, starting at node S, state the order of nodestraversed before reaching the node B.
", , ,"S, A, E, C, D, F, B
", , ,"Dijkstra's algorithm will find the shortest path to an available node and take it, it will repeat this process until it has checked all possible paths and reached the destination.1. Starting at S we move to A is it is shorter Node: Distance A: 2 E: 3 C: 4 D: 5 F: 6 B: 7
",
"Below is an example binary tree. What is the pre-order traversal of this tree?
", , ,"21, 16, 2, 1, 11, 5, 13, 45, 22, 44, 23, 50, 48
", , ,"Option A is post-order traversal (left, right, centre)Option B is in-order traversal (left, centre, right)Option C is pre-order traversal (center, left, right)Option D is level order traversal (traverse each node on current level then go down a level)Source: Moodle - Week7b-Trees1 (powerpoint)
",
"Which statement about linked lists and arrays is TRUE?
", ,"It is faster to search for an item in the middle of an array than a linked list.
", , , ,"Why option B is true:When searching for an item in the middle of an array, it can be found in one step by specifying the index of the element. However for a linked list each node from the head must be passed through to reach the target node.Why options A and D are false:When inserting or removing an element from an array, other elements must be shifted appropriately. Whereas for a linked list only the pointers of adjacent nodes need to be changed.Why option C is false:An array allocates space at compile time (static memory allocation) and a linked list allocated space at run time (dynamic memory allocation).Source:Moodle -Week3b-TFLinkedlistseditFile Slide 13 -https://moodle.bath.ac.uk/pluginfile.php/1430761/mod_resource/content/0/2019_TFLinkedlistsedit.pdf
",
"Consider a closed hash table with 150 buckets storing 100 items.On average, how many steps of linear probing would it take to find an item?
", ,"2
", , , ,"Load factor (L) = Number of items / Number of bucketsL = 100 / 150 = 2 / 3Average # of steps to find = 1/2 (1 + 1/(1-L))= 2
",
"The list of numbers {10, 36, 27 22, 4} is to be stored as an AVL Tree.Which numbers, will be the leaves (subtrees with no children) of the left subtree from the root when the tree is balanced?
", , , , ," 4, 22
","10:10 is inserted as the rootcurrent height = 0, no need for balancing36:36 > 10, 36 is inserted to the right of the rootcurrent height = 1, no need for balancing27:27 > 10, 27 < 36, 27 is inserted to the left of 36current height = 2, balancing requiredBalancing:Current tree: 10 36 27The tree is unbalanced, apply right-left rotation: 2710 3622:22 < 27, 22 > 10, 22 is inserted to the right of 10current height = -1, no need for balancing4:4 < 27, 4 < 10, 4 is inserted to the left of 10current height = -1, no need for balancingThe final tree is: 27 10 36 4 22Therefore the leaves are 4 and 22 for the left subtree
",
"The following integers are inserted into an empty ALV Tree in the following order: 4, 8, 15, 16, 23, 42. The tree puts the greater integers on the right, and smaller ones on the left e.g 8 would be somewhere to the right of 4. The tree is kept balanced after each insertion. Each node of the tree is then printed using pre-order traversal separated by commas. Nothing is printed if a null node is encountered using this method. Which of the following is the correct output produced?
", ,"16,8,4,15,23,42
", , , ,"Explanations can be found in: Week7b-Trees1 and Week8b-Trees3. Pre-order traversal prints the current node, then the left, then the right. I will run through is problem step by step after each insertion and show what would be printed using pre-order traversal at each. 4: Output: 4. 8: Output: 4,8. 15: Tree is now unbalanced at 4, so the tree rotates left with 4 as the pivot. Output: 8,4,15. 16: Tree is still balanced. Output: 8,4,15,16. 23: Tree is unbalanced at 15, so the tree rotates left with 15 as the pivot. Output: 8,4,16,15,23. 42: Tree is now unbalanced at 8, so the tree rotates left with 8 as the pivot. Output: 16,8,4,15,23,42.
",
"Correct assigments of big O notation forTheta, Omega, Oare:
", , ,"Exact, Worst, Best
", , ,"2019 Week2b-Powerpoint slide5Theta = exactOmega = bestO = worst
",
"Which of the following sorting algorithms does shellsort make use of?
", , ,"h-sort
", , ,,"sw2229 (sw2229)
"
"Which of the following is true for all binary trees?
","Every node has at most 2 children
", , , , ,,"sw2229 (sw2229)
"
"What are the 2 main types of graph traversal?
", ,"Breadth-first, depth-first
", , , ,,"sw2229 (sw2229)
"
"What can't/shouldn't you do with closed hashtables?
", , ,"Remove items
", , ,,"duncrtr (djc71)
"
"What is an advantage of Heap Sort over Merge Sort?
", , ,"It is an in-place sort
", , ,,"duncrtr (djc71)
"
"What is the Big-Theta of this code:void myProgram (int a, int b, int c){ for(int i=0; i<a*a; i++){ for(int j=0; j<b; j++){ if(j==b/2){ for(int k=0; k<c; k++){ System.out.println(""TRUE""); } } else { System.out.println(""FALSE""); } } }}
", , , ,"
", ,"Week 2b Slide 23.
",
"Which three of the following sorting algorithms are stable?:Selection sort,Insertion sort,Bubble sort,Shell sort,Quick sort,Merge sort,Heap sort.
", , , , ," Insertion sort,Bubble sort,Merge sort.
","See slide 24 of D&A-Revision2.pdf on Moodle
",
"Two functions have respective time complexities defined by:where log is of base-2.For what value of n does g become faster than f?
", ,"n=107
", , , ,,
"Consider the following tree:What would be the result of printing the values of each node via POST-ORDER traversal?
", , ,"D G H E B F C A
", , ,"Post-order traversal applies the following procedure to each node it arrives at, starting from the root node:1: Recursively traverse left sub-tree2: Recursively traverse right sub-tree3: Read/print current node
",
"Which of the following code snippets would correctly remove the nthelement, n, of a doubly-linked list?
", , ,"n.prev.next = n.next;n.next.prev = n.prev;
", , ,"The first line will ensure the previous node now skips over node n and points forward straight to the next node after it.The second line ensures the next node after n now points backwards to the previous node (again, skipping over n).
",
"Which of the following sorting algorithm is stable and has average time complexity of nlog(n)
", , ,"Merge
", , ,"Week 7a 2019 slide 5
",
"Assume that we have a perfect skip list (as described in 2019 coursework 2 Q3... ""every element is linked to the next, even numbered elements are also linked to the one 2 ahead, elements whose number is divisible by 4 are also linked to the one 4 ahead, and so on by powers of 2."").The skip list contains 32768 elements. How many elements have at least 11 lanes?
", ,"31
", , , ,"The number of elements with n lanes is given by:So for at least 11 lanes we need to find the number of elements with 11,12,13,14 and 15 lanes.
",
"A binary tree has a depth of 6, it is full on all levels except for the bottom. The bottom level contains 4 nodes, how many nodes are there in the tree?
", , ,"67
", , ,"For simplicity, find the amount of nodes in the tree for all levels excluding the bottom one. This gives a complete tree with a depth of 5. The tree has 2^(5+1) - 1 = 63 nodes (from the formula on slide 11 of Week7b 2019). We simply add the 4 from the bottom level to get 63 + 4 = 67 nodes in total.
",
"Which of the following statements are true?
", , ,"When adding a value to an Open Hash Table the current index is already in use the algorithm will add it to the end of a linked list associated with that index.
", , ,"an open hash table uses linked lists to solve collisions by adding each item to the end of the linked list.options A) and B) are not features of Hash Tablesoption D) describes removing in a closed Hash Table
",
"What is the time complexity of the following extract of code?System.out.println(""Hello world"");for(int i = 0; i < n; i++){ System.out.println(""Test"");}for(int j = 0; j < n; j++){ System.out.println(""Test"");}
", ,"O(n)
", , , ,"2019 Week1b-Powerpointv2
",
"which of the following defines Big-O notation where g(n) = O(f(n))?
","? c>0 n0>0 | ?n>n0 : g(n) = c f(n)
", , , , ,,"lm2062 (lm2062)
"
"Which one of the following data structures has the average search time complexity ofT(1)?
", , , , ," Hash Table
","2019 Lecture 10b, slide 42
",
"If we cube the adjacency matrix of a directed graph, what should happen?
", , ,"The resulting matrix should show all the matrices that are 3 arcs apart from each other.
", , ,"If the graph had the adjacency matrix of an identity matrix, all points would point at themselves, so it wouldn't be directed and it wouldn't be a graph. However, as the adjacency matrix shows all the nodes that can be reached by an arc, cubing the graph has the property of showing the nodes that can be reached by 3 arcs. Note that not all arcs have to be of unit length, so E is discounted, and as this is a directed graph, then not all combinations of length 1 can be returned to. Sorry for the slightly trick question :)
",
"For the following piece of Java code, select the worst case runtime from the options given.N.B. You can assume that printing a string to console takes constant time.public static void function (int N) { for (int i = 1; i < N; i++) { for (int j = 1; j < N; j = j * 2) { System.out.println(""hello world""); } }}
", , ,"O(NlogN)
", , ,"First you should notice that there are nested for loops which are both bounded by N and start at 1.The outer for loop increments by the addition of 1 to i each iteration, while the inner for loop increments by the multiplication of j by 2 each iteration.Therefore:Outer for loop: O(N) iterationsInner for loop: O(logN) iterations- Why?- If we say k is equal to the number of iterations of the inner for loop, then N = - If we take logs of both sides, we are left with k = log NMultiplying together since they are nested for loops, gives you the following answer:O(NlogN)
",
"What option has the correct definitions of each of the following:leafComplete (Full) Binary treeBinary tree
", , ,"leaf - A node with 0 childrenComplete (Full) Binary tree - Every leaf node has the same depth, Every non-leaf has exactly two childrenBinary tree - A tree where every node has at most two children
", , ,"leaf - A node with 0 childrenComplete (Full) Binary tree - Every leaf node has the same depth, Every non-leaf has exactly two childrenBinary tree - A tree where every node has at most two children
",
"which of these options is in the order of:pre-order TraversalIn-order TraversalPost-order Traversal
", , , ,"1. Process the current node2. Process the nodes in the left sub-tree3. process the nodes in the right sub-tree1. Process the nodes in the left sub-tree2. Process the Current node3. Process the nodes in the right sub-tree1. Process the nodes in the left sub-tree2. Process the nodes in the right sub-tree3. Process the current node
", ,"Pre-order Traversal1. Process the current node2. Process the nodes in the left sub-tree3. process the nodes in the right sub-treeIn-order Traversal1. Process the nodes in the left sub-tree2. Process the Current node3. Process the nodes in the right sub-treePost-order Traversal1. Process the nodes in the left sub-tree2. Process the nodes in the right sub-tree3. Process the current node
",
"Order the following Big O runtimes from largest to smallest:O(log n), O(1), O(n log n), O(n), O(), O()
", , , ,"O(), O(), O(n log n), O(n), O(log n), O(1)
", ,"Take care to read the question carefully:Order the following Big O runtimes from largest to smallest.>> n log n > n > log n > 1
",
"If the closed hash table with linear probing has a load factor of 0.30, what is the average number of steps to insert/find an item.
", , ,"~1.21
", , ,"For a closed Hash table with linear probingAverage number of steps = 1/2(1+1/(1-L)) for L < 1.0(1-L) - % empty spacefor a open hash tableAverage number of steps = 1 + L/2
",
"What is the correct recurrence relation for merge sort (when N, the number of elements of the list being sorted, is greater than 1 and a positive power of 2 for simplicity)?
", , ,"T(N) = 2T(N/2) + O(N)
", , ,"If the length of the list, N, is equal to 1, then the list is sorted so merge sort just returns the list: T(1) = O(1) (this is the base case).Otherwise, merge sort splits the list into two equal halves (since the number of elements is a positive power of 2) and then recursively sorts each half: 2 * T(N/2)Then the two sorted halves are merged where the runtime of the merge operation is O(N) where N is the number of elements being merged.Therefore the correct answer is: T(N) = 2T(N/2) + O(N)
",
"What is the best, average and worst case complexity of selection sort?
","
", , , , ,"2019 Week 7a Slide 5
",
"Perform 1 pass of h-sort on the following array taking h to be 4.1D array = 31, 6, 4, 21, 12, 84, 19, 62, 4, 11, 1, 91Output will be?
","12, 6, 4, 21, 4, 11, 1, 62, 31, 84, 19, 91
", , , , ,,"rgw28 (rgw28)
"
"What is the formal definition of 'Big-Omega' , for a positive function f(n)?
","A function g(n) equalsO(f(n)) if and only if there are constants c>0 and n0>0 so that for all n>n0, g(n)= cf(n).
", , , , ,"See 2019 Week2b Powerpoint Slide 5 for formal definitions.
",
"Assume you are deleting an element (called 'node') from the middle of a doubly-linked list equipped with prev and next references. Which of the following lines of code would correctly delete the element in the list?
", , ,"node.prev.next = node.next; node.next.prev = node.prev;
", , ,"As the node is in the middle of the list, two references have to be reassigned; the next reference from the previous element and the prev reference from the next element.The references of the node in question do not have to be reassigned, as the node is no longer going to be accessed.See: 2019 Week3b Linked Lists Slides.
",
"Three types of search that we can use to find an element in an ordered set of data are binary search, interpolation search and linear search. What are their complexities?
", , ,"Binary Search is ?(log(n)), Interpolation Search is ?(log(log(n))), Linear Search is ?(n)
", , ,"See slides 5-10 in lecture week2a.
",
"I add the following numbers to a Binary Search Tree in this order: 13, 5, 19, 8, 7, 16, 18, 12, 17What is the depth of the tree? What is the minimum number of nodes I would need to add to make it complete?
", , , , ," depth:4, nodes:22
","The depth is 4. The number of total nodes in a complete tree of depth d is 2^(d+1)-1, which in this case is 31. As we already have 9 nodes on the tree, we have to add another 22.
",
"Which of the following algorithms is stable?
","Merge sort
", , , , ,"A stable algorithm is one where keys of the same value remain in the same order after sorting.
",
"Given the AVL tree:When the value of 12 is inserted, which rotation is required in order to balance the tree?
", , , ,"Right-left rotation
", ,"The value of 12 is initially inserted into the tree as the left node of 14, meaning the tree is unbalanced.Then, traversing the tree from the node that was inserted, updating the heights and checking balance factors, it is found at value 11, it is not balanced. Therefore, a rotation of some kind needs to take place.Since the since the right node of 11 has the value on its left, a right rotation must occur. However, once this is complete the tree is still unbalanced, so a left rotation must occur.
",
"The following is code for a Node for a particular ADT. Which ADT is it?class Node{ public Object element; public Node[ ] next; public Node(Object o){ element = o; next = new Node[5]; }}
", , , ,"Skip List with 5 lanes
", ,"In a skip list, there are different lanes; hence the 'next' property is an array of nodes rather than just one node, as the ith node in the array follows from the current node in the ith lane. Binary Search Trees and AVL Trees also point to multiple nodes, but these are commonly programmed as the 'left' and 'right' properties.
",
"Using the hash function h(x) = x%5, insert the elements 31, 60, 7, 46, 73, 82, 9, 57, 23, 92, 28 into an open hash table with slots 0,...,4. Which of the following options shows the third element of the longest list after the insertions?
", , ,"57
", , ,"Using the method shown in slide 24 of the week 10b hash table powerpoint, the hash table becomes:6031, 467, 82, 57, 9273, 23, 289So the slot corresponding to 2 is the longest and its third element is 57.
",
"What is the loop invariant of insertion sort?
", , ,"The subarray A[0 to i-1] is always sorted
", , ,,"ail24 (ail24)
"
"Suppose a Binary Search Tree contains a collection of surnames. Which type of tree traversal would you use to print these names alphabetically?
", ,"In-order
", , , ,,"sw2229 (sw2229)
"
"Define Singly Linked List.
", , , , ," Each node stores a reference to the object that is the element of the sequence and a pointer to the next node only.
","A = header linked listB = multi linked listC = circular linked listD = doubly linked list
",
"What is mean by binary trees are identical?
", ,"When the binary trees are structurally identical and have same value in the nodes.
", , , ,"Tree 1 Tree 2 10 10 2 4 2 41 5 6 8 1 5 6 8
",
"Choose the correct steps of insertion sorting on the array below: 7 6 2 5 1
","6 7 2 5 12 6 7 5 12 5 6 7 11 2 5 6 7
", , , , ,"In insertion sort, it should start sorting with first 2 elements and ignore the rest. After sorted the first 2 elements, focus on the first 3 elements and sort it. Then, continue with the next elements until the last.
","min (mjt65)
"
"Choose the correct steps of insertion sorting on the array below: 7 6 2 5 1
","6 7 2 5 12 6 7 5 12 5 6 7 11 2 5 6 7
", , , , ,"In insertion sort, it should start sorting with first 2 elements and ignore the rest. After sorted the first 2 elements, focus on the first 3 elements and sort it. Then, continue with the next elements until the last.
","min (mjt65)
"
"What is the in-order traversal of the tree seen below? 8 / \ 6 9 / \ \ 2 7 15 /1
", , ,"1, 2, 6, 7, 8, 15, 9
", , ,"A shows level order traversalB shows pre-order traversalC shows in-order traversalD shows post-order traversalSlides: Week7b-Trees1 slides 15, 22, 24 & 26
",
"f(n) = 2, g(n) = 56 log(n), h(n) = 17n log(n)Which of the following statements is correct?
", ,"g is O(f), g is O(h), f is (h)
", , , ,"Very similar but just different numbers to Q3 of the 2017-18 exam from two years ago.
",
"When creating a new hashtable, why should we create it such that it has a prime number of buckets?I.e. we should only create hashtables w/ a prime number of buckets, for example 2021 buckets rather than 2000.
", ,"Ensures fewer collisions and more even distribution of values
", , , ,"Using prime numbers ensures fewer collisions and more even distributions. slide 35 Week 10b
",
"If N = 91, and k 1 mod 72, then mod N.What is the value of ?
", , ,"x = 14
", , ,"Rivest–Shamir–Adleman (RSA) Corollary from Lecture 11b.N =pq, where p and q are distinct primes (p=7,q=13)k 1 mod((p-1)(q-1)) = 1 mod(6.12) = 1 mod 72Hence the Corollary states = mod N, so our answer is C) x = 14
",
"Here is a binary tree: 10 / \ 5 15 / / \2 11 20 / 18What would the preorder traversal be?
", , ,"10, 5, 2, 15, 11, 20, 18
", , ,,"spf29 (spf29)
"
"Take the input array: [49, 42, 67, 85, 23, 56, 34, 15]. After one iteration of h-sorting (the underlying operation in Shellsort) with h = 4, what is the resulting array?
", ,"[23, 42, 34, 15, 49, 56, 67, 85]
", , , ,"Applying h-sorting as specified in 2019 Week5a PowerPoint Slides 3-6 to the array.
",
"Let there be a standard, closed hash table with linear probing from left to right, with slots from 0 to 10. Consider a hash function h(x) = x % 11. Inserting elements in order: 19, 30, 41, 1110, 9, 17, 108, 555, 125, 234, 5. What does the hash table look like at the end?
", , , , ," None of the above
","Week 10b, from slide 14. Answer should have been 1110, 9, 108, 234, 125, 555, 17, 5, 19, 30, 41.
",
"An closed hash table of length 10 is used with hash function h(k)=k%10, and linear probing. After inserting 6 values into an empty hash table, the table is as shown below.012 423 234 345 526 467 3389In what order where the values inserted?
", , ,"46, 34, 42, 23, 52, 33
", , ,"In the first one the numbers would be ordered in the following way 42 52 34 33 46 23in the second one, they would be ordered as 52 23 34 33 46 42and in the last one, 42 23 34 33 52 46only one that works is CBecause it's a closed hash table, when the key we want to put a number in is full, we have to look for the next empty one
",
"Supposeis the adjacency matrix representing a graph. Which of the following is the matrix representing vertices that areedges apart, whereis a natural number?
", ,"
", , , ,"From 2019 Lecture 17 slides 10 and 11,would tell us the vertices that are 2 edges apart andwould tell us which vertices are 3 edges apart. Thereforetells us the vertices which areedges apart.
",
"What is the best case time complexity for the following code snippet:public static void sort(int[]array) { for(int i = 0; i<array.length-1; i++) { int min = array[I]; int minIndex = I; for(int j = i+1; j<array.length;j++) { if(array[j]<min) { min = array[j]; minIndex = j; } } int temp = array[minIndex]; array[minIndex] = array[I]; array[i] = temp; }}
","O(n2)
", , , , ,"This code is the sorting algorithm for selection sort. The complexity of selection sort in the best, average and worst case isO(n2).For more information about selection sort: Week 4a-post 2019 slides 6 to 8.
",
"Below this paragraph is a diagram of tree; A / \ B C / \D EConsidering with the list of values, describe how 'Post-order' search / traversal is done by showing what the output would be for this search / traversal method:
", , ,"D, E, B, C, A
", , ,"D, E, B, C, A - This is 'Post order' traversalD, B, E, A, C - This is 'In order' traversalA, B, D, E, C - This is 'Pre order' traversalD,E,B,A,C and D,B,E,C,A are not any form of searching or traversal!
",
"Regarding Hash Tables, which of the followingstatements is false?
", , ,"Open Hash Tableshandle collisions by inserting objects to the next sequentially available index.
", , ,"It takes on average O(1) for all operations to be performed in an Hash Table. It can take O(n) operations, if you were considering the worst case for a Hash Table.Open Hash Tables handles collisions by adding values to the end of the list. Closed Hash Tables handle collisions by inserting objects to the next sequentially available index.Hash Tables need to be sized for the load factor because it is calculated by the number of values you intend to add, divided by the number of buckets in the array.
",
"What is the best time complexity for sorting a sorted list using selection sort?
", , ,"O(n2)
", , ,"Selection sort has worst, best and average time complexity of O(n2) because it runs through the whole list multiple times whether the list is sorted or not
",
"Let p = 5. What is 29equivalent to mod p? Hint: see lecture 11b 2019
","
", , , , ,,"md825 (md825)
"
"What is the average case time complexity of insertion sort?
", ,"
", , , ,"Best case for insertion sort is, however worst case and average case is.
",
"Which of the following sorting algorithms is stable?
","Merge sort
", , , , ,,"md825 (md825)
"
"A company wants to store 10,000 values in a closed hash table using linear probing to find values.To be fast enough, they require values to be found in no more than three steps of linear probing on average.What is the minimum number of buckets that should be used for the closed hash table for this condition to be met?
", ,"12,500 buckets
", , , ,"We can calculate the average number of steps linear probing will take based on the load factor using this expression: (2019 week 10b, slide 31)Since we know the average number of steps, three, we can rearrange this function to find the required load factor : where n is the average number of steps. Evaluating this gives .The company wants to insert 10,000 values, so we can work out how big the hash table should be using .
",
"Consider the following AVL tree:After inserting the value 7, what sequence of rotations would be required to rebalance the tree?(The subtrees at which rotations are applied are left unspecified)
", , ,"A left rotation, then a right rotation.
", , ,"The value 7 would be inserted as 6's right child. This causes 8 to have a balance factor of -2, meaning its left subtree is two nodes higher than its right subtree (which is empty). The 8 subtree must be rebalanced.We cannot perform any left rotations at node 8 because it has no right child to take its place.A right rotation at 8 gives the following tree, which is symmetrically as unbalanced as before:To properly balance the tree, we must first perform a left rotation at node 6 followed by a right rotation at node 8, as shown in the following two trees:The final tree is now balanced (node 4 has a balance factor of 1, node 7 has a balance factor of 0).
",
"Let p and q be primes such that p*q = N and p != q.If (p-1)(q-1) = 36What is N?
", , ,"N = 57
", , ,"p = 3 and q = 19 so 3*19 = 57
",
"This adjacency matrix shows who is friends with who.Which node has the most friends?
","1
", , , , ,"Node 1: has 2 friendsNode 2: has 1 friendNode 3: has 0 friendsNode 4: has 1 friend
",
"What doesSystem.currentTimeMillis() measure?
", ,"The number of milliseconds since 1 Jan 1970.
", , , ,"Solution: Week 1(b) Slide 2 2019
",
"What is 413 mod 7?
", , , ,"4
", ,"Application of Fermat's Little Theorem 2019 Lectures - Week 11b - Slide 12. p = 7, k = 1 mod 6, x = 4.
",
"Suppose you are creating a new social media platform that allows people to create a single account for themself. Then they can add any people that they are friends with who are also using the platform to their list of friends.As the platform is still fairly new, the number of people using the platform is significantly less than the total number of friends assigned between people.You want to represent a graph showing all people on the platform (as vertices on the graph) and the friends each person has (as the edges on the graph).Is it better to represent this graph using an adjacency matrix or an adjacency list?
","Adjacency Matrix
", , , , ,,"connor_crees (cic41)
"
"Given a large data set to sort, which of the following sorting algorithms would be the best to use based on its average time complexity?
", , ,"Quick Sort
", , ,,"connor_crees (cic41)
"
"Place the following algorithms in order of most to least efficient when dealing with around 10,000 items:A: Bubble sortB: Quick sortC: Bucket sortConsider the average case complexities.
", ,"CBA
", , , ,"Bubble sort: O(n2)Quick sort: O(nlogn)Bucket sort: O(n + k), where k is the number of bucketsInterestingly, will much more data, 'clustering' can occur, meaning that many items are put into the same bucket and thus can take longer, hence the specified amount of data.https://smartbear.com/blog/develop/bucket-sort-vs-quick-sort-which-is-faster-aqtime-b/ is an interesting read :)
",
"Which of these lines best represents the time complexity of a binary search algorithm?
", , ,"Graph C
", , ,,"moi21 (moi21)
"
"What is the time complexity of the following code:for (int i=1; i<n; i++) for (int j=1; j<2*n; j*2) for (int k=1; j<n+1; k++) System.out.println(""hello world"");for (int l=1; l<10; l++) for (int m=1; m<n; m++) System.out.println(""HELLO WORLD"");
", , , , ,"
","n*n for lines 1 and 3 (constants don't affect complexity)*logn for line 2 (j*2)+n for line 6line 5 doesnt affect the complexity
",
"Here is some code given in lectures:What line will need to go at X to print the time taken for MyClass.m() to run?
", ,"System.out.println(end-start);
", , , ,"See slide 4 week 1b
",
"What is semantic application integration?
", , ,"Allows multiple applications to access multiple data sources based on the meaning of the data
", , ,,"moi21 (moi21)
"
"Given the following numbers 58, 4, 102, 13, 27, 99, 1, arrange them in a complete balanced binary search tree. Which of the following is the preordered traversal of the tree?
","27,4,1,13,99,58,102
", , , , ,"pre-order traversal consists of processing the current node's value out, then processing to nodes in left subtree and then processing the nodes in the right subtree.
",
"Which of the following statements from a to d about array lists is FALSE? If none of them is false, choose option e.
", ,"The worst case to insert an element anywhere in a non-full array list without resizing takes a time complexity of O(log n).
", , , ,"The worst case to insertan element anywhere in a non-full array list without resizing takes .
",
"What is the worst case run time complexity of selection sort?
", , , ,"O(n^2)
", ,"All cases of selection sort are O(n^2)
",
"In a real world application when would you use a linked list over an array list?
", , ,"When every you are going to be inserting into the middle of the list and the list is large
", , ,"For most applications an array list will be the way to go even if insertion into the centre of the list is frequent. This is because a lot of programming languages have blazing fast array copying operations such as java's System.arraycopy. This means the overhead from iteration over the list in a linked list is not outweighed by cost of copying the array in an array list for most cases. For this reason a list has to be large before any performance benefit can be noticed when using a linked list over an array list and inserting into the middle.
",
"Which of the following statement is not true?
", ,"Stooge sort is faster than Merge sort
", , , ,"For more information, check week 4b/8 and the other slides regarding sorting
",
"Consider the following binary tree, which of the following traversal is true? 15 / \ 7 19 / \ / \ 6 8 16 21
", , , ,"Preorder: 15,7,6,8,19,16,21.Postorder: 6,8,7,16,21,19,15.Inorder: 6,7,8, 15, 16,19,21.
", ,"Lecture note week7b trees orhttps://www.tutorialspoint.com/data_structures_algorithms/tree_traversal.htm
",
"Find the Bound Challenge! (What is the average run time of the function below)int count = 0;void foo(){ for (int i = 0; i <n; i++) for(int j = 0; j < 100*n; j++) for(int k = 0; k < n*m; k++) count++}
","
", , , , ,"Lecture noteWeek2b-Powerpointon moodle page 22,23. (Find the Bound challenge)First for loop has runtime nSecond for loop has runtime 100nThird for loop has runtime n*mHence we get the average time complexity
",
"Honda vs Lamborghini pt 4if you haven't answered part 1-3 of this question please do so first:part 1: https://peerwise.cs.auckland.ac.nz/course/main.php?cmd=answerQuestion&id=4250213part 2: https://peerwise.cs.auckland.ac.nz/course/main.php?cmd=answerQuestion&id=4250257part 3: https://peerwise.cs.auckland.ac.nz/course/main.php?cmd=answerQuestion&id=4250259Having received information and payment from a client about a new target the hitman must now attempt to kill his target. The target is having a press conference about their recent success. Looking at his route (lengths given in minutes) and using Djikstra's shortest path algorithm, what is the minimum time it will take him to get from his home at C to the conference at E?
", , ,"5
", , ,"The shortest path is C>A>B>E so the minimum time needed is 5 minutes
",
"Which of the following sorting algorithms has its best case time complexity (for n elements), to be the same as the time complexity of tree traversal methods (for a tree of n nodes)?
", , , ,"Insertion sort
", ,,"quadristavrioverde (sk2285)
"
"Suppose you have the following AVL tree:Select the correct order in which the following 3 tree traversal ways are displayed: i) A > B > D > E > C > F > Gii) D > B > E > A > F > C > Giii) D > E > B > F > G > C > A
", , ,"i) pre-orderii) in-orderiii) post-order
", , ,"The definitions for each traversal order method are:Pre-order:1. Process the current node.2. Process the nodes in the left  sub-tree.3. Process the nodes in the right  sub-tree.In-order:1. Process the nodes in the left sub-tree.2. Process the current node.3. Process the nodes in the right sub-tree.Post-order:1. Process the nodes in the left sub-tree.2. Process the nodes in the right sub-tree.3. Process the current node.For further information regarding Binary Tree Traversals see 2019 Week7b between pages 14-28See .pptx file from moodle: ""Week7b-Trees1.pptx""
",
"Honda are looking to overtake Lamborghini in net profit next year. They hired a specialist to take a look at their company and see where they can save time and money. Each vehicle they make is equipped with a 10 digit ID. They found that they use a linear search algorithm to search through an unsorted list of vehicle IDs when shipping these vehicles to the retailers. What data structure should they use to store the vehicle IDs in order to reduce time and processing power needed to find each ID and as a result beat the slow lamborghinis?
", , , , ," Hash Table
","A Hash table uses an algorithm to provide each ID with a new key. The ID is then put into the cell corresponding to this key. This means that it takes T(1) time to find each ID rather than T(n)
",
"An AVL Tree is made containing 35 nodes. What is the minimum height of the tree
", , ,"6
", , ,"As all nodes have maximum of two child nodes each. The minimum height of the tree is (log2(33)) rounded up which is 6
",
"The run times for a sorting algorithm, for a list size and time taken in seconds , are as follows: = 420, = 69 = 840, = 1104 = 1680, = 17664What is the run time complexity of the algorithm?
", , ,"
", , ,"When doubles, the time taken, , is increased by a factor of , which is .
",
"Before working at the University of Bath, while working in Honda, Dr. Tom Finch created a binary tree about one of Honda's competitors.When delivering the Power Point presentation, the tree on the projector looked like this:He also passed round some handouts, with his comments and text explaining some of the aspects of the presentation.But to be more environmentally friendly, he decided to save some paper, and print the tree in one line:He was later asked:""Which tree traversal algorithm did you use on the binary tree to get this output?""What was his reply?
","In-order
", , , , ,"Week 7b slides from Moodle_____________________________________________________P.S. He later realised that he should have kept the tree as it was...
",
"Insert the arrayinto a Self-BalancingBinary Search Tree. What is the output if you perform a Level-Order Traversal on the tree?
", ,"4,2,6,1,3,5,7,8
", , , ,"Using the definition of a BST (as given in 2019 W8a Slide 4 of the lecture slides), the tree has the following structure:Root: 4Level 1: 2,6Level 2: 1,3,5,7Level 3: 8So our output is 4,2,6,1,3,5,7,8.Performing the wrong traversal may give one of the other choices, as will incorrectly applying the definition of a BST.
",
"Which statement best describes what happens when you sort an array, arr, of length n during one pass of aShell (k-)Sort(assuming k<n)?
", , ,"1) Compare elements arr[0] and arr[k]2) Swap if arr[k] is smaller3) Compare arr[1] and arr[k+1]4) Swap if arr[k+1] is smaller and so on5) If we performed a swap before reaching the end of the array, repeat. Otherwise we're done.
", , ,"(c) is the only feasible sorting algorithm. Donald Shell invented Shell sort and shells have no correspondence with the workings of the algorithm - (a) and (b) are completely made up. (d) is somewhat similar to Stooge sort, (with 3=k) but again is made up. A google search will quite quickly allow you to deduce (e) is false.See the 2019 Week 5a .ppt file for the explanation of shell sort.
",
"Consider a closed hash table with linear probing and load factor L. For what lowest value of L does the expected number of steps to find an item exceed 2?
", , , , ," L 0.666...
","For a closed hash table, the expected number of steps is½(1+ 1/(1-L)).Solving½(1+ 1/(1-L)) 2 gives L 0.666...See Week10b slide 31 for further.
",
"Which of the following sorting algorithms is NOT stable?An algorithm is stable if it retains the order of equal elements.Ie: if x = y and x comes before y in the unsorted list, then x will come before y in the sorted list.
", ,"Quick Sort
", , , ,"There is a 50/50 chance that the order of two equal elements will swap order during quick sort. This depends on what pivot is chosen. In the rest of the algorithms, the order will be preserved
",
"What is the correct order of operations for a post-order traversal of a binary tree?
", , ,"1) process left node, 2) process right node, 3) process current node
", , ,,"dpah20 (dpah20)
"
"What is the maximum number of child nodes that a leaf node can have?
","0
", , , , ,,"wpjc20 (wpjc20)
"
"An algorithm has a runtime, for input size n, of T(n)=10000n4+0.075n2+0.091n+102500.What is the asymptotic time complexity of this algorithm?
", , , ,"?(n4)
", ,"From lectures 2019 week1a slides 14,15, we can define the asymptotic time complexity of this algorithm, and show it is?(n4).T(n)? O(n4): for b=1 and B= 10001. Eg for 1=n, T(n)=10001n4T(n)? ?(n4): for a=1 and A= 10000. Eg for 1=n, 10000n4 = T(n)Therefore T(n)? T(n4), and our answer is D.
",
"An algorithmhas time complexity. Using the Definition of Big-Oh as given in the 2019 Week 1a Lecture (slide 14), fix B = 5.Assuming, what is the lowest possible value ofb for which the definition holds?
", , , ,"
", ,"You need to solve for the roots of |T(N)| = | 5N2|. Then you need to find the range of values for which 5N3 outgrows T(N).You should obtain the roots in answers (a), (c), (d) and (e) (and a further 2 roots). Using the definition it is clear that we must pick b=10, as all other selections of b allows you to pick an n, (e.g n=9) where the definition does not hold.
",
"A phone network provider wishes to store the mobile numbers for their customers (a large amount of people). The application needs to be able to add and remove new mobile numbers quickly, for when a customer joins or leaves the provider, and the company wants to be able to determine quickly whether an individual with a specific name is a customer, and be able to retrieve their phone number. Which data structure would be MOST appropriate to store the phone numbers in memory?
", , ,"Open hashtable
", , ,"We know the answer must be either B or C, because for large data sets hashtables are the most efficient to store data (is in O(1) steps, rather than O(N or logN), lecture 2019 week10b slide3), and the best way to access specific unsorted data like these mobile numbers will be. It can be shown the open hashtable (answer C) is the most suitable, because it's runtime is quicker than a closed hastable (lecture 2019 week10b slide33), and due to each bucket being a linked list, it is really easy to delete a value compared to a closed hashtable- just removing it from the linked list (lecture 2019 week10b slide 26).
",
"Suppose that you are an employee in the sales department at a large car manufacturing company, (i.e. Honda). Your boss has tasked you with reducing the cost of transporting new cars to dealerships from the factory, in order to maximise profits.Below is a graph with the costs associated with delivering a single car to dealerships from other locations, our factory is at location A. Using Djikstra's Algorithm, calculate the cheapest costs to deliver to each dealership from our factory at A.
", , , ,"B = 7C = 9D = 20E = 20F = 11
", ,"D is the correct answer. Djikstra's Algorithm was covered in the lecture named shortest_path on Moodle.
",
"An array is provided with the following numbers: {16, 87, 54, 98, 61, 33, 74}. If a perfectly balanced binary search tree is constructed from this array, which number will be in the root node?
", ,"61
", , , ,"From lecture 2019 week7b slide 6. Using the numbers within the array, aperfectly balanced binary search tree will be created as below: 61 / \ 33 87 / \ / \16 54 74 98From this. it is clear the root node is 61 (answer B), because it is the value at the start(top) of the tree, and using this as the root node makes the tree balanced.
",
"For the list: 9,1,2,3,10,4,5,6,8Which of the algorithm will be the fastest when trying to sort the above defined list without minding about the memory.
", ,"Quick sort with pivot being chosen by the end of the list
", , , ,,"vib20 (vib20)
"
"Which of these functions has the lowest growth rate?
", , ,"log(n)
", , ,"2019 Lectures - Week2b - Lecture 4 - Complexity 2 - Slide 12. A list of functions with ascending growth rate is given.
",
"In what order are the vertices 'settled' whenDijkstra’s Algorithm is applied to the below graph to determine the lengths of the shortest paths from A to all other vertices?
", ,"A C F B D E
", , , ,"2019 Lectures - Lecture 18 - Graphs 2 - Slide 6 - Currently saved on Moodle as shortest_path.pdf. The starting vertex A is settled first with a length of 0. Lengths to B and C are noted as 10 and 2 respectively. A to C has the shortest length so C is settled next with a length of 2. Length of ACF is noted as 4. ACB is shorter than AB so length A to B is updated to 5. A to F is the next shortest length so F is settled with a length of 4. Length of ACFD is noted as 6. A to B is the next shortest length so B is settled with a length of 5. Length of ACBE is noted as 8. Length of A to D is the next shortest length so D is settled with a length of 6. Length of A to E is the next shortest length so E is settled with a length of 8.
",
"After executing the Dijkstra's algorithm on the following graph what is the shortest path from A to E?
", , ,"ACFE
", , ,,"vib20 (vib20)
"
"Which of the following BSTs is not a valid AVL Tree?
", , , ,"D
", ,"2019 Lecture Slides - Week 8a - Trees 2 - Slide 30 - An AVL tree is a BST in which the heights of the left and right sub-trees of each node differ at most by 1. The root node in tree D has a left sub-tree of height 2 and a right sub-tree of height 0 so the difference is 2.
",
"The picture below shows a balanced AVL Tree.If I were to insert 10 (or '0010') into the tree. What will the balanced AVL Tree look like after?
", ,"
", , , ,"W8(b) Trees3 is the lecture where AVL Trees were covered.Below is a pic of the tree with weightings:Now when we insert 10 (or '0010') it is a child of '0009', which means that the node at '0006' becomes unbalanced and hence rotates. This means that '0007' becomes a child of '0006', and '0008' becomes the child of the root '0004'. After this rotation, the tree is balanced and hence there is no more rotations, leaving the AVL Tree as:This leaves us with B being the correct answer. (https://www.cs.usfca.edu/~galles/visualization/AVLtree.html could be useful to visualise this)
",
"Which one of the following sorting algorithms, is a non-comparison sorting algorithm?
","Counting Sort
", , , , ,"W7(a) slide 8/16 states that Counting Sort is a non-comparison sorting algorithm. The other 4 mentioned all make use of comparisons in their sorting algorithms.
",
"Which one of the following hash functions is the current reccomendation?
", , ,"SHA-3
", , ,"SHA-3 (also known as Keccak), is the current reccomendation. SHA-2/SHA-224 has also not yet been cracked yet, but is considered to be less secure (easier to crack).W11(a)post slide 17/21
",
"Which of the following sorting algorithms, uses h-sorting as part of its alogorithm?
", , , ,"Shell Sort
", ,"W5(a) Powerpoint on Shell Sort. Slides 4-6 explain how h-sorting works.
",
"What is the time complexity of Tree traversal Methods in a binary tree?i.e. Pre-Order, Post-Order etc
", , ,"(n)
", , ,"W7(b) Trees1 slide 29
",
"Which one of the following sorting algorithms, is not a stable sorting algorithm?
","Heap Sort
", , , , ,,"stb37 (stb37)
"
"Consider this question on cryptography: To ensure Eve doesn't replace Alice's public key with her own, what can Alice do?
", , , ,"Have her public key signed by a Certificate Authority
", ,"Lecture 20 - Cryptography, slide 12.
",
"What is the RSA encryption system based on?
", , ,"The presumed difficulty offactoring large integers
", , ,"A) This is actually the basis of the ElGamal encryption systemB) Not a basis for an encryption system (that I am aware of)C) RSAD) Sorry for the use of 'presumed', integrating trig functions is difficult, but not a basis of an encryption systemE) Apples are expensive these days :(
",
"Running a 7-sort (Shellsorting) followed by a 4-sort and then a 2-sort on the following array [10,5,7,11,15,3,4,9] will give which of the following arrays.
", , , ,"[4,3,7,5,9,10,15,11]
", ,"7-sort: [9,5,7,11,15,3,4,10]4-sort: [9,3,4,10,15,5,7,11]2-sort: [4,3,9,5,7,10,15,11]2-sort second pass: [4,3,7,5,9,10,15,11]For more details see lecture Sorting 2 (Shell sort)
",
"When is quick sort (ascending) not of O(nlogn) complexity?
", , , ,"When the data is entered in descending order
", ,"A) The speed of the computer will not effect complexity, only total time run. It still has the same number of elementary operations.B) Should not effect time complexityC) When the data is in a random order then that is the best time that it will run with O(nlogn)D) If the data is sorted into descending order we will have O(n2) complexity, much like bubble sortE) The day of the week does not affect time complexity (I hope.)
",
"Using the formula we were taught in lectures, what is the average number of steps it will take to find an element in this closed hash table using linear probing? And, how many steps will it take to find '4' if we use this hashing algorithm?Hash Table:[ , , , ,12,1,4,7]Hashing Algorithm:(x2-4) % 8(Hint: Hash table has 8 total buckets)
", , , ,"Average number of steps: 1.5Number of steps to find '4': 3
", ,"L = 4/8 = 1/2This is a closed hash table so to calculate the average number of steps we use: 0.5(1+1/(1-L))This gives us 3/2.Inserting 4 into the hashing algorithm we get 42-4 % 8 = 4So we look at bucket 4 in the hash table which is occupied by 12, so we go to the next one, which contains 1, and so we go to the next one which contains 4. That was 3 steps.
",
"Which of the following sorting algorithms is unstable?
", , , , ," Shell Sort
","Lecture 12 - Sorting 3 - Slide 19. I made attic and crumble sort up
",
"Which of the following are reasons why different data structures or algorithms might be used for different problems?
", , , , ," All of the above
","The time complexity is usually the first thing we look at. A better time complexity means that on average, with a large data set, the algorithm will run faster.Sometimes we are only dealing with a very small amount of data, in which case an algorithm with a bad time complexity (e.g. quadratic) might be quicker if the constant is lower.Sometimes the data we are using is sorted or organised in a way that means an algorithm may never run on the worst case scenario, or may generally run faster than the average/amortised time.
",
"what is O(n) of the following function,for(int i = 0; i <= n; i++){ for(int j = 0; j <= n; j++){ j++; }}
", ,"n*log2(n^2)
", , , ,,"ji307 (ji307 - permission to this course revoked)
"
"Which of the following statements about AVL trees is NOT true?
", , ,"For any node, all nodes in its right sub-treemust be strictly greater than the node’s value.
", , ,"For any node, all nodes in its right sub-treemust be greater than (OR equal to) the node’s value.
",
"Which one is used to represent the average complexity of an algorithm?
","?(…)
", , , , ,,"achau26 (astc20 - permission to this course revoked)
"
"According to thethe following source code file StringRepeater.java:There are four statements about this code:(1). Theformula for the elementary operationsin this code is T(n)= 4+4n.(2). For big n, the complexity class of this code is O(n^2).(3).To measure the runtime of this code, we can test this code in 500 times or more, and average the running time to get a fairly precise runtime.(4).Changing the type of the input and output as StringBuffer, and change the loop code ""result.append(s)"" can reduce the runtime of the code.Which of the following statements are true?
", , , ,"(2)(3)(4)
", ,"Based on the PS1, question 2,3:(1). Not True, the operation ""result + s"" in the code has a special runtime (not just 1 elementary operation, since the type is string)(2).True, by the measurement of this test, we can observe the runtime hasa quadratic growing trend.(3). True, by lecture 4, averaging the measurements canquantify accuracy.(4). True, as PS1 test, this is better than the previous code.
",
"Two or more pieces of code running simultaneously are known as what?
", , , ,"Threads
", ,"Threads are 2 or more pieces of code running simultaneously, processes are two or more programs running at the same time.
",
"Suppose you have the following hash table, implemented using linear probing, and that the hash function we are using is the function, h(x) = x mod 9.0 1 2 3 4 5 6 7 8 [hash ids]9 18 12 3 14 4 21 [elements entered]Which of the following are orders in which the elements could have been added to the table:(i) 9, 14, 4, 18, 12, 3, 21(ii) 12, 3, 14, 18, 4, 9, 21(iii) 12, 14, 3, 9, 4, 18, 21(iv) 9, 12, 14, 3, 4, 21, 18(v) 12, 9, 18, 3, 14, 21, 4 ?
", ,"(iii) and (iv)
", , , ,"In (i), 4 would be inserted at index 4 instead of 6.In (ii), 18 would be inserted at index 0 instead of 1.In (v), 21 would be inserted at index 6 instead of 7.
",
"An implementation of the selection sort algorithm takes 2 seconds to sort 10^5 random Integers. How long will the same algorithm likely take to sort 10^6 random integers?
", , , ,"200 seconds
", ,"Selection sort isT(n^2). Then, (n)^2=k*2 where k is a constant of proportionality. In this case k=1/2*(10^5)^2 and so (10^6)^2=k*ans, ans = 2*((10^6)^2)/((10^5)^2)=2*100=200
",
"Which of the following is the most efficient unstable sorting algorithm based on time complexity?
", , ,"Heap sort
", , ,"Selection sort - unstable but theta(n^2)Merge sort - can be theta(n) but it is stableHeap sort - theta(n*log(n)) and unstableinsertion - stablebubble - stable
","tc702 (tc702 - permission to this course revoked)
"
"Which of the following is the most efficient unstable sorting algorithm based on time complexity?
", , ,"Heap sort
", , ,"Selection sort - unstable but theta(n^2)Merge sort - can be theta(n) but it is stableHeap sort - theta(n*log(n)) and unstableinsertion - stablebubble - stable
","tc702 (tc702 - permission to this course revoked)
"
"Which one of these is one of Carey's rules of sorting
", ,"Don't choose a sorting algorithm until you understand the requirements of the problem.
", , , ,,"tc702 (tc702 - permission to this course revoked)
"
"How do you calculate the load factor for a Hash Table
", ,"Load = max.no of buckets required / total buckets in array
", , , ,,"tc702 (tc702 - permission to this course revoked)
"
"Which of the following is in-order binary tree traversal?
", ,"Process nodes in left subtree.Process current node.Process nodes in right subtree.
", , , ,,"db839 (db839 - permission to this course revoked)
"
"Which of the following is not a property of the Upper Bound O(n)?
", , , ,"If f1(n) = O(g(n)) and f2(n) = O(g(n)), then f1(n)f2(n)=O(g(n))
", ,"The answer is D. Consider the functions f1(n)==f2(n). Both f1(n)=O() andf2(n)=O(), however, f1(n)f2(n)==/=O().
",
"What is a stable sorting algorithm?
", , ,"A sorting algorithm that keeps equal valued items in the same order as before sorting.
", , ,,"db839 (db839 - permission to this course revoked)
"
"When are O(Big-Oh), ?(Big-Theta), and O(Big-Omega), meant to be used for estimating complexity/run times/instructions required?
","O - To over-estimate and identify the upper-bound, aka Worst case.? - Wherever possible, as it states the exact complexity.O - To under-estimate and identify the lower-bound, aka Best case.
", , , , ,"From lecture 4:When do I use them??(…) whenever you can: “the complexity is exactly of the order n2”O(…) for over-estimating: “it can’t be more than n3”O(…) for under-estimating: ”it must be at least n”
",
"For a heap in an array if the data for a non-root node is in array[i], where is its parent?
", ,"array[(i-1)/2]
", , , ,,"jr934 (jr934)
"
"Which of the following is NOT true for an open hash table:
", ,"Increasing the load factor does not affect the average number of steps needed to insert/find an item.
", , , ,"Although the increase is small in an open hash table, an increase in load factor still increases the average number of steps needed.
",
"Which of these is the definition of the lower bound?
", ,"g(n) = O(f(n)) (""g(n) is Big- Omega of f(n)"") iff there are constants c>0 and n0>0 so that for all n>n0 : g(n) = c f(n)
", , , ,,"rlw44 (rlw44 - permission to this course revoked)
"
"Which are the following statements are true?
", , , , ," None of the above
","They're true if switched around, see lecture notes 7
",
"There is a closed hash table with 120 slots, the number of elements stored in this hash table currently is 90.What is the average number of steps needed to find an element?
", ,"2.5
", , , ,"Average # of steps = ½(1+ 1/(1-L)) where L is load factor.L = Keys/slotsL = 90/120L = 0.75so ½(1+ 1/(1-.75))½(1+ 1/(.25))½(1+ 4)½(5)Average # of steps = 2.5
",
"What is the worstcase complexity for the ""inTree"" method for a binary AVL tree with height of m layers?
","m
", , , , ,"for m layers complexity is m, forn nodes complexity is log2(n)
",
"Which sorting algorithm would result in the following steps while sorting [2,9,7,4] ?[2,9,7,4] ?[2,9,7,4][2,9,7,4] ?[2,9,4,7][2,9,4,7] ?[2,4,7,9]
", ,"Insertion Sort
", , , ,,"wp311 (wp311 - permission to this course revoked)
"
"Which of these IS a valid AVL Tree?
", , , ,"10 / \ 7 14 / \ \ 5 9 18
", ,"a) is not a BST because of 9.b) node 8 & 12 are unbalanced.c) node 8 is unbalanced.
",
"Which of the following statements about linear data structures is FALSE?
", ,"It is always faster to find an element in a skip list that a linked list.
", , , ,"A. You can add a reference to the tail for adding to the end. - TRUEB. A skip list is probabilistic so not necessarily - FALSEC. An array is very fast for accessing data and is easy to implement. It works well when the amount of data is always the same.D. See lecture 7
",
"What is the adjacency matrix for this directed graph?
","
", , , , ,"The answer is A because an adjacency matrix for a directed graph shows if there is an edge from vertex I to vertex J (where vertex I is represented by the rows in the table and vertex J is represented by the columns in the table). In this example, if there is an edge then the cell contains a 1. Otherwise there is a 0 at that position in the table.The answer is not D because D is the adjacency matrix for the undirected version of this graph.
",
"What is the definition of a stable sorting algorithm?
", , ,"Stable sorting algorithms maintain the relative order of records with equal keys.
", , ,,"ubza20 (ubza20)
"
"Given that selection sort has a time complexity of O(n^2) for an unsorted set of data, what is the time complexity of selection sort for a sorted set of data?
","O(n^2)
", , , , ,"O(n^2) as selection sort's time complexity is independent of how the data is sorted
",
"What is the worst case complexity of quick sort and in what scenario will this occur?
", ,"O(n^2) the pivot is repeatedly chosen as the smallest element of the list.
", , , ,"The complexity of the worstcase is O(n^2) ruling out A, C and E.The average case when the pivot is chosen randomly should give complexity of O(nlogn)The worst case is when the pivot gives one sublist of (n-1) elements and the other sublist with 1 element. This occurs when either the smallest element is chosen repeatedly or the largest element is chosen repeatedly.See lecture: Sorting3orhttps://en.wikipedia.org/wiki/Quicksort#Worst-case_analysis
",
"What is Quicksort's best case performance?
", , ,"O(n log n)
", , ,,"adam (ap2280 - permission to this course revoked)
"
"What is the order for traversal of a binary tree with n elements?
", ,"
", , , ,"When traversing the tree we only need to visit each node once.
",
"What is the wprst case run time complexity of merge sort?
","nlogn
", , , , ,"It is nlogn
",
"Which of the following statements are true?:
", , , ,"A and B
", ,"Quick sort is unstable, as sorting with quicksort re-orders items without taking into account their initial ordering.Quick sort's best and case preformance is O(n log n).Quick sort's worst case preformance is O(n2). However this only occurs when the array is already sorted in same, or reverse, order, or when all elements are same.
",
"""In this type of search, a sequential search checks each element of a list, one by one, until a match is found or the whole list has been searched""Describes which searching algorithm?
", , , ,"Linear Search
", ,"This describes linear search, as each element in the list is checked sequentially until a match is found.
",
"Given n = 4, what is the final value of k in the below algorithm.int k = 0;for (int i=0; i<n; i++){ for (int j=n; j>0; j=j/2){ k++; }}
","k = 12
", , , , ,"j = 4 then 2 then 1 then 0 (won't run at 0), so we have k++ * 3, outer loop will run 4 times. So, k = 3*4=12
",
"Which of these would be an appropriate hashing algorithm for the following list of names:Harry, Morgana, Ron, Gandalf, Derren, Alastair, Merlin, Hermione, Mordred
", , ,"Use the numerical value in the alphabet of the first letter of each name, and store it in the corresponding position in the hash table.
", , ,,"skybeak (cb2027 - permission to this course revoked)
"
"Given n = 5, what will be the final value of k in the algorithm below & what is it's run time complexity, which we'll call O?int k = 0;for (int i=0; i<n; i++){ for (int j=i; j<n; j++){ k = k++; }}
", , ,"k = 15, O = n^2
", , ,"i = 0, k++ * 5. i = 1, K++ * 4. ... i = 4, k++ * 1. k = 5+4+3+2+1 = 15.Nested loops implies complexity of n^2.Please correct me if you believe I am wrong.
",
"Which of the following is NOT the difference between a Graph and a Binary Tree?
", , ,"In Binary Trees, some children can have multiple parentsin Graphs, you cannot have loops or circuits
", , ,,"ubza20 (ubza20)
"
"Which of the following answers describes the correct process of collision handling in a closed hash table with linear probing?
", , ,"When collision: Move across hash table until open slot is found If reach end of hash table: Loop back to the beginning If no open slot: Return that hash table is full
", , ,"Answer C: correctin the case of a collision in table [1,2,-,3,4,5] (where ' - ' represents an open slot)let's say we're inserting something with hash value 2: it will detect that there is already something in that hash slot, and move across to the next slot, which in this case is openlet's say now we're inserting something with hash value 3: it will detect that there is already something in that hash slot, move across to the next slots, which are full until it hits the end of the table (5) and then loop back to the beginning (1) and move across again until it hits where the collision occured again (indicating table is full) and return that the table is full and that the item cant be inserted.Answer A: noAnswer B: the moving across is done towards the end of the table not the beginningAnswer D: look at AAnswer E: missing the looping back
",
"Which of these is the correct definition of a stable sorting algorithm?
", ,"A sorting algorithm that takes into account the initial order of a list and maintains the order of equal-valued elements.
", , , ,,"skybeak (cb2027 - permission to this course revoked)
"
"What is the complexity of the following code?int f( int n, int m) { int count = 0; for (int i = n; i > 0; i--) { for (int j = 0; j < m; j = j + 2) { count++; } } return count;}
", , ,"?(n*m)
", , ,"This function contains a nested loop where the operation in the inner loop runs approximately m/2 times giving us ?(m) for each iteration.This is iterated n times and so the complexity of the function as a whole is ?(n*m)
",
"Which sorting algorithm would have the following intermediate steps while sorting ?
","Selection Sort
", , , , ,,"hpa22 (hpa22 - permission to this course revoked)
"
"Which of these formulas will provide theload factor of a hash table?
", , , ,"
", ,"As shown in lecture 9, the formula produces the load factor of a hash table.
",
"What technique can avoid collision?
", , , , ," All of the above
","A random hash function random may not be the best choice but it does help avoid collisions along with uniform hashing (giving every element equal chance to hash into any of the slots available in the array) as well as linear probing and using an open Hash Table
",
"What are the two common types of graph traversal?
", ,"Depth-first and breadth-first
", , , ,,"dm893 (dm893 - permission to this course revoked)
"
"Which of these sorting algorithms has theworst space efficiency?
", ,"Mergesort
", , , ,"Quicksort has O(log n) space complexity. All of the others have O(1) complexity, with the exception of mergesort, which has a complexity of O(n).
",
"What are the complexity of linear search algorithm, binary search algorithm and merge sort algorithm respectively?
","O(n), O(logn), O(nlogn)
", , , , ,,"novae (yl2893 - permission to this course revoked)
"
"What is transitivity? In terms of time complexity.
", , ,"If f(n) = O(g(n)) & g(n) = O(h(n)) then f(n) = O(h(n))
", , ,"Lecture 4 - Complexity 2, slide 7.
",
"Which of these statements istrue? An adjacency matrix is...
", , , , ," None of the above
","A - False: It can be used to represent undirected graphs by making both arr[x][y] and arr[y][x] equal.B - False: This is only the case when representing undirected graphs.C - False: See lecture 17 for details.
",
"In which order will mergesort perform the WORST?
", , , , ," None of the above.
","Mergesort efficiency is not changed by ordering of the data.
",
"Depth First Search is equivalent to which of the traversal in the Binary Trees?
", ,"Pre-order Traversal
", , , ,"Depth First Search explores all the nodes aggressively to one path and then backtrack to the node. This is equivalent to the pre-order traversal of a Binary Tree.
",
"What is the average runtime complexity of an Array list's add operation? (if resize doubles array size)
","1
", , , , ,"Over many adds() only about as many copys() as adds() writes
",
"Which of the following is NOT an advantage of using open hash table over closed hash table.
", , ,"Open hash table uses less memory.
", , ,"Closed hash table uses less memory since its a fixed size.
",
"Which binary search tree is correct in the figure?
", ,"B
", , , ,,"novae (yl2893 - permission to this course revoked)
"
"What is the tree equivalent of a linked-list 'head' pointer?
", , , ,"A root node.
", ,"Since a tree is a linked list based data structure it carries over some similarities. However, in a linked list we have the head pointer but in a tree we have a root pointer.Both these pointers point to the first node of each data structure.
",
"What operation has the lowest average runtime complexity in a singly linked list.
", ,"add(o)
", , , ,"add(o) has constant runtime complexity O(1), while others have linear O(n).
",
"The following code is for an insertion sort. Select from the options below, the line of code which should replace Xpublic static void insertionSort(int[] array) { int[] a = array; int n = a.length; for (int i=1; i<n; ++i){ int key = a[i]; int j = i-1; while (j>=0 && a[j].compareTo(key) > 0){ a[j+1] = a[j]; j = j-1; } X }}
", , ,"a[j+1] = key;
", , ,"After you have compared all the elements to the key and moved them around, you must then re add the key to your array.
",
"Which one correctly describes the complexity of the following code fragment?for (int i = 1; i < n; i = i * 2){ for(int j = n; j > 0; j--) { System.out.print(""hello world""); }}for (double i = n; i > 1; i = i / 2){ System.out.print(""goodbye world"");}
", , ,"
", , ,"When for loops are nested as in the first two we multiply the complexities. As the first one doubles each time it has log n order. The second one works from n to 1 linearly so that gives n. Thus we have n log n. The final for loop has log n complexity but we take the worst case so that gives O(n log n).
",
"A post order traversal of the tree; [a] / \ [b] [c]
", , ,"b c a
", , ,"Post order traversal prints the node after printing the left and right subtrees, hence post order
",
"Which of the following statements about doubly-linked lists is true?
", , , ,"The previous pointer for the ""head"" node and the next pointer for the ""tail"" node have the same value.
", ,"The values of the previous pointer for the ""head"" node and the next pointer for the ""tail"" node are both NULL, and thus equal.
",
"Which of the following are NOT advantages of using a Heap data-structure in Java?
", , ,"Heap comparisons are very fast
", , ,,"ab2339 (ab2339 - permission to this course revoked)
"
"Which of the following statements about array lists and arrays in java are false1.Array lists can be resized whereas arrays can't.2.Array lists can have gaps in the list whereas a standard array cannot.3. A linear search in an array list is slower than in an array (where both have the same elements).4. An array can be of a primitive data type whereas an array list can be of a primitive or non-primitive data type.5. Array lists are always single dimensional however arrays can also be multi-dimensional.
", , ,"2 and 4
", , ,"1. True: an array is a set space in memory so it cannot be resized, however an array list uses pointers to the next value so can be resized by re-directing the pointers.2. False: array lists can have gaps in memory (so not a linear block of memory) but not in the list as each element must have a pointer to the next element.3. True: in an array the value is checked then the next value in memory is looked at, however in a linked list the pointer for the next value must also be looked at each time.4 False: an array list cannot be of a primitive data types such as int or char. Wrapper classes must be used.5. True: An can be both whereas array lists are only ever single dimensional (Note: a common work around of this is to make an array list of lists).
",
"Why, in general, is Radix sort less popular than Quicksort for integer sorting?
", , ,"Quicksort is more flexible (thus a preference for most situations), Radix sort requires more memory.
", , ,,"jjb72 (jjb72 - permission to this course revoked)
"
"What is the correct formula for the load factor of a hash table?
", , ,"L = max number of keys to insert / total buckets in the array
", , ,"The “load” of a hash table is the maximum number of values (“keys”) you intend to add divided by numberof buckets in the array.A load of L=.3 means your array has 30X more buckets than you need (you’ll only fill 30% of the buckets).
",
"Which of the following sorting algorithms has the best/ quickest WORST CASE time complexity?
", , , ,"Merge Sort
", ,"Quick sort - O(n^2)Bubble sort -O(n^2)Insertion sort - O(n^2)Merge Sort - O(n log(n))Selection Sort-O(n^2)This is because Merge Sort is a divide and conquer approach. It has a set number of steps for n which always gives O(n log(n)) for best, average and worst case. Although Quick Sort is also a divide and conquer approach, it's worst case time complexity is O(n^2) like the rest.
",
"Which of the following sorting algorithms is stable?
", , ,"Insertion Sort
", , ,"Insertion sort is stable - it takes into account the initial order of the objects to be sorted.
",
"Which of the following statements about basic trees is false?
", ,"The top node of a tree is called the ""leaf"" node.
", , , ,"The top node of a tree is called a ""root"" node - a ""leaf"" node refers to a node with 0 children.
",
"I am tasked with programming a sorting algorithm with large data-sets on a powerful computer. This is an important part of my company's time-critical, safety application. I'm told that completing the sorting very quickly- in all possible cases - is the biggest priority. What's the appropriate choice of algorithm?
", ,"Merge Sort
", , , ,"Merge Sort has O(nlogn)worst case scenario run time, it's only drawback is space inefficiency, which isi not a factor in this case.While Quick Sort - if well implemented - is normally superior, it's worst case is polynomial runtime -O(n^2) -which is undesirable in a time-critical task given large data sets.It is well known thatHeap Sortis usually outperformed in real world/ industry, with its advantage lying in its superior memory efficiency.
",
"In this question we'll consider the Abstract Data Type: Heaps.If the data for a node in a heap is stored in position i in an array, what positions will its children be stored in?
", ,"Left Child: Right Child:
", , , ,"Let's consider the example i = 0. Its children are in position 1 & 2 & we can deduce that 2i+1 = 2(0)+1 = 1 & 2i+2 = 2(0)+2 = 2. This doesn't rule out option C so we'll also consider the example i = 3. Its children are in position 7 & 8 & deduce that2i+1 = 2(3)+1 = 7 & 2i+2 = 2(3)+2 = 8. Therefore the answer is B. Refer to lecture 16 - Trees 4 if you are still unsure of the reasoning.
",
"Sort the algorithm complexities from fastest to slowest when n = 100.1. 1502. 50n3. 5n^24. log(3000n)5. 6nlog(400n)
","4, 1, 5, 2, 3
", , , , ,"1. 1502. 50(100) = 50003. 5(100)^2 = 500004. log(3000(100)) = 5.477...5. 6(100)log(400(600)) = 2761.2...
",
"What is the average runtime complexity of a binary tree search?
", , ,"O(log n)
", , ,"Lecture 2 in the notes.
",
"Consider functions g(n) and f(n) with g(n) >0 and f(n) >0 for n>0.Which of the following is the correct definition for the exact bound?
", , ,"g(n) = ?(f(n)) (""g(n) is Big-Theta of f(n)"")iff there are two positive constants c1 and c2 and a n0>0 so that for all n>n0: g(n) = c1f(n) and g(n) = c2f(n)
", , ,"These definitions are provided in lecture 4.
",
"Which of the following statement is true?
", , , , ," None of the above.
","A. (Lecture 14/16) This is the definition of“perfectly balanced”. Thecomplete binary tree is not only that the top N-1 levels of the tree are completely filled with nodes, but also itsnodes on the bottom-most level must be as far left as possible.B.(Lecture 16)The value contained by a node (expect the top node) is ALWAYS <= the values of the node’s parents.C.(Lecture 16) (https://www.youtube.com/watch?v=ZZuD6iUe3Pc) This is best case of the insertion sort, which is O(n), compared with theO(n log(n)) in the heapsort algorithm.D. (Lecture 16)Wasting a lot of time on the inserting node (O(n log(n)), not efficiently), we canconvert the array into a maxheap by O(n).
",
"You plan to store data in a closed hash table with linear probing to the right. The hash function you are using is h(x) = x % 7, meaning there are 7 slots in your hash table; 0,1,2,3,4,5,6. Inserting the elements 22, 8, 5, 26, 4, 13, 9 in that order, what would be the end result?
", , ,"13, 22, 8, 9, 4, 5, 26
", , ,"22mod7=1 so goes in slot 1, 8mod7=1, since slot 1 is occupied, it goes in the next free slot to the right, slot 2. 5 goes in slot 5, 26mod7=5 so goes in slot 6 as is next available, 4 goes in slot 4, 13mod7=6. Since slot 6 is occupied, we wrap around back to slot 0, and finally 9mod7=2, but since there is only one remaining space, 9 ends up in slot 3, giving us13, 22, 8, 9, 4, 5, 26.
",
"Which of these algorithms have the fastest best case?(assume all elements are distinct)
", , , ,"Insertion sort
", ,"Heap sort is O(nlogn) (if not all keys are distinct then it can be O(n))Mergesort is O(nlogn)Selection sort is O(n^2)Insertion sort is O(n)Shell sort is O(nlogn)
",
"What does Amortised mean?
", , ,"Average Case
", , ,,"cardak (kc662 - permission to this course revoked)
"
"What is the best a comparison sort algorithm can perform in the average or worst case?
", , , ,"O(nlogn)
", ,"WLOG WMA that a given permutation has n distinct elements (as this is worst case scenario). There are therefore exactly n! permutations.Now suppose a sorting algorithm always finishes sorting n elements in S(n) steps. As a sorting algorithm can only work out the order of the elements it is sorting by comparisons and as comparisons can only have one of two outcomes, it can't distinguish most than 2^(S(n)) cases.This means 2^(S(n)) >= n! => S(n) >= log(n!) => S(n) >= (n/2)* log(n) => S(n) = O(nlogn)
",
"Which of the following was advice given in a lecture?
","When it comes to time complexity, if n is small you shouldn't worry about complexity and just pick the easiest algorithm to program.
", , , , ,,"cardak (kc662 - permission to this course revoked)
"
"Which type of tree transversal will first process the nodes in the left subtree, then the right subtree and finally the current node?
", ,"Post-order
", , , ,"Pre-order is node->left->right.In-order is left->node->right.Level-order is top node->next level nodes->next level nodes->etc.Dis-order is just bad.
",
"Consider the following statements about lists and choose the statement that is FALSE.
", , ,"For a Linked list the average case to access an element is?(i)
", , ,"For a Linked list the average case to access i is ?(n)
",
"Consider an algorithm that takes 8s for n=50, 14s for n=100 and 20s for n=200. What asymptotic complexity does it likely have.
", ,"?(log n)
", , , ,,"steemboat (dh658 - permission to this course revoked)
"
"Becky has a set of names stored in a reverse alphabetical list {""Zach"", ""Tom"", ""Isaac"", ""Freya "",""Becky"", ""Anna"", ""Adam""}. Which search algorithm should she implement if searching for the word ""Zach""?
", ,"linear search
", , , ,,"rm2074 (rm2074 - permission to this course revoked)
"
"Which of the following is the most efficient time complexity, for a large number of items?
", , , ,"O(1)
", ,"A constant time complexity is most efficient, as it stays the same no matter the number of items, so as the number of items increases, this number will always be overtaken by an algorithm of higher complexity.
",
"Which of the three following data structures have the shortest average run time for finding an ith element.
", ,"hash table
", , , ,,"ji307 (ji307 - permission to this course revoked)
"
"You are going to add an array of numbers to an empty binary tree. It is worse in terms of search time if the input array is:
", ,"Already sorted
", , , ,,"bgj22 (bgj22 - permission to this course revoked)
"
"What is the average search time for a binary search tree?
", , ,"?(log n)
", , ,,"nlc29 (nlc29 - permission to this course revoked)
"
"Which of these functions is the upper bound function?
","O(f(n))
", , , , ,,"nlc29 (nlc29 - permission to this course revoked)
"
"Which of the following statements about hash tables are false?
", , ,"None of the above
", , ,,"nlc29 (nlc29 - permission to this course revoked)
"
"___0 |10 |1 | 8 |2 | 11|3 | 7 |4 | 4 |5 | 9 |6 | 5 |Given the heap array above, what isleft Child of 11 (element at index 2) ?parent of 4 (element at index 4) ?last element in heap?
","left Child of 11 = 9 (index 5)parent of 4 = 8 (index 1)last element in heap = 5(index 6)
", , , , ,,"iid21 (iid21 - permission to this course revoked)
"
"Given an algorithm with a time complexity of the format a^(b*n) where a and b are constants, how long would it take to run the algorithm when n = 15?Use the information below to find a and b and hence answer the question. n time 3 3s 6 9s18 729s
", ,"243 seconds
", , , ,"a = 3 and b = 1/3 so 3^(15/3) = 243
",
"You are given a list of names that is initially sorted in alphabetical order by their first names. However you now want to change it to be sorted by their last names, and if they are the same then order them by their first names as initially sorted. To achieve this in the quickest way in general, which of the sorting algorithms would be best to use?
", ,"Merge sort
", , , ,"To sort the list in this way, you would need to implement a stable sort algorithm to take into consideration the initial ordering. This means that we may rule out Heap, Shell and Quick sort, as all of these are unstable algorithms for sorting.Now because we want to do this in as fast a way as possible, we want to consider the general runtime of Insertion and Merge. The insertion sort algorithm is O(n^2) in the general case, and the Merge sort algorithm is O(nlogn) in the general case, hence the best algorithm to use in this case is would be Merge.
",
"Which of the following sorting algorithms are STABLE
", ,"Insertion Sort
", , , ,"A stable algorithm is onewhich doesn't change the relative position of same/equal elements.Insertion sort is stable because it maintains the relative order of elements as they occur in the input unlike all the other sorting algorithms above.
",
"What are the definitions of the ""root"" of a tree, the ""child"" of a node and a ""leaf"" node?
", , ,"Root: The top node of the treeChild: Any node pointed to by the current nodeLeaf: A node with 0 children
", , ,"C - see lecture notes: Lecture 13 - Trees 1
",
"Which array can use binary search to find a data?
", , , ,"A and B
", ,"To use binary search algorithm, a list of data must be sorted into descending or ascending numeric or alphabetic order
",
"What is theCounting Elementary Operations T(n) of the following code?public int totalSum(int[ ] a) { int sum = 0; for (int i=0; i<a.length; i++) { sum=sum + a[i]; } return sum}(a.length = n)T(n)=? ops
", , , ,"4n+4 ops
", ,"int sum = 0 (Variable assignment:1 op)int i = 0 (Variable assignment:1 op)i<a.length (Comparison: 1 op times a.length+1 = n+1 ops)i++ (Addition: 1 op times a.length = n ops)sum = (Variable assignment: 1 times a.length = n ops)sum + a[i] (Addition: 1 times a.length = n ops)return sum (Returning a value: 1 op)T(n) = 1 + 1+ n+1 + n + n + n + 1 = 4n + 4 ops
",
"The code below can be used to carry out which type of sorting algorithm?void algorithmName(int a[], int n){ for (int i = 0; i < n; i++) { int minIndex = i; for (int j = i+1; j < n; j++) { if (a[j] < a[minIndex]) minIndex = j; } swap(a, i, minIndex); }}
", ,"Selection Sort
", , , ,"This code is provided in lecture 10.
",
"What is ?
", ,"The lower bound time complexity
", , , ,,"hmg33 (hmg33 - permission to this course revoked)
"
"Misha has an open Hashtable containing 4 buckets. He hashes a word by:Hashcode = Length of word + index in alphabet of the first letterFor example, ""animal"" = 6 + 1 = 7Or ""boat"" = 4 + 2 = 6The bucket is determined by hashcode % the number of buckets.E.g. ""animal"" would be placed in the bucket with index 3If Misha adds the words:""i"", ""play"", ""pokemon go"", ""everyday""What words are in each of the buckets in the hash table?
","0. ""play""1. ""pokemon go"", ""everyday""2. ""i""3. -
", , , , ,"The hash of 'i' = 10 => bucket index 2The hash of 'play' = 20 => bucket index 0The hash of 'pokemongo' = 25 => bucket index 1The hash of 'everyday' = 13 => bucket index 1
",
"Which of these complexities is the fastest?
", ,"?(n^1/2)
", , , ,,"wafflelily (gap29 - permission to this course revoked)
"
"Which of these searches is the fastest (assuming the list it's searching is presorted and uniformly distributed)?
", , ,"Interpolation Search
", , ,"Time Complexities (in descending order):1st - Interpolation at O(log(log(n)))Joint 2nd - Exponential and Binary at O(log(n))3rd - Jump at O()4th - Linear at O(n)Thus, Interpolation Search is the fastest.
",
"State from the following list of sorts, all the sorts which are stable.- Selection- Insertion- Bubble- Merge- Heap
", ,"Insertion, Bubble, Merge
", , , ,"Insertion, Bubble and Merge Sort are all stable, whereas Selection and Heap Sort are not.
",
"What is the time complexity of the code below?:int 2bAlgo(int n) { Random random = new Random(); int total = 0; int[] b = new int[n]; for(int i = 0; i < n; i++) { b[i] = random.nextInt(n); } int j = 0; for(int i = 0; i < 200; i++) { j = n; while(j > 0) { total += j; j = j / 2; } } return total + b[j];}
","O(n)
", , , , ,"The first loop is O(n), but the second loop consists of a fixed number of iterations, so no matter the complexity of the inner loop, O(n) > O(1) so is O(n).The use of random numbers is considered as constant time
",
"When implementing radix sort, which of the following algorithms would be best to use?
", ,"Insertion sort
", , , ,"Radix sort requires a stable sorting algorithm to work.For example the array [10, 13, 05] would become [05, 13, 10] after comparing the first digit using selection sort
","rl836 (rl836 - permission to this course revoked)
"
"When implementing radix sort, which of the following algorithms would be best to use?
", ,"Insertion sort
", , , ,"Radix sort requires a stable sorting algorithm to work.For example the array [10, 13, 05] would become [05, 13, 10] after comparing the first digit using selection sort
","rl836 (rl836 - permission to this course revoked)
"
"What is the time complexity of this function?public void func(int n){for (int i=1;i<n;i++) {System.out.println(n);}for (int k=1;k<n;k++) {System.out.println(n);}}
", ,"O(n)
", , , ,"Complexity notes from the lectures.
",
"If the load factor of a closed hash table is 0.7, which of the following is false?
", , ,"In the worst case it takes < 3 steps to find a bucket via linear probing.
", , ,"For load factor L, in the worst cast linear probing takes 1/(1-L) steps.Here for L = 0.7 this value is 10/3 which is approximately 3.33C is thus false.The remaining options are true.
",
"What is this array after 2 iterations of Bubble Sort?[""John"",""Bill"",""Elon"",""Mark"",""Amy"",""Curtis""]
", ,"[""Bill"", ""Elon"", ""Amy"", ""Curtis"", ""John"", ""Mark""]
", , , ,"Emulate 2 iterations of Bubble Sort to find the correct answer.
",
"Which of the following properties does this tree have?1) Binary2) Balanced3) Complete4) Maxheap
","1, 2
", , , , ,"1) Yes - Each node has at most 2 children2) Yes - Each node’s children have heights that differ by at most 13) No - The bottom layer of nodes is not full starting from the left4) No - The tree is not complete
","rl836 (rl836 - permission to this course revoked)
"
"Which of the following properties does this tree have?1) Binary2) Balanced3) Complete4) Maxheap
","1, 2
", , , , ,"1) Yes - Each node has at most 2 children2) Yes - Each node’s children have heights that differ by at most 13) No - The bottom layer of nodes is not full starting from the left4) No - The tree is not complete
","rl836 (rl836 - permission to this course revoked)
"
"Imagine you're working at company that deals with stocks and your team's current project is develop a page on a website that lists companies on the stock market and allows you to monitor them in real time.A feature of this page is that you can sort the companies in a number of ways (e.g. growth in the last day, total net worth, etc.). As these details are changing in real time, the list will also needed to be re-sorted in real-time too.Your team leader has told you that:1. Consistent speed is the top priority. Every second counts in the stock market and any lag will result in complaints.2. The sort should be stable. It will cause confusion if companies with the same value were to swap seemingly randomly.3. Memory is not an issue. The company is prepared to give you as much space as you need for the sort as long as its effective.Which sort is the most appropriate for this situation?
", , , ,"Merge Sort
", ,"The answer is DA - Insertion Sort: Even though it is a stable sort, the average time complexity of this sort is O(n^2). There are quicker sorts available.B - Quick Sort: There are two problems with this sort. Firstly it isn't a consistent sort. It's average time complexity is O(nlog(n)) but it's worse case is O(n^2), meaning it could cause lag. Secondly, it isn't always stable so it doesn't fulfil condition 2.C - Bubble Sort: While easy to implement, it has the same issue as A in the it's average time complexity of O(n^2) and there are quicker sorts available.E - Heap Sort: While this does produce a consistent (Best, Worst and Average case are all the same) complexity of O(nlog(n)), it isn't stable so it doesn't fulfil condition 2.Merge Sort is the correct answer as:- It has a consistent time complexity of O(nlog(n))- It is a stable sortWhile it does have a high space complexity of O(n), we've been told this isn't an issue and that we should just use the most effective sort.
",
"What is the time complexity for the code below? Answer with a lower case letter with no other characters.for (int x=0; x<n; x++){ for (int y=0; y<n; y++){ total = numberArrayOne[x] * numberArrayTwo[y]; }}
","n^2
", , , , ,"It is n^2 as there are 2 for loops with a limit of n, one within the other. The pairs of x and y will be (1,1), (1,2), (1,3).....(1,n).....(n,1).....(n,n).
",
"Which of the following statements best describes an undirected graph?
", , ,"All edges are bi-directional, you can go either way along any edge
", , ,"In an undirected graph, all edges are bi-directional. You can go either way along any edge.
",
"Which statement(s) about heaps is false?
", , , ,"A heap is a binary search tree (BST).
", ,"A - false, a heap is one of the most efficient data structures for implementing a priority queue. (see page 5 inD&A-Lecture16-Trees4.pptx slides)B - false, aheap is a complete binary tree. (see page 6 in D&A-Lecture16-Trees4.pptx slides)C - false, there are two types of heaps: max-heaps and min-heaps. (see page 7 in D&A-Lecture16-Trees4.pptx slides)D - true: a heap is not a binary search tree, as for a given node, the right child may not be larger than the parent, and the left child may not be smaller than the parent.E - false, D is the only false statement.
",
"How many steps to find page 64 in a dictionary which has 100 pages start from page 1 using binary search?
", ,"6
", , , ,"1. (1+100)/2 = 50.5 = 51,2. 64 is not 51 and greater than 51 ----> reject 1 to 51.3. (52+100)/2 = 76,4. 64 is not 76 and smaller than 76 ----> reject 76 to 100.5. (52+75)/2 = 63.5 = 646. 64 is the correct page
",
"Flann O'Brien is an outlaw. He was attempting to hide out at point A, but realised that life there is too boring. He would like to return to point I as quick as possible. However all boats are being searched in case he's on board. With the exception of north Scotland, since the authorities are English and the Scottish referendum only happened 4 years ago... and well they're little scared to go up there.Given that Flann (if that is even his real name) wants to return as quick as possible, which route should he take?
","A,B,W,L,C,N,I
", , , , ,"A) You were right. Good for you.B) So close but not quite.. you can save time by going to W skipping out E. To get to L it would be 12 instead of 13. tbh if you got this wrong you should really work on your mental arithmetic. There's some pretty good apps.C) The least towns stopped in. However time is of the essence, and this takes 20 days :(D) W-S does not exist... return directly to go, and do not collect 200 Irish francsNone of the above: while this seems a credible answer, as the trip involves going to Scotland. The only alternative is attempting to swim, and no offence but you are doing Java, so the chances of you being able to swim to Ireland are a little slim.And 'no' dying is not better than going to Scotland. It's a lovely place. The people are very nice.. most of them are, but Flann is Irish so he will get on fine.
",
"State the complexity of the following algorithm:for(int i = 0; i < n; i++){ ListNode node = head; for (int j = 0; j < i - 1; j++){ node = node.next; } if(j > 3){ for(int k = 0; k < j; k++){ node.element += k; if(node.element >= 23){ break; } } }}node.next = new ListNode(o, node.next);
","?(n^2)
", , , , ,"While there are a lot of if and for loops, it basically is 2 for loops inside a third one, meaning it is n for the first loop, n for the second making it 2n for the inside loops, and n for the outside for loop, giving it a total of 2n^2. However, coefficients are ignored, so?(n^2).
",
"Which of the following sorting algorithms is Stable?
", , , ,"InsertionSort
", ,"D insertion sort is Stable
",
"In a Skiplist where p = 1/2 (i.e the probability that the node has 1 lane is 1/2 and the probability that the node has 2 lanes is 1/4 etc...) which has 1024 nodes. How many nodes should we expect to see that have exactly 6 lanes?
", ,"16
", , , ,"There are 1024 nodes. The probability of having 6 lanes is= .So the expected number of nodes with exactly 6 lanes is: 1024 * = 16.
",
"Which of the following show the structure of an AVL tree?
","
", , , , ,,"wp342 (wp342 - permission to this course revoked)
"
"What are the characteristics of a Binary Tree?
", ,"In a binary tree, every node has at most two children nodes.
", , , ,,"wp342 (wp342 - permission to this course revoked)
"
"Considering an implementation of a linked list with a head pointer and no tail pointer, which two of the following operations have a complexity of O(1) time?1. Insertion at the end of the list2. Insertion at the front of the list3. Deletion of the last node in the list4. Deletion of the First node in the list
", , , ,"2 and 4
", ,,"callumb212 (cb2077 - permission to this course revoked)
"
"Using a standard closed hash table with linear probing which has slots 0, ... ,7 and hash function h(x) = x % 8. What is the output of the hash table when the following numbers are inserted 14, 9, 26, 31, 2, 7, 11, 19?
", , ,"7, 9, 26, 2, 11, 19, 14, 31
", , ,,"am2541 (am2541 - permission to this course revoked)
"
"Given the two binary trees, what is the combined sum of node values of both diameters?
", , , , ," 38
",,
"What value does the following code for a binary search tree print?public void getElement(Tree root) { while(root.right() != null) { root = root.right(); } System.out.println(root.data());}
", ,"The largest element
", , , ,,"callumb212 (cb2077 - permission to this course revoked)
"
"When does a Insertion sort have (n)?
", , ,"Already or nearly ordered arrays.
", , ,,"am2541 (am2541 - permission to this course revoked)
"
"Old MacDonald has a farm (eieio), but his farm has been bought by McDonald's for his plump, juicy chickens.Old MacDonald now works for McDonald's under a contract where, at the end of every week, he has to send them his plumpest chicken. Furthermore, if Old MacDonald still has more than 63 chickens in his farm, he must keep sending the next plumpest chicken until he has 63.To perform his job more efficiently, McDonald's promoted ""Old MacDonald"" to ""New MacDonald"" by giving him a fancy new computer, and have told him to create a data structure to assist him in consistently finding the plumpest chicken.New MacDonald is however still very inexperienced with data structures and needs some advice. He was told by McDonald's that his data structure should have the following qualities:- Removing the plumpest chicken from the list should be easy and repeatable and is of the highest priority.- Updating the weight of existing chickens and reordering the structure accordingly should be possible.- Adding newborn chickens should be possible but isn't a priority (Most eggs are used for breakfast McMuffins anyway).Which data structure should New MacDonald use?
","A Heap
", , , , ,"The answer is A.B - An Open Hash Table: It would be difficult to create an good hash function for putting the plumpest chickens in a single cell, making the plumpest chickens hard to find. Updating weights would also be difficult.C - An AVL Tree: While removing the plumpest chickens would be easy enough (removing the right-most node), updating chicken weights would have to be done by removing them and re-inserting them with their new weight if the order is to be maintained properly. Another good point is that it would be easy to know when to there are more than 63 chickens (2^h - 1 = the max no. of nodes in a tree of height h and 63 = 2^6 - 1; this means that if the height of the tree is more than 6, there are more than 63 chickens).D - A Closed Hash Table: Similarly to B, creating a good hash function would for ordering chickens would be difficult, making it hard to find the plumpest chicken.E - A Linked List: Removing the plumpest chicken would be easy (remove the first or last item and change the head or tail respectively), but updating chicken weights would also have to be done by removing and re-inserting.A heap would be the best structure for New MacDonald as:- Removing the plumpest chicken is simple (you simply remove the root of the heap)- Updating chicken weights is intuitive (you can update weight and then sift up or down accordingly)- It's easy to know when there are more than 63 chickens (when the heap height is more than 6, as max no. of nodes is 2^h - 1 and 63 = 2^6 - 1
",
"Which of the following isnot a primitive data type in Java?
", , , ,"String
", ,"Java has 8 primitive data types:booleanbytecharshortintlongfloatdoubleString, however, is not a primitive data type.
",
"How would you convert a tree into a sorted list (smallest to biggest)
", ,"In order traversal
", , , ,,"io278 (io278 - permission to this course revoked)
"
"What part of a skip list makes its average runtime relatively quick?
", , , , ," Fast lanes
","The fast lanes of a skip list are used as checkpoints as they skip over elements and check if the element they next stop on is <= the element they are searching for. This means that it doesn't often have to search through all the n elements to find the one it is looking for.
",
"What is the main reason we prefer to use an adjacencyarray over an adjacencylist, in the case where our graph is dense?
", ,"The array is less complex than the list
", , , ,,"elliotstein1 (ers54 - permission to this course revoked)
"
"Which of the following facts about a Selection Sort of n items is not true?
", ,"The Selection Sort is of order (n).
", , , ,,"sah83 (sah83 - permission to this course revoked)
"
"Which of the following is the definition of an upper bound, g = O(f(n))?
", ,"g(n) =O(f(n)) iff there are constants c>0 and N>0 such that for all n>N,g(n) = c f(n)
", , , ,,"nadch20 (nadch20 - permission to this course revoked)
"
"Which of these is NOT a drawback of a closed hash table?
", ,"Can cause collisions between values
", , , ,,"nadch20 (nadch20 - permission to this course revoked)
"
"Which of the following is a correct expression for the sumcommonly encountered when evaluating time complexity?
", , ,"
", , ,"Add together..then divide by 2:
",
"Which nodes in the following binary tree have non-zero balance factor? 7 / \ 4 13 / \ \ 2 5 17 / \ \ / \ 1 3 6 15 20
", ,"5, 13
", , , ,"BalanceFactor(N) := Height(RightSubtree(N)) – Height(LeftSubtree(N))The node '5' has a balance factor of 1.The node '13' has a balance factor of 2.All other nodes have a balance factor of 0.
",
"What is the worst case time complexity for quick sort?
", ,"
", , , ,,"tokenguard (bb563 - permission to this course revoked)
"
"I have a data structure, filled with species of animals since the beginning of time. I am wanting to add these species in the order of their first discovery date. Any new species encountered will therefore be added to the front. I have no need to retrieve any animal once it is in my data structure. When an animal is extinct, I want to remove it from my data structure.Which of the following statements is notcorrect for why I should use a Linked List as the Data Structure for storing the animals, rather than an array?
","Linked Lists in general are much easier to implement than arrays.
", , , , ,,"sah83 (sah83 - permission to this course revoked)
"
"Given the following Binary Search Tree: (F) / \ (D) (G) / \ (B) (E) / \(A) (C)which tree does a right rotation rooted at F produce as a result?
", ,"_(D)_ / \ (B) (F) / \ / \(A) (C) (E) (G)
", , , ,,"tokenguard (bb563 - permission to this course revoked)
"
"What is the correct algorithm for preorder tree traversal?
", , ,"1) Process the current node2) Process the nodes in the left sub-tree3) Process the nodes in the right sub-tree
", , ,,"jscs20 (jscs20 - permission to this course revoked)
"
"In a singly linked list, which of these operations has the best average runtime complexity?
", ,"add()
", , , ,"All the operations are dependant (on average) on the number of items in the list, apart from add(). As add() just places an item on the tail, it has a worst case runtime complexity, and therefore average, of 1.
",
"Consider the following algorithm:for (int i = 0; i < n; i++) { for (int j = 7; j < n2; j+2) { print i + j; }}Let f(n) be the run-time of this algorithm. Which one of the following statements is false?
", ,"f(n) = (n4)
", , , ,"The function f(n) = (n3) since the first loop has order n and the second loop has order n2. This means option A is okay.O represents the Upper Bound, so option C is okay.Same with option D.represents the Lower Bound, so option E is okay.Clearly n4 is not lower than n3so option B is false (the answer).
",
"What is the difference between the accuracy and the precision of a set of values?
","Accuracy is how close to the real value your measurement is while precision is how close your measurements are to each other.
", , , , ,"As seen in slide 7 here:https://moodle.bath.ac.uk/pluginfile.php/1116656/mod_resource/content/2/DA-Lecture03-Complexity1.pdf
",
"What is the equation for the average number of steps to insert/find an item in an Open Hash Table? (where L = load)
","1 + L/2
", , , , ,,"jscs20 (jscs20 - permission to this course revoked)
"
"If a closed hash table uses linear probing, and has a load factor of 0.75, what is the average number of steps required to find the item?
", ,"2.5
", , , ,"As according to lecture 9, the formula for this is 0.5(1 + (1 / (1 - L))). 1 - L = 0.25, 1 / 0.25 = 4, 1 + 4 = 5, 0.5 * 5 = 2.5.
",
"What is the time complexity of the following?for (int i = 0; i < n; i++) { for (int j = 0; j < n/2; j++) { System.out.println(n); }}
", , , ,"O(n2)
", ,"As it is a nested for loop, you would multiply the complexity of each for loop together to work out the overall complexity.The outer loop has complexity O(n) while the inner loop has complexity O(n/2). Therefore the overall time complexity is O(n*(n/2)) = O(n2/2) which we would generalise as O(n2).
",
"Which is correct:
", , ,"Big-Oh = Upper boundBig-Theta = Exact boundBig-Omega = Lower bound
", , ,,"jscs20 (jscs20 - permission to this course revoked)
"
"If we are implementing a heap in an array structure and we have a parent node at position 7, what position is its right child?
", , , , ," 16
","16 and the formula for a nodes children in array form are as follows,leftChild(parent) = 2* parent + 1rightChild(parent) = 2* parent + 2
",
"Letf(n) = O(p(n)),g(n) = O(q(n)),h(n) = O(r(n))What is the order of f(n)g(n) + h(n) ?
", ,"O(max{ p(n)q(n), r(n) })
", , , ,"In the case of products, if f1(n) = O(p1(n)) and f2(n) = O(p2(n)),thenf1(n)f2(n) = O(p1(n)p2(n))Sof(n)g(n) = O(p(n)q(n))In the case of sums, iff1(n) = O(p1(n))andf2(n)=O(p2(n)), thenf1(n) + f2(n) = O(max{p1(n), p2(n) })So takingf(n)g(n) = h'(n)and p(n)q(n) = r'(n), h'(n) + h(n) = O(max{r'(n), r(n)} i.e. f (n)g(n) + h(n) = O(max{p(n)q(n), r(n)})
",
"Show the resulting heap after extracting the largest item from the following tree 15 / \ 10 6 / \ / \ 5 8 3 4 / 1
", , ,"10 / \ 8 6 / \ / \5 1 3 4
", , ,"10 / \ 8 6 / \ / \5 1 3 4Copy the value from the right-most node in the bottom-most row to the root node, delete the right-most node in the bottom-most row and repeatedly swap the just-moved value with the larger of its two children until the value is greater than or equal to both of its children.
",
"For the following tree, what traversal method would be used to form the equation
", , , ,"In-order
", ,"In order traversal processes the nodes left, root, right.
",
"What is the idea behind ""open"" hash tables?
", ,"Instead of storing our values directly in array,each array bucket points to a linked list of values.
", , , ,,"nlee54 (nl484 - permission to this course revoked)
"
"Which is not a directed graph?
", ,"Becoming friends with Christof Lutteroth on Facebook.
", , , ,,"syag20 (syag20 - permission to this course revoked)
"
"What is the idea behind quicksort?
", , ,"Divide and conquer.
", , ,,"nlee54 (nl484 - permission to this course revoked)
"
"What other ADT does the breadth first traversal algorithm use to navigate a graph?
", , ,"A Queue
", , ,"https://moodle.bath.ac.uk/pluginfile.php/1145721/mod_resource/content/2/DA-Lecture17-Graphs1.pdf - slide 29A breadth first traversal adds each connected non visited node of the current node to a queue and is then de-queued in the order they were added in order to go through the graph one layer away from the start node at a time.
",
"Given the following binary tree: [""I""] / \ [""D""] [""O""] \ \ [""G""] [""Q""] \ [""U""] What would the output be for level-order traversal?
", , , ,"I D O G Q U
", ,"Level order traversal visits each level's nodes from left to right, starting from the top/root.
",
"Given the following array of integers: [14, 7, 2, 9, 13, 1, 15, 3], how many iterations does it take to sort (in ascending order) using quick sort?
", , , , ," 3
","Starting with the first iteration, we get: (14 the pivot)7, 2, 9, 13, 1, 3, 14, 15Now with 7 as a pivot, and 15 already being sorted as the only integer greater than 14:2, 1, 3, 7, 9, 13, 14, 15Now sorting each side, with 2 and 9 as pivots:1, 2, 3, 7, 9, 13, 14, 15
",
"Based on this graph how would a Breadth-First traversal look?
", ,"Start - Yellow - Red - Purple - Green - Pink - Orange - Blue
", , , ,,"emmafuentes (efa24 - permission to this course revoked)
"
"What is the time complexity of the heapsort algorithm?
", , ,"O(n log(n))
", , ,"Heapsort has complexity O(n log(n)) as the first part of the heapsort (converting a random array into a maxheap) has complexity O(n) while the second part is O(n log(n)) as it takes log(n) steps to remove an item from the maxheap and this extraction operation is performed n times.Therefore the overall complexity is O(n log(n)) + O(n) with, O(n log(n)) being the dominating term.
",
"When searching a closed hash table by linear probing with a load factor of 0.5, what is the average number of steps needed to find the required element?
", , ,"1.5
", , ,"To find the average number of steps we can use the formula 0.5(1+1/(1-L)) where L is the load factor. Here this is 0.5 so we have 0.5(1+1/0.5) = 0.5(1+2) = 1.5 steps
",
"Consider the following binary search treeWhen doing an in-order traversal, in what order will the nodes be visited?
", ,"Jacqueline, James, Jenny, Jill, Katherine, Kenny, Martha
", , , ,,"jbersey15 (jsb73)
"
"Which of the following is true about trees
","A node can have zero or more children
", , , , ,,"pjmt21 (pjmt21 - permission to this course revoked)
"
"Which sorting algorithm has the best (most efficient) performance when sorting an array which is sorted or almost sorted.
", ,"Insertion Sort
", , , ,,"cg747 (cg747 - permission to this course revoked)
"
"Which traversal method visits each levels node, from left to right, before visiting the nodes in the next level?
","Level Order Traversal
", , , , ,,"cg747 (cg747 - permission to this course revoked)
"
"What is the difference between a directed and undirected graph?
","With a directed graph, all edges go from one vertex to another in a specific direction. However, with an undirected graph, vertices are bi-directional.
", , , , ,,"megansp (msp38)
"
"Which of the following is the correct definition of a maxheap?
","A maxheap is a binary tree which follows these rules:1. The value contained by a node is always GREATER THAN OR EQUAL TO the values of the node’s CHILDREN.2. The tree is a COMPLETE binary tree.
", , , , ,"See lecture 16 slide 8 for the definition of the maxheap.
",
"Big-O, Big-Theta and Big-Omega notation all have the property of transitivity,which of the following best describes transitivity?
", ,"If A = B, and B = C, then also A = C, i.eIf f(n) = O(g(n)), and g(n) = O(h(n)), then f(n) = O(h(n))
", , , ,,"mm2302 (mm2302 - permission to this course revoked)
"
"If you stored a graph with e edges and v vertices as an adjacency matrix, what is the asymptotic memory usage of this matrix?
", , ,"?(v^2)
", , ,"The conections between edges is simply stored in a v*v matrix, where a connection is denoted by a boolean. So the asymptotic storage is?(v^2). See Lecture 17 slide 18 for more detail.
",
"Which of the following has a time complexity of O(logn) for insertion, deletion and search?
","AVL Tree
", , , , ,,"ml2194 (ml2194 - permission to this course revoked)
"
"What is the difference between a minheap and a maxheap?
", ,"Maxheaps can quickly retrieve the largest item from the heap whilst minheaps can quickly retrieve the smallest item from the heap.
", , , ,,"ahd38 (ahd38 - permission to this course revoked)
"
"Which of the following sorting algorithms are not suitable to be used when the input consists of large data sets?
", ,"Insertion Sort
", , , ,"Insertion sort is more commonly used for sorting smaller elements, as it requires no recursion and sorts in-place
",
"If a new node's value is greater than its parent's value when inserting into a maxheap what should you do next?
", ,"Swap the new node with the parent node.
", , , ,,"ahd38 (ahd38 - permission to this course revoked)
"
"What sort of tree is a heap an example of?
","Complete Binary Tree
", , , , ,,"ahd38 (ahd38 - permission to this course revoked)
"
"What is a tree in computer science?
", , ,"A tree is a linked list-based data structure that is used to make decisions and simplify the evaluation of mathematical expressions
", , ,"A tree isa linked list-based data structure that is used to make decisions and simplify the evaluation of mathematical expressions. (from Trees 1 slides)
",
"An AVL tree is created by inserting the numbers 1, 3, 7, 2, 4, 6, and 5. How many of these insertions cause the current tree to become unbalanced?
", , ,"2
", , ,"The AVL tree becomes unbalanced upon the insertion of numbers 7 and 6, so the answer is C.
",
"If Christof’s average number of steps in his open hashtable is 1.42 and the total number of buckets is 1000. What is the max no. of keys he intends to insert?
", , , ,"840
", ,"Avg steps(Open) = 1 + L/2L = max. Keys to insert / total buckets in array1.42 - 1 = L/20.84 = Lkeys to insert = 0.84*1000 = 840
",
"Attila the Hun is wanting to ravage Europe. However he is always uncertain which town to lay waste to. The Huns are currently resting.He has a database of towns ranked by GDP per capita. He wants to be able to remove towns once he's burnt every building to the ground, and add towns as refugees camps begin to form. He should be able to do this quickly as he will be tired after a long day of work. If a town with a certain GDP is not found, he should be able to find a town with similar GDP.Which of the following data structures would be most appropriate to store the list of towns?
", , , ,"Binary search tree
", ,"Singly linked list: To add or delete we have to find the nearest town first so O(n).Sorted ArrayList: we're using a database. If Attila wanted an ArrayList he'd use a scroll. Adding and removing is a lengthy process.Doubly linked list - same as singly linked listBinary search tree: easy to find close sized towns: you just look at the children or parents. May not be the closest, but will be closest in one direction. Fast to add or remove.Closed hash table: Once you remove something, searching becomes rather difficult.
",
"What is the time complexity of the following code?public void look(int a){ int ans[] = int[10]; int n = a; for(int i=0;i<n;i++){ for(int j=n;j>0;j--){ ans[i] = i*j; } } for(int i=0;i<n;i++){ System.out.println(ans[i*2]); }}
", ,"O(n2)
", , , ,"There is a for loop inside a for loop meaning it is n2 complexity. The other for loop does not impact this complexity.
",
"Which of the following is not a property of merge sort?
", , ,"Cannot be used to sort linked lists
", , ,"Merge sort can be used to sort linked lists, so C is not a property of merge sort. Merge sort requires extra memory compared to other sorting algorithms as it requires n slots of extra memory for merging.
",
"Name the fastest sort method and its complexity when sorting an array that has already been sorted.
", , , ,"Insertion Sort
", ,"If the array is already sorted, Insertion Sort makes only one comparison at each entry of the array.Therefore, the complexity is linear and this is the most efficient sort method when we are sorting something that has already been sorted.
",
"Which of these orders describes post-order traversal of a binary search tree?
", ,"Traverse leftTraverse rightCurrent node
", , , ,"Post order traversal traverses the left subtree,then the right, before processing the current node.
",
"Corbyn wants to build the perfect sandcastle. To do this he needs to weigh each and every grain in his bucket, and line them up according to weight. If they are the same weight (precise to a nano-gram, if that's a thing) then he wants the grain that has been exposed to solitude for the longest time, to come first.Given that the room is controlled for wind, and that Jeremy wants to finish the sand castle before he dies, which sorting method should he use?
", , , , ," Mergesort
","He wants to minimise the amount of time that each grain is alone, so he wants the sorting method to be stable.Sand grains don't tend to be nearly ordered (unless Sanders was there the year before), so not Insertion sort.Mergesort has average runtime: nlog(n), which is better than the others.
",
"For the Algorithm and data structure of hash tables, which of the following is recommended?
", , ,"With enough memory space, we can change the pointers of storing array by storing a linked list of values instead of a directly value.
", , ,"A. (D&A-Lecture08-Hashtables1.pptx)Only use Closed/Linear Probing hashtables if you never remove items!B. (D&A-Lecture09-Hashtables2.pptx)Cosidering the memory space, open hashtables with lots ofbuckets still needs memory.C. (D&A-Lecture09-Hashtables2.pptx) Correct, the definition of open hashtable.D.(D&A-Lecture09-Hashtables2.pptx) Hash functions ofan efficient hash table need to give same datathe same bucket, to disperse items throughout the hash array as randomly as possible.
",
"What is Interpolation search?
", ,"A search which involves having the search area, knowing how the data is sorted and roughly distributed. The algorithm calculates the start position to start from if the value is higher or lower than the middle. If it is lower it ignores everything on the right and searches the left side again. if its higher that the middle it ignores the left side and searches the right side again, until the value is found.
", , , ,,"sammie (sh2389 - permission to this course revoked)
"
"Which of the following statements is false?
", ,"The heap sort is stable and has ?(n(log(n))) complexity for itsbest case, worst case and average case.
", , , ,"The answer is B because the heap sort is unstable.
",
"How many elementary operations does this function have and what is the value of total after the for loop has finished?public void total() { int x = 4; int total = 0; for (int i=0; i<x-1; i++) { total = total + i; }}
", , , ,"elementary operations: 3+4xtotal=3
", ,"int x=4Variable assignment : 1 operationint total=0 Variable assignment : 1 operationint i=0 Variable assignment : 1 operationi<x-1 Comparison: 1 operation carried out x times: x operationsi++ Addition that occurs x times: x operationstotal + i Addition that occurs x times: x operationstotal = ... Assignment that occurs x times: x operationsSo the T(n) is the total of these, which is 1+1+1+x+x+x+x
",
"What is the complexity of the following, given that the methods checkPassword, hackProfessor and openMozilla Firefox are of constant complexity?int n = password.length(); int findPassword = 0; int x=1;for( int j = 0; j < n; j++){ int x=x*10;}for( int i = 0; i < x; i++;){ for(password.checkPassword(findPassword) == false) findPassword++;}}password.hackProfessor(findPassword);for (int i2 = 1; i2 <= n; i2++) { for(int j2 = 1; j2 <= n; j2++) { openMozillaFirefox(https://www.youtube.com/watch?v=oavMtUWDBTM); }}
", , , ,"O(10^n)
", ,"It is a terrible brute force algorithm, but it will work. Or at least I think it will, given a number combination.The password cracking loop will iterate for 10^n, as x=10*10*10 ... *10 = 10^n.Wheras spam link loop is only n^2.
",
"For a list of size n=30,000what would be the average search time for an element in the list using binary search?
", , , ,"14.87
", ,"average search time for binary search is given by O(log2(n)) where n is size of listgiven that n = 30,000:avg search time = log2(30,000) = 14.8726...Ans(D): 14.87
",
"Take the following steps:Select an arbitrary “pivot” element P from the array (typically the first element in the array).If the array contains only 0 or 1 element, return.Move all elements that are = P to the left of the array and all elements > P to the right.Recursively repeat this process on the left sub-array Conquer and then the right sub-array.What sorting algorithm do they describe and what is it's average time complexity?
", , ,"Quick sort, Nlog(N)
", , ,"These steps describe the quick sort algorithm which has an average run-time complexity of Nlog(N).
",
"What does this formula calculate?And what does represent?
", , ,"Standard DeviationElements
", , ,,"cro26 (cro26 - permission to this course revoked)
"
"Given the function f(n) = 2n2+ 2n2log(n) + 200n(2/3) + log(n2), how can the time complexity be described for a sufficiently large n?
", , , , ," O(n2log(n))
","2n2log(n) is greater than any other terms and so the time complexity can be described as O(n2log(n)) - we can drop the factor of 2. The second largest term is 2n2, and we have that 2n2 < 2n2log(n) when n is sufficiently large.
",
"If we were to insert 9, 11, 7, 4, 16, 1, 8 into anemptyAVL Tree, 9 / \ 7 11 / \ 4 16 / 1 what would we expect the balanced AVL treeto look like?
","9 / \ 4 11 / \ \1 7 16 \ 8
", , , , ,,"tp506 (tp506 - permission to this course revoked)
"
"Which statement is false?
", , ,"A binary search tree must be balanced.
", , ,,"hollymillea (hm681 - permission to this course revoked)
"
"Which of the following sets of sorting algorithms lists all that implement the divide and conquer approach?
","Mergesort, Quicksort and Heapsort
", , , , ,"Merge Quick and Heap all use divide and conquer, while insertion and bubble use a different approach to sorting.
",
"Which is not a property of quicksort?
", , , , ," The pivot should be the first element.
","Utilizes Divide and Conquer strategy.Since breaks down into two partitions. (with exception in worst case)The best case runtime and the average case are the same.Both nlog(n).The worst case runtime is O(n^2).If already ordered there are n partitions: so n*n.Quicksort is unstable.Since it exchanges nonadjacent elements.The pivot should be the first element.Pivot is arbitrary.
",
"The following is an AVL tree. The element 17 is added, and the element 20 is added. Which elements are the root, and the roots children?
", , , ,"The root: 18The roots left child: 16The roots right child: 21
", ,"After adding the 17, you do a double rotation to rebalance to form: 21 16 33 12 18 637 17 19Then you add 20 and rebalance with the opposite double rotation to get: 18 16 21 12 17 19 337 20 63Hopefully this is clear. If not write it out. If you can't read above, then I am guessing you are on a phone: don't be.
",
"Why can we not remove items from a closed hashtable with linear probing?
", ,"It would create an empty slot and would abort search prematurely.
", , , ,,"lhc33 (lhc33 - permission to this course revoked)
"
"Say we have a graph where the nodes are based on major cities in England and the edges are the major motorways. We want to get data for where we can get using only 1 motorway, then get data for 2 motorways, 3 motorways and so on. Which traversal strategy should we use?
", ,"Breadth-first traversal
", , , ,"The only 2 real strategies are depth-first and breadth-first. Depth-first goes all the way to a dead end before searching the rest of the graph, this isn't useful as we want only the nodes which are 1 edge away first. Breadth-first gives us what we want.
",
"Say we want to store data in a graph. The data shows which factories, that produce certain resources, supply to some of the other factories. There are 100 factories, each of which deliver resources to approximately 15 other factories each. How shall we store the graph?
", , ,"Use an array of linked lists
", , ,"If we were to use an array there would be 10000 data points, whereas the array of linked lists only has 1500 data points.
",
"When adding a new node to a non-empty heap, were do we initially insert the node before ""sifting up""?
", , , , ," The left-most bottom-most slot.
","We add the node to the left-most bottom-most slot as then the tree is still complete, which is a condition for the tree to be a heap.
",
"Say we have a heap, which is stored in an array, and a node at index n. What are the indexes in the array of the children of this node?
", , ,"2n+1, 2n+2
", , ,"This means that there is never an overlap in the indexes of children of a node and another node. If we didn't have the +1 then the 0th index node would have a child in the 0th index.
",
"The poles for the 2080 US election are in. However there has been a mistake: they were meant to be sent in by alphabetical ordering of the 3242 county names, but certain counties sent their data in early or late. This has meant that the list is ordered incorrectly, with a positioning error term of at most 4. Jim, whose job is on the line, has very little time to fix the mistake. Given that his reading skills are limited, and his computer is incredibly slow, which sorting method should he use.
", , , ,"Bubblesort
", ,"Bubblesort: since the list is mostly sorted. Would be O(n) rather than O(nlog(n)). And would take at most 4n comparisons.
",
"Which of the following tree's is a legal BST?a) b) c) 1 3 3 / \ / \ / 2 3 1 2 2 / / /4 5 1
", , ,"c
", , ,,"acp42 (acp42 - permission to this course revoked)
"
"Array List:Which of the following statements about Array Lists is false?Note: assume theArray List is unsorted.
", , ,"The best and worst case runtime complexity for finding an element is the same.
", , ,"Statement A is true.The answer is not B because the best case runtime complexity for inserting into the array list and removing from the array list isT(1).The answer is C as the best case runtime complexity for finding an element is T(1) and worst case runtime complexity for finding an element isT(n).The answer is not D because the best case runtime complexity for removing an element from the array is T(1).The answer is not E as the best case runtime complexity for adding an element to the end of the array is T(1).
",
"put the binary tree intopreorder traversal? 8 / \ / \ 6 10 / \ / \ 4 7 9 12
", ,"8,6,4,7,10,9,12
", , , ,,"ses59 (ses59 - permission to this course revoked)
"
"In the worst case, what is the complexity of insertion sort?
", ,"O(n^2)
", , , ,"During each round of the algorithm we consider a larger set.The first time we may need to compare and shift one element.The second time we may need to compare with and shift up to two elements....The final time we may need to compare and shift up to (n - 1) elements.1 + 2 + ... + (n - 1) = roughly n^2 steps.Therefore, in the worst case, insertion sort is O(n^2).
","rm896 (rm896 - permission to this course revoked)
"
"In the worst case, what is the complexity of insertion sort?
", ,"O(n^2)
", , , ,"During each round of the algorithm we consider a larger set.The first time we may need to compare and shift one element.The second time we may need to compare with and shift up to two elements....The final time we may need to compare and shift up to (n - 1) elements.1 + 2 + ... + (n - 1) = roughly n^2 steps.Therefore, in the worst case, insertion sort is O(n^2).
","rm896 (rm896 - permission to this course revoked)
"
"The following is a binary search tree (BST) where we have just inserted the node '13':We are trying to maintain a valid AVL tree. In this case, at what node (if any) is this tree unbalanced and what type of rotation(s) are necessary to balance the tree?
", ,"Node '14' is unbalanced. Left-right rotation (i.e. a left rotation about node '12' followed by a right rotation about node '14').
", , , ,"The balance of a node in an AVL tree is defined as the height of the left sub-tree minus the height of the right sub-tree. An AVL tree is unbalanced if the balance of a node is greater than 1 or less than -1.Therefore, we see that the node '14' is unbalanced with a balance of -2.We now want to apply a rotation (or two) to balance the tree.Clearly this will involve a right rotation at some point (as it is the left sub-tree which has the greater height). However, if we apply a right rotation straight away we will have a tree that is still unbalanced. The balance will be +2 at node '12' which has replaced node '14' as nodes '13' and '14' will both be in the right sub-tree.Therefore, we want to apply a left-right rotation which firstly does a left rotation about node '12' followed by a right rotation around node '14'.We will then end up with the following AVL tree (which is not only balanced, but perfectly balanced in fact!):
",
"What is the definition of an AVL tree?
", , , ,"A binary search tree in which the height of the left and right sub-trees of each node differ by at most one.
", ,"https://moodle.bath.ac.uk/pluginfile.php/1144766/mod_resource/content/3/DA-Lecture15-Trees3.pdf - Definition stated on page 5
",
"What is(n)?
", , , ,"The exact bound of complexity.
", ,"https://moodle.bath.ac.uk/pluginfile.php/1117431/mod_resource/content/4/DA-Lecture04-Complexity2.pdf - page 6
",
"Which of the following statements is false?
", , , ,"Selection Sort is astable sort
", ,"In selection sorts,the relative order of elements with the same value is not maintained.
",
"Where would it be most suitable to use an adjacency matrix?
", , ,"A graph with:Lots of Edges between verticesFew Vertices (<10000)
", , ,,"aa2738 (aa2738 - permission to this course revoked)
"
"Which of the following statements are true?
", , , ,"B and C.
", ,"Selection Sort - UnstableInsertion Sort - StableBubble Sort - StableShell Sort - UnstableQuick Sort - UnstableMerge Sort - StableHeap Sort - Unstable
",
"For ?(n2), which of the following is true.
", ,"Doubling n increases T by factor 4
", , , ,"For ?(n2) when n is doubled, the Time is increased by a factor 2, which is also the exponent value in the Big ? expression.
",
"How many iterations will it take to sort the following array into ascending order using a selection sort?2,5,1,3,4,6
", , , ,"4
", ,"It will take 4 iterations to sort the array.
",
"Which of the following statements about linked lists and arrays is false?
", , ,"Removing an item from the middle of an array is faster than removing an item from the middle of a linked list
", , ,"It is faster to remove an item from the middle of a linked list as you simply update the pointers of the previous and next nodes. With an array you must shift all items to the left.
",
"A tree node which has zero children is called ___?
", , ,"a leaf
", , ,"A leaf node is a tree node which has zero children.
",
"Given the following incomplete Java code for selection sort, which code must go at the place marked with X?public static void selectionSort(String[] array) { for(int i = 0; i < array.length; i ++) { int minimumIndex = i; X }}
", ,"for(int j = i + 1; j < array.length; j ++) { if(array[j].compareTo(array[minimumIndex]) < 0) { minimumIndex = j; } String temporaryValue = array[i]; array[i] = array[minimumIndex]; array[minimumIndex] = temporaryValue;}
", , , ,"A - incorrect due to the for loop initialising j to i and not i + 1.B - correctC - incorrect due to swapping at the end being incompleteD - incorrect due to the if statement comparing the array[j + 1] element and not element array[j] to the array[minimumIndex] elementE - incorrect due tothe for loop initialising j to i and not i + 1, and theswapping at the end being incomplete
",
"Which of the following sorting algorithms is the fastest for an input array of integers, int[] array, which in fact is already sorted?
","void A(int[] array) { for (int i=2; i<=array.length; i++){ int j = array[i-1]; int k = i-2; while (k >= 0 && j < array[k]){ array[k+1] = array[k]; k--; } array[k+1] = j; }}
", , , , ,"The algorithm A is the insertion sort, B corresponds to a bubble sort and C to a selection sort. For an array which is already sorted, the insertion array is the fastest, as its time complexity is given by?(n) because the second condition in the while loop is never met (j < array[k]). Meanwhile, the time complexity of the selection sort is always?(n^2), and the time complexity of the bubble sort in this case is also?(n^2).
",
"Which of the following options is the correct output for the post-order traversal of this tree?
", ,"4, 9, 8, 18, 14, 12, 10
", , , ,"The post-order traversal processes the nodes in the left subtree first. Then it processes the nodes in the right subtree. Finally, it processes the current node.
",
"Which of the following best describes preorder traversal of a tree?
", ,"1. Process the current node2. Process the nodes in the left sub-tree3. Process the nodes in the right sub-tree
", , , ,,"jamesholland (jh2508 - permission to this course revoked)
"
"Is it allowed to remove elements from a closed hash-table that uses linear probing, and why?
", , , ,"No, because there may be other elements with the same hash value coming after the given element.
", ,"A - this is false, because the load factor does not have a role to play in this answer. Even if it is kept low, the situation described in answer D may still occur.B - this is false, because this answer disregards the situation explained in answer D, below.C - this is false, because this answer refers to open hash-tables which have linked lists at each bucket/index.D - this is correct, because removing an element in a closed hash table using linear probing may lead to a premature search abortion at the empty slot, even though there may be elements with the same hash value coming after the given element being removed.E - this is false, because when an element is removed from a given index, another element can be placed there afterwards. However, it does not explain why we cannot remove an element from a closed hash-table which uses linear probing.
",
"Which boolean expression indicates whether the objects in two linked list nodes (l and m) are the same?[using the code from the problem sheet:class ListNode { Object element; ListNode next = null; ListNode(Object e, ListNode n) { element = e; next = n; }}]
", , , ,"l.element.equals(m.element)
", ,"class ListNode { Object element; ListNode next = null; ListNode(Object e, ListNode n) { element = e; next = n; }}In our ListNode construction, the objects of each node are stored in element.l == m would not work, as Java cannot test whether two of our ListNodes are the same in this way (by default).l.next == m.next checks whether the nodes that l and m are pointing to are the same (which would always be false by our construction).l.element == m.element can only be used for numbers.
",
"The list of numbers4, 3, 5, 2, 7, 1 is sorted into ascending order using selection sort.What will the list look like after the third swap?
", , , , ," 1, 2, 3, 5, 7, 4
","4, 3, 5, 2, 7, 1 Initial state1, 3, 5, 2, 7, 4 (Swap 1 and 4) 1st1, 2, 5, 3, 7, 4 (Swap 3 and 2) 2nd1, 2, 3, 5, 7, 4 (Swap 5 and 3) 3rd <~~1, 2, 3, 4, 7, 5 (Swap 5 and 4) 4th1, 2, 3, 4, 5, 6 (Swap 5 and 7) 5th
",
"What is the runtime when using Counting Sort for sorting n numbers with maximum d digits with basis k based on their digits?
", , ,"?(n)
", , ,"Given that for counting sort the runtime is ?(n) to count occurrences and ?(k+n) to scan the count array andbuild the output then the runtime is?(d*(k+n)) where d and k are constants so?(n).(Lecture 12)
",
"Given an array of elements 5, 3, 6, 2, 1, 4, 7, how many iterations of h-sorting with h=2 would be required before we need to move on to h=1?
", , ,"3
", , ,"1st iteration gives us: 5, 2, 1, 3, 6, 4, 72nd iteration gives us: 1, 2, 5, 3, 6, 4, 73rd iteration to check: 1, 2, 5, 3, 6, 4, 7No swaps occurred in our 3rd iteration so we are done.
",
"Which of the following statements is/are true?When using a classical binary tree node with links to implement a heap:1) It is hard to find a node's parents to do reheapification swaps2) It is hard to find the bottom-most, left-most node during extraction3) It is hard to find the bottom-most, right-most open spot to insert a new node during insertion
","Only 1
", , , , ,"""1) It is hard to find a node's parents to do reheapification swaps"" is correct""2) It is hard to find the bottom-most, left-most node during extraction"" is incorrect: It is hard to find the bottom-most, right-most node during extraction""3) It is hard to find the bottom-most, right-most open spot to insert a new node during insertion"" is incorrect: It is hard to find the bottom-most, left-most open spot to insert a new node during insertion(Lecture 16)
",
"What will be the output of a pre-order traversal of the following tree if each node processed is printed out? 10 / \ 4 12 / \ \ 2 6 16
", , ,"10, 4, 2, 6, 12, 16
", , ,"The pre-order traversal algorithm is as follows:void preOrder(Node cur) { if (cur == null) { return; } System.out.print(cur.value + “ ”); preOrder(cur.left); preOrder(cur.right);}Thus, we start at the root and print out the value 10. Then we recursively process the nodes in the left sub-tree, printing out 4, then 2.At this point the 'cur' node will be null, and thus return. Then the algorithm works its way 'upwards' printing out the values of the right sub-trees.The resulting output is:10, 4, 2, 6, 12, 16
",
"Which two sorting algorithms are UNSTABLE AND have?(n log2n)as the average number of steps when sorting n items?
", ,"Quicksort and Heapsort
", , , ,,"rf504 (rf504 - permission to this course revoked)
"
"How many operations does the following code take?var x = 0;for(var i = 0; i < 2; i++) { x++;}
", ,"11
", , , ,"var x = 0;This is 2 operations (declaring a variable, and assigning it a value).var i = 0;This is 2 operations (declaring a variable, and assigning it a value).i < 2; This is 1 operation (happens 3 times).i++; This is 1 operation (happens 2 times).x++; This is 1 operation (happens 2 times).Therefore, 2 + 2 + (3 x 1) + (2 x 1) + (2 x 1) = 11
","ajb258 (ajb258 - permission to this course revoked)
"
"How many operations does the following code take?var x = 0;for(var i = 0; i < 2; i++) { x++;}
", ,"11
", , , ,"var x = 0;This is 2 operations (declaring a variable, and assigning it a value).var i = 0;This is 2 operations (declaring a variable, and assigning it a value).i < 2; This is 1 operation (happens 3 times).i++; This is 1 operation (happens 2 times).x++; This is 1 operation (happens 2 times).Therefore, 2 + 2 + (3 x 1) + (2 x 1) + (2 x 1) = 11
","ajb258 (ajb258 - permission to this course revoked)
"
"Jamal is designing software for sorting arrays of numbers of varying sizes. He wants to know which sorting algorithm he should use, based on the algorithm's average time complexity.Sarah thinks that Quicksort will be the best algorithm, however Albert thinks Selection-Sort would be faster. Who is correct?
","Sarah is correct, i.e. Quicksort has a better average time complexity.
", , , , ,,"ajb258 (ajb258 - permission to this course revoked)
"
"Which of these statements about an undirected graph is true?
", , ,"Undirected graphs' edges can be followed in either direction
", , ,,"awh28 (awh28 - permission to this course revoked)
"
"What is the worst case time complexity of insertion sort?
", , ,"
", , ,"Best case of insertion sort, when an array is nearly ordered, is , but in all other cases it is .
",
"Which list of numbers would the quicksort algorithm take the longest to sort into ascending order?
", , ,"(2, 2, 2, 2, 2, 2, 2, 2, 2, 2)
", , ,,"gtr25 (gtr25 - permission to this course revoked)
"
"What is the main benefit of using a linked list over another data structure like an array list?
", , ,"fast insertion and removal
", , ,,"dtfl20 (dtfl20 - permission to this course revoked)
"
"What does it mean for a Binary Tree to be 'perfectly balanced'?
", ,"For each node, the number of nodes in its left and right subtrees differ by at most one.
", , , ,"""A binary tree is “perfectly balanced” if for each node, the number of nodes in its left and right subtrees differ by at most one."" - Lecture 14 slides.
",
"What is the 'Big-Oh' time complexity of traversing a binary tree?
", , , ,"O(n)
", ,"When traversing a binary tree, each node is visitedexactly once. Therefore, for a binary tree withnnodes, the 'Big-Oh' time complexity isO(n).
",
"Which of these sorts has the average time complexity of T(n log(n))
","Merge Sort
", , , , ,"Merge sort has average time complexity of T(n log(n)) whereas each of the others have the time complexity ofT(n^2).
","dtfl20 (dtfl20 - permission to this course revoked)
"
"Which of these sorts has the average time complexity of T(n log(n))
","Merge Sort
", , , , ,"Merge sort has average time complexity of T(n log(n)) whereas each of the others have the time complexity ofT(n^2).
","dtfl20 (dtfl20 - permission to this course revoked)
"
"Which data structure has the fastest average insertion time?
","Linked List
", , , , ,,"hpa22 (hpa22 - permission to this course revoked)
"
"Given the matrix:0 1 0 00 0 1 00 0 0 10 0 0 0Which matrix is this the output dictating nodes which are three edges apart?
", , ,"0 0 0 10 0 0 00 0 0 00 0 0 0
", , ,"If you times the original matrix by itself three times, you get that answer.
",
"What additional property must an AVL tree have over a generic Binary Search Tree?
", , ,"The height of the left and right sub-trees of any node differ by at most 1
", , ,"An AVL tree is a BST in which the heights of the left and right sub-trees of each node differ at most by 1See: D&A-Lecture15-Trees3.pptx (slide 5)
",
"What type of traversal is Left-Right-Visit?
", , ,"Post-Order
", , ,,"aa2738 (aa2738 - permission to this course revoked)
"
"Why is it not recommended to use a 'closed hashtable with linear probing' if you want to remove items?
", ,"If the item we remove has the same hash value coming after it in the hashtable, then if and when we next search for this item we will not find it.
", , , ,,"rm896 (rm896 - permission to this course revoked)
"
"Which type(s) of sorting use recursion?i. Mergesort.ii. Quicksort.iii. Heapsort.
", , ,"i and ii.
", , ,"Only mergesort and quicksort use recursion in the given options.
",
"Consider two hash tables: a closed hash table with 750 buckets, 235 of which are empty; and an open hash table with 500 buckets and 275 keys inserted. What is the ratio of the average number of steps it will take to insert/find an item in the open hash table with respect to the closed hash table?
","0.603
", , , , ,"Start off by calculating the load factors of both hash tables, which is given by the formula L=(max # of keys to insert)/(total buckets in the array). So for closed hash table: L=(750-235)/750 =~0.69. For open hash table: L=275/500=~0.55. Now, the average number of steps to insert/find an item in closed hash table is given by #=0.5*[1+1/(1-L)], so that #=0.5*[1+1/(1-0.69)]=~2.113. For an open hash table, the average number of steps is simply given by A#=1+0.5*L, then A#=1+0.5*0.55=~1.275. Now, the ratio is #(open hash table)/#(closed hash table)=1.275/2.113=~0.603.
",
"Given the following array of a maxheap: [42,37,24,18,21,23,12,17,10,13,6,8]; what is the value of the right child of the right child of the node with value 37?
", , , ,"6
", ,"The formula for calculating the slot of the right child node is given by: rightChild(i)=2*i+2, where i is the index of the parent array. Therefore, the node with value 37 is located at index 1, then its right child is located at slot 2*1+2=4, which corresponds to 21. The right child of the node 21 is similarly found at 2*4+2=10, which corresponds to the node with value of 6.
",
"Which statement about Tree nodes is false.
", , , ,"A tree node can have one or more next pointers.
", ,"The tree node can't have one next pointer, as it needs to be able to point to at least both it's right and left child.
",
"What does a load factor of 0.9 mean?
","Your array has 10% more buckets than you need (you’ll fill 90% of the buckets).
", , , , ,"The “load” of a hash table is the maximum number of values (“keys”) you intend to add divided by number of buckets in the array.In simpler terms, when L = 0.9, your array is 10% bigger than required.
",
"Out of the input arrays below, which one would make the sorting algorithm, Quick Sort, most efficient.The numbers must be ordered from smallest to largest.
", , , ,"[5,2,3,1,6,4]
", ,"The run time for Quick Sort is ?(n^2) for already/mostly/reverse ordered arrays or arrays with the same value repeated many times.Quick Sort is most efficient when the array is not at all ordered, where its run time isnlog2(n).
",
"Which of the following trees is a AVL Tree?
", ,"Tree B
", , , ,,"nathalie (nl586 - permission to this course revoked)
"
"What is the definition of the ""load"" of a hash table?
","Maximum number of values you intend to add divided bynumber of buckets in the array
", , , , ,"A -Maximum number of values you intend to add divided by number of buckets in the array.(Lecture slides)
",
"What would this AVLTree look like after the following have been inserted and balancing has been performed?Insert from left to right:(45, 37, 48, 51)
","
", , , , ,,"ja795@bath.ac.uk (ja795 - permission to this course revoked)
"
"which of the adjacency matricesrepresent the following code:// undirected graphboolean[][] graph = new boolean[6][6]graph[3][0] = true;graph[2][1] = true;graph[4][1] = true;graph[5][2] = true;graph[0][3] = true;graph[0][5] = true;
", ,"0 1 2 3 4 50 _ _ _ T _ T1 _ _ _ _ _ _2 _ T _ _ _ _3 T _ _ _ _ _4 _ T _ _ _ _5 _ _ T _ _ _
", , , ,"can be found on Lecture 17 - Graphs 1 - Page 8""array[i][j] == true representsdirected edge from i to j.""where i is the columnand j is the rowgraph[0][5] = true;corresponds to the top right position in the matrix
",
"Given the array representing a max heap [30,25,28,7,19,12,22], which index is the parent of 12
", , ,"2
", , ,"parent = (child - 1) / 2 index, so in this case parent = (5 - 1) / 2 = 2. The second index which is the value 28.
",
"Which sorting algorithm (from lectures) is best to use?
", , , , ," Depends on the situation
","Quick Sort has an average run time T(nlog(n))and Merge Sort is alwaysT(nlog(n)), however Merge Sort requires extra RAM and Insertion Sort can beT(n) for already or nearly-ordered arrays; hence the fastest sorting algorithm depends on the situation (how large the array is or if it is nearly ordered...)
",
"Which tree traversal algorithm is described by the following?Visit each level's nodes from left to right before visiting nodes in the next level.
", , , ,"Level-Order
", ,"Given in Lecture 13.
",
"Which of these operations is a real operation that can be performed on a binary tree?
","Pruning.
", , , , ,,"davidmelling (dm819 - permission to this course revoked)
"
"Which of the following sorts are stable?
", , ,"Insertion Sort
", , ,"Covered in lectures 10 & 11.
",
"In graph theory, the handshaking lemma states that ""In any finite undirected graph, the number of vertices with odd degree is even"".The lemma is a consequence of thedegree sum formula: for a graph with vertex set and edge set .Work out the sum of degrees of the vertices for the following undirected graph:
", , ,"26
", , ,"EXPECTED METHOD:If we follow thedegree sum formula = number of edges = 13 = 26ALTERNATIVE METHOD:Degree of each node:A = 3 B = 3 C = 1 D = 3 E = 5 F = 1 G =3 H = 1 I = 5 J = 1Sum of degrees:3 + 3 + 1 + 3 + 5 + 1 + 3 + 1 + 5 + 1= 26 = 26More information found here:- https://en.wikipedia.org/wiki/Degree_(graph_theory)-https://en.wikipedia.org/wiki/Handshaking_lemma
",
"In an open Hashtable, we want to store 2000 elements and be able to find any in around 1.40 steps. How many buckets should our Hashtable have?
", ,"2500
", , , ,"Using the following formula for an open Hashtable:ave. number of steps = 1 + L/2,we find L = 0.8.Then using the formula for the load L:0.8 = max. number of elements to insert / total buckets,we get 0.8 = 2000 / total buckets, and thus total buckets = 2500.
",
"What is the asymptotic memory usage of an adjacency list?
", , , , ,"
","As there is a linked list for each vertex - so , and that linked list contains all the edges for that vertex - so .
",
"What is the average time complexity of Interpolation Search, an improved Binary Search algorithm, on a sorted array of N uniformly distributed elements?
", , , ,"?(log(log(N)))
", ,"Given in lecture 2.
",
"What makes a sorting algorithm 'stable'?
", , , ,"The algorithm keeps the entered order of items of equal value.
", ,"The algorithm is called a stable algorithm if the original order of equal value items is maintained rather than any additional sorting being performed. This is helpful when order of item entry is relevant to the task.
",
"What is the main condition of a mixed graph (ADT) in terms ofn and m?n = number of directed edgesm = number of undirected edges
", ,"
", , , ,"A mixed graph consists of a set of vertices (or nodes) V, a set of undirected edges, and a set of directed edges.Hence for a mixed graph to exist, the number of directed and undirected edges does not matter as long as .Example:More information found here:https://en.wikipedia.org/wiki/Mixed_graph
",
"Consider the following statements about lists. Which, or all are true?
", , , , ," All of the above
","A) Run time of accessing a specific element in an array is always of order 1.B) At most n elements have to be searched through in a linked list. Hence a run time of order n.C) The worst case is the higher lanes cannot be used or are not there, so has the same run time as an ordinary linked list.D) Start in the highest lane. The next node is null, so move down 1 lane. The next node (4) is less than 10 so move to the next node (6). The next pointer is null, so drop down a level. Next pointer on this level is 9 (<10) so we move here. Next is null, so drop down a level (now at the lowest). Finally, the next node is 10, which is what we are looking for.E) All true as above, so E is the correct answer
",
"What is the formula for the average number of steps needed to find an item in a closed hash table of size N given the load factor L, 0 <= L <=1.0 ?
", , , , ," 1/2 (1+1/(1-L))
","To find the average number of steps, add together the minimum number of steps to find bucket which is always 1 and then add the max steps to find the bucket, which is 1/(1-L) then divide by 2 so we get 1/2 (1 + 1/(1-L))
",
"How will the list 9, 4, 7, 5, 8, 6, 1, 2 look after the first pass of 3-sort (shellsort h=3) and after all passes are complete.
", , ,"First Pass: 5, 4, 6, 1, 2, 7, 9, 8Complete: 1, 2, 6, 5, 4, 7, 9, 8
", , ,"H-sort algorithm:Pick a value of h (for example = 3)For each element in the array if A[i] and A[i+h] are out of order then swap.So for9, 4, 7, 5, 8, 6, 1, 2Consider 9 and 5 (which is 3 places along from 5), they are out of place so swap5, 4, 7, 9, 8, 6, 1, 2Consider 4 and 8 - in order so dont swapConsider 7 and 6 - out of order so swap5, 4, 6, 9, 8, 7, 1, 2Consider 9 and 1 - out of order so swap5, 4, 6, 1, 8, 7, 9, 2Consider 8 and 2 - out of order so swap5, 4, 6, 1, 2, 7, 9, 8No more elements to consider so this is the first passSince there were swaps we must repeat againConsider 5 and 1 - out of order so swap1, 4, 6, 5, 2, 7, 9, 8Consider 4 and 2, out of order so swap1, 2, 6, 5, 4, 7, 9, 8Consider 6 and 7 - in order no swapConsider 5 and 9 - in order no swapConsider 4 and 8 - in order no swapSince there was a swap consider from start again1, 2, 6, 5, 4, 7, 9, 8Consider 1 and 5 - in order no swapConsider 2 and 4 - in order no swapConsider 6 and 7 - in order no swapConsider 5 and 9 - in order no swapConsider 4 and 8 - in order no swapComplete so after final pass it is 1, 2, 6, 5, 4, 7, 9, 8
",
"For the given AVL Tree, if 5 is inserted what rotation will be required to re-balance the tree?
", ,"Right Rotation about node 6, then left rotation about node 4.
", , , ,"From the given figure you can see what the tree will look like after inserting 5. 4 is the first node we approach when rebalancing the tree after inserting 5 that has a balance value <=-2 or >= 2. So we have to rotate about 4. As the rightchild of 4 has a balance of -1, this is the case for a double rotation, right rotate the rightchild (node 6), then left rotate on node 4.
",
"If we take an Adjacency Matrix, A, that represents a graph, and multiply it by itself n times, we find out:
", ,"which vertices are n edges apart
", , , ,"From the lecture notes we have:A^2 gives us the number of vertices that are 2 edges awayA^3 gives us the number of vertices that are 3 edges awayGeneralising this gives:A^n gives us the number of vertices that are n edges away
",
"Which of the following sorting algorithms are stable?
","Insertion sort
", , , , ,"Shell, heap and quick sort all involve 'swapping' elements, and so order of equal elements may change during the sorting process.
",
"In a SkipList of n elements, how many elements are expected in lane 1 and lane 3?
", , ,"n in lane 1, and n/4 in lane 3
", , ,"For each lane in a skip list, the expected number of elements in each lane halves:Lane 1: n (contains all elements)Lane 2: n/2Lane 3: n/4 (n/2 divided by 2)Lane 4: n/8 (n/4 divided by 2)
",
"How many of the following sort methods are stable:Selection SortShell SortBubble SortHeap SortMerge Sort
", ,"2
", , , ,"From the given sort methods only Bubble sort and Merge sort are stable.
",
"Which of the following is a valid maxheap? (Assuminglexicographic order)
", ,"
", , , ,"A) Not correct as Zenith>Moss, and Quazar>MossB) Each node is greater than or equal to it's children and is a complete treeC) Arthur > AaronD) Wilson > JerryE) Not a complete tree. (Level 3 missing the left child of Jerry)
",
"Given the elements [14, 18, 3, 2, 1, -1, -4, 5, 20], find the final balanced AVL Tree.
", , , ,"2 -1 14-4 1 3 18 5 20
", ,"Insert 14, 18, 3, 2, 1: 14 3 18 21Rebalance at ""3"": 14 2 181 3Insert ""-1"": 14 2 18 1 3-1Rebalance at ""14"": 2 1 14-1 3 8Insert ""-4"": 2 1 14 -1 3 18-4Rebalance at ""1"": 2 -1 14-4 1 3 18Insert ""5"" & ""20"": 2 -1 14-4 1 3 18 5 20
",
"Insert the elements -3, -5, -1, 5, 0, 4, into a standard closed hashtable (of size 6) with linear probing (to the right) in that order.The hash function has the form h(x) = ((x+1)2-3) % 6.What does the final hashtable look like?
","4, -3, -5, -1, 5, 0
", , , , ,"h(-3) = 1. Insert into slot 1.h(-5) = 1. Slot 1 is taken so insert into slot 2.h(-1) = 3. Insert into slot 3.h(5) = 3. Slot 3 is taken so insert into slot 4.h(0) = 4. Slot 4 is taken so insert into slot 5.h(4) = 4. Slot 4 is taken and so is slot 5. So insert into slot 0. (Also last free slot).If you chose B then you probed in the wrong direction.
","jma52 (jma52 - permission to this course revoked)
"
"Insert the elements -3, -5, -1, 5, 0, 4, into a standard closed hashtable (of size 6) with linear probing (to the right) in that order.The hash function has the form h(x) = ((x+1)2-3) % 6.What does the final hashtable look like?
","4, -3, -5, -1, 5, 0
", , , , ,"h(-3) = 1. Insert into slot 1.h(-5) = 1. Slot 1 is taken so insert into slot 2.h(-1) = 3. Insert into slot 3.h(5) = 3. Slot 3 is taken so insert into slot 4.h(0) = 4. Slot 4 is taken so insert into slot 5.h(4) = 4. Slot 4 is taken and so is slot 5. So insert into slot 0. (Also last free slot).If you chose B then you probed in the wrong direction.
","jma52 (jma52 - permission to this course revoked)
"
"The runtime for the following code fragment is?(f(m,n)). What is f(m,n)?int a;for (int i = -5; i < n; i++) for (int j = 1; j < 2i+1; 2*j) for (int k = 1; k < n-1; 3*k) a=a+1; for (int l = 0; l < m; 5*l) a=a+j;return a;
", , , ,"?(nlog(n)log(nm))
", ,"First loop has?(n) operations.Second loop has?(n) operations.Third loop has?(log(n)) operations.Fourth loop has?(log(m)) operations.In the second loop we have the sum of the third and fourth loops which have different bases. So we get?(log(n) + log(m)) operations. Bases of logarithms do not matter so we can use logarithmic laws to get?(log(n) + log(m)) =?(log(nm)).Then multiply these loops together to get?(n*log(n)*log(nm)) =?(n log(n) log(nm)).
",
"Which is not a form of tree traversal
", , , ,"By-order
", ,"By-order is not a traversal method.
",
"Which sort uses h-sorting?
", ,"Shell Sort
", , , ,"Shell sort uses h sort multiple times with a range of values, always ending in 1.
",
"See the incomplete java code below for the classes ListNode and LinkedList:class ListNode { Object element; ListNode next; ListNode(Object e, ListNode n) { element = e; next = n; }}class LinkedList { private ListNode head = null; private int n = 0; // n is the list size public Object get(int i) { if (i<0 || i>=n) { // …error! } ListNode node = head; X return node.element; }}The method get finds nodeiin the linked list and outputs its element (get(0) outputs head.element). Which code should go at the place marked X for the method to work correctly?
", ,"for (int j=0; j<i; j++) { node = node.next;}
", , , ,"(d) and (e) are wrong because the assignment ""node.next = node"" is incorrect - this line would repeatedly make the assignment head.next = head.To find node i, the line ""node = node.next"" needs to be executed itimes. Examples:If i=0, the line ""node = node.next"" should not be executed because get(0) should outputhead.elementIf i=2, the line ""node = node.next"" should be executed 2 times so that node=head.next.next, which is node 2 in the listWe are left with (a), (b) and (c).(a) executes the line ""node = node.next"" (i-1) times(b) executes the line ""node = node.next"" i times(c) executes the line ""node = node.next"" (i+1) timesTherefore the answer is (b).
",
"Using selection sort, which of the following permutations of [1,2,3,4,5] takes 5 swaps? (Ascending order)
", ,"[5,1,2,4,3]
", , , ,"[5,1,2,4,3][1,5,2,4,3] (1)[1,2,5,4,3] (2)[1,2,4,5,3] (3)[1,2,3,5,4] (4)[1,2,3,4,5] (5)
",
"What is the Big-O of the code below for a random value of j?if( j>=0 && j<=5) a+=5;else if( j<0){ for(int i = 0; i<=n; i++){ a+=3; }}else{ for(int i = 0; i<n*n; i++){ a+=8; }}
", ,"n^2
", , , ,"For Big-O we need to look at only the worst case which is the last else for the given code. The complexity then is 4n^2 +2 which means that the Big-O is n^2.
",
"Of the following statements, which of these are not correct:
", , , , ," A double rotation is required for nodes on the outside of the tree.
","A double rotation is required when a node is on the inside of the tree, one to move it to the outside, and another to rebalance the tree.
",
"What is the complexity of the worst-case scenario for quicksort?
", , , ,"n2
", ,"The worst-case scenario for quick sort is if it repeatedly selects an extreme end of the dataset, meaning that each recurse only reduces the problem by one step, thus n2.
",
"A skip list containing lanes from 0 to 12 is used to organise 262000 elements.On average, what will the combined sum of pointers in lanes 3, 8 and 11 be closest to?
", ,"34000
", , , ,"~ 34000
",
"Which of the following notations are used to represent the “exact bound” for the complexity of an algorithm?
", ,"?(n)
", , , ,,"gray (jg2124 - permission to this course revoked)
"
"Provided that the load factor is limited, what is the runtime complexity of insert, find and remove for a hashtable?
", , ,"?(1) for all
", , ,"Summary of Hashtables Lecture 2 - provided a limited load factor (max number of keys to insert / total buckets in the array) complexity is linear for find, remove and insert!
",
"Which of the below is the correct order of asymptotic complexity, from fastest to slowest
", ,"1, log(n), n, n2, 2n
", , , ,"1 (linear) is fastest, followed by log(n), n, n2 and 2n.
",
"Binary Search Trees, Binary Trees and AVL Trees are all types of Tree, but which is a special type of which?
", , ,"AVL Tree is a type of Binary Search Tree which is a type of Binary Tree
", , ,"An AVL Tree is a type of balanced Binary Search Tree, and a Binary Search Tree is a type of Binary Tree where all nodes in the left subtree are less than the node's value, and all nodes in the right subtree are greater than the node's value.
",
"Which of the following sorting algorithms use a 'Divide & Conquer' strategy?
", , , ,"Quick Sort & Merge Sort
", ,"Both merge and quick sorts split a given list into smaller lists and then sort those - this is what is meant by 'Divide & Conquer'.
",
"In which order (from first to last) are nodes processed by an In-Order traversal of a binary tree?
", ,"Left Sub-Tree, Current Node, Right Sub-Tree
", , , ,"In-Order processes left nodes before the current node and then finishes with right nodes.
",
"How many different orders of the characters 'B', 'A', 'T', 'H' can be inserted into the AVL tree described in lectures, such that preorder traversal will return ""BATH""?
", , ,"6
", , ,"'B', 'A', 'T', 'H''B', 'T', 'A', 'H''A', 'B', 'T', 'H''A', 'T', 'B', 'H''T', 'A', 'B', 'H''T', 'B', 'A', 'H'
",
"What is the definition of precision?
","When you take repeated measurements and get similar values
", , , , ,,"cdm57 (cdm57 - permission to this course revoked)
"
"What are the advantages of a linked list over an array?
", , , , ," A and C
","INSERT: Inserting in an array is difficult, all n items will need to be shifted to the right. However, insertion can be achieved in a few steps in a linked list by simple reassignment of nodes.GET: Any element in an array can be reached in one step. However, to get to element at index i in a linked list would require going through i-1 nodes to get to it.REMOVE: In a linked list, an item can be removed in a few steps. However, in an array, all following items must be shifted to the left.
",
"Which of the following sorting algorithms is always stable?
", ,"Bubble sort
", , , ,"A sort is considered to be stable if the original order of the input is preserved, i.e. if there is a comparison between two equal items, the one that appeared first in the input will appear before the second item in the sorted output too.Bubble sort is stable because it only swaps elements if one is strictly less than the other.However, selection sort is unstable, for example, because it swaps the least value with the first value - but what if they are the same?
",
"In an AVL Tree, what is the maximum balance factor a node can have before it needs re-balancing?
", , , ,"1
", ,"In an balanced AVL Tree, all nodes should have a balance factor of -1, 0 or 1. This means that the maximum balance factor a node can have before needing to be re-balanced is 1. -1 is the minimum balance factor accepted.
",
"Using binary search with a data set with 1,048,576 elements, what is the maximum number of iterations would it take to find a specific element?
","20
", , , , ,"20 iterations. Binary search is log2(n) - so log2(1048576) = 20.
",
"With the BST below, what is the maximum number of elements which can be inserted into the root's left sub-tree until the tree is not an AVL tree (include the insertion which causes the unbalance as part of your answer)?5 \ 6
", , ,"4
", , ,"3 insertions will cause the tree to look like: 5 / \ b 6 / \a cwhich is balanced, then the next insertion has to be below a or c. Hence the 4th insertion causes the tree to not be an AVL tree.
",
"Which is a valid comparison between open and closed hash tables?
", , ,"Closed hash table:- Smaller memory consumptionOpen hash table:- Faster run time
", , ,"An open hash table is going to take up more space since it allows for adding unlimited elements to its buckets, and in order to speed it up, it should purposefully be made too large.A closed hash table takes up a static amount of memory, less than an open hash table would, but will in comparison run slower.
",
"Which of the following statements is false?
", , ,"In a binary tree, every node has at least 2 children
", , ,"In a binary tree, every node has at MOST 2 children nodes
",
"Which is faster (linked list or array) when1) inserting a new item at front?2) removing an item from the middle?
","1) linked list 2) linked list
", , , , ,"1) linked list done in a few steps where as with an array we would have to shift all n items right first2)Once we’ve found the item we want to delete, we can remove it in a few steps. With an array, we’d have to shift all the following items left one slot.
",
"What is the time complexity of adding and deleting items in a priority queue
", ,"Add: O(logn)Remove O(logn)
", , , ,"google heaps geeks for geeks
","iwonderwhothisislol (eg574 - permission to this course revoked)
"
"What is the time complexity of adding and deleting items in a priority queue
", ,"Add: O(logn)Remove O(logn)
", , , ,"google heaps geeks for geeks
","iwonderwhothisislol (eg574 - permission to this course revoked)
"
"What is the average case run-time of heap sort?
", , ,"O(n * log(n))
", , ,"Time complexity of heap sort is O(n * log(n))http://bigocheatsheet.com/
",
"Assuming 0 indexed array representation of a heapwhat is the index of the right child of the node at index 5
","12
", , , , ,"formula is:public int getRightChild(int i) { if(2 * (i + 1) >= pointer) return -1; return 2 * (i + 1);}
","iwonderwhothisislol (eg574 - permission to this course revoked)
"
"Assuming 0 indexed array representation of a heapwhat is the index of the right child of the node at index 5
","12
", , , , ,"formula is:public int getRightChild(int i) { if(2 * (i + 1) >= pointer) return -1; return 2 * (i + 1);}
","iwonderwhothisislol (eg574 - permission to this course revoked)
"
"What are the rules for a max heap as a binary tree?1. Value obtained by a node is always greater than or equal to the values of the node's children.2. The tree is a complete binary tree3. The tree must be balanced
", , , , ," 1 and 2
","These are the conditions for a max heap:Value obtained by a node is always greater than or equal to the values of the nodes children.The tree is a complete binary tree
",
"Assume a heap stored at an 0 indexed array.What is the index of the parent of the item in index 5.
","2
", , , , ,"Formula is :public int getParent(int i) { if (i == 0) return -1; return (i + 1) / 2 - 1;}
","iwonderwhothisislol (eg574 - permission to this course revoked)
"
"Assume a heap stored at an 0 indexed array.What is the index of the parent of the item in index 5.
","2
", , , , ,"Formula is :public int getParent(int i) { if (i == 0) return -1; return (i + 1) / 2 - 1;}
","iwonderwhothisislol (eg574 - permission to this course revoked)
"
"Below is an incorrect implementation of Selection Sort for sorting items in ascending order. What is wrong with the code? You may assume the swap function is correct.void selectionSort(int a[], int n){ for (int i = 0; i < n-1; i++){ int minIndex = i; for (int j = i + 1; j < n-1; j++){ if (a[j] < a[minIndex]){ minIndex = j; } } swap(a, i, minIndex); }}
", ,"The algorithm only sorts the first n-1 items in the list.
", , , ,"The for-loop's should compare up to index n-1 i.e. the last element. This code only compares the first n-2 elements i.e. the second to last element.
",
"Below is some code which preforms an operation on a positive integer. Describe what the code returns? Note that the '%' operator give the modulus.int doSomething(int n){ int result; int d; while( n != 0){ d = n%10; n = n/10; result = result * 10; result = result + d; } return result;}
", , , , ," The code reverses the input integer.
","Consider the code applied to the integer 1234. We track the variables through the code.n d result1234 0 0 123 4 0 412 3 40 431 2 430 4320 1 4320 4321returned integer is: 4321 (so the code reverses a positive integer)
",
"Why is is not possible to remove an entry from a Closed Hash Table with Linear Probing?
", , ,"Removing an entry from a Closed Hash Table with Linear Probing destroys the ""structure"" of linear probing when searching for an entry.
", , ,"If a key has the same hash value as an entry already in the hash table then we insert it in the next available space below the hash value. Now when searching we compute the hash value of the entry which we wish to find then beginning at the hash value we search through the hash table until we either reach the entry or a blank space. If we were to remove an item from the hash table then if we were to search for an entry with the same hash value which came after the removed entry our search would come back false even though the entry is in the hash table.
",
"What is an AVL Tree?
", , ,"a Binary Tree in which the heights of the left and right sub-trees of each node differ at most by 1.
", , ,,"bb585@bath.ac.uk (bb585 - permission to this course revoked)
"
"A quadratic time algorithm uses 27 elementary operations when given an input n=10. What is the (most likely) amount of elementary operations for n=1000?
", , , ,"270,000
", ,"We can represent this problem as an equation; let f(x) = cx^2 where c is a constant to be calculated. We know that 27 = c * 10^2, so c = 27/100.Now lets look at the case where n=1000; f(x) = 27/100 * 1000^2. This equates to 270,000
",
"From the diagram (above), what would the balance value of the node with value ""Ronda"" be? Is this an AVL tree?
", , ,"2 & NOT an AVL tree
", , ,"The balance value of a node is calculated by calculating the heights of the nodes left and right subtrees; balance = rightSubtree.height - leftSubtree.height.This is NOT an AVL tree, the definition of an AVL tree is as follows: ""a BST (binary search tree) in which the heights of the left and right sub-treesof each node differ at most by 1."" As we have a balance factor not in the range [-1,1], it is not an AVL tree.
",
"What is the complexity of the following function?for (int i=0 ; i < n ; i++){ int k = n; while (k > 1){ sum++; k = k/2; }}
", , ,"T(nlogn)
", , ,"Our code has 2 loops involved; 1 for loop and 1 while loop. The for loop loops n times, so our answer is going to be n multiplied by the order of the while loop.The order of the while loop is log(n), as with each loop we keep halving k (If you imagine a graph with y=n at x=0, it will show a logarithmic relationship if for each increase in x you halve n.)This gives us the resulting answer of O(nlogn)
",
"Which of the following are stable sorts?1. Selectionsort2. Insertionsort3. Shellsort4. Quicksort5. Mergesort
", , , , ," 2 and 5
","Insertionsort and mergesort are both stable sorts. Selectionsort, shellsort and quicksort are unstable.
",
"On average, how many nodes would you expect to be in the fourth lane of a skip-list with 64 elements (Assuming the first lane contains all elements)?
", , , ,"8
", ,"As we move up to the next lane, we expect the number of nodes to be half the number that were in the previous lane. In this exampleLANE 1: 64 nodesLANE 2: 32 nodesLANE 3: 16 nodesLANE 4: 8 nodes
",
"There are various ways to Traverse a Tree. These are :
", , ,"Post-Order TraversalIn-Order TraversalLevel-Order TraversalPre-Order Traversal
", , ,,"lemesios10 (al951 - permission to this course revoked)
"
"What is the best, worst, and average/amortised runtime of adding an element to an arraylist?
","Best: 1Worst: nAmortised: 1
", , , , ,"Amortized analysis doesn't naively multiply the number of invocations with the worst case for one invocation.
",
"Which of the following sets of sorting algorithms are all stable?
", , ,"Bubble, Merge, Insertion
", , ,"Out of Selection, Insertion, Bubble, Shell, Quick, Merge and Heap sorts, only Insertion, Bubble and Merge sorts are stable.
",
"What will the following list of numbers look like after 2 iterations of a bubble sort:6, 5, 3, 4, 1, 8, 7, 2, 9
","3, 4, 1, 5, 6, 2, 7, 8, 9
", , , , ,"After the first iteration:5, 3, 4, 1, 6, 7, 2, 8, 9After the second iteration:3, 4, 1, 5, 6, 2, 7, 8, 9
",
"If a function f(x), has (n^2) time complexity, which of the following statements is false, under large values for n?
","f(x) will complete in at most quadratic time
", , , , ,,"liampugh (ljp67 - permission to this course revoked)
"
"If I was to add the number 8 to the following tree, what type of balancing algorithm will be required: (4) / \ (2) (6) \ (9)
", , ,"Clockwise with (9) and (8) and then Anticlockwise with (6), (9) and (8)
", , ,"After the first Clockwise the tree looks like: (4) / \ (2) (6) \ (8) \ (9)And then after the Clockwise rotation it becomes: (4) / \ (2) (8) / \ (6) (9)which is now balanced
",
"If a measuring instrument is described as ""precise"", what does it mean?
","Repeated measurements of the same value conducted with this instrument will yield results that are very close together.
", , , , ,,"liampugh (ljp67 - permission to this course revoked)
"
"If this is an unbalanced AVL tree, what are the new leaf nodes of the tree once it has been balanced? (7) / \ (5) (10) / \ (4) (9) / (1)
","Root 5: leaf nodes 1, 9, 10.
", , , , ,"Use of the re-balancing and rotation algorithms to create a tree that looks like this: (5) / \ (4) (7) / \ \ (1) (9) (10)However other implementations using the right sub-tree instead is also valid, as long as all balance factors are -1, 0, or 1.
",
"Which of the choices below best describes mergesort?
", , , , ," Mergesort can be applied to a linked list, is stable, complexity O(nlogn)
","O(nlogn) because for keep dividing piles in half until pile just 1 item = logn -- do it for n items = nlogn
",
"Which of these statements is FALSE
", , , ,"The average case (i.e. the average number of steps) of binary search is N
", ,,"bgc (ac2291 - permission to this course revoked)
"
"Who invented AVL trees?
","Georgy Adelson-Velsky & Evgenii Landis
", , , , ,"Trees 3rd lecture
",
"What is the notation for the upper bound time complexity?
", ,"O
", , , ,,"bu220 (bu220)
"
"What is an advantage of a List over an array?
", ,"It is faster to insert elements into a list.
", , , ,,"bu220 (bu220)
"
"Which sorting algorithm has the fastest average case?
","Quick sort
", , , , ,"The time complexity of Quicksort is O(n log n) in the best case, O(n log n) in the average case, and O(n^2) in the worst case. This is the fastest average case for sorting algorithms.
",
"Which of the following applies to Selection Sort?
", , , , ," Unstable and?(n2)
","Unstable as Selection Sort does not take into account the initial ordering of the elements in the list.The time complexity of Selection Sort is always?(n2) no matter what.
",
"In the given array, how many steps would it take to find the value '20' when using binary search?__________________________________| 6 | 10 | 13 | 15 | 19 | 20 | 27 | 39 | 41 | 48 |
", ,"3
", , , ,"In the binary search algorithm we keep on dividing our search in half until we finally arrive at our value.Therefore each step of the algorithm would divide the array as follows:__________________________________| 6 | 10 | 13 | 15 | 19 | 20 | 27 | 39 | 41 | 48 | L M H__________________________________| 6 | 10 | 13 | 15 | 19 | 20 | 27 | 39 | 41 | 48 | L M H__________________________________| 6 | 10 | 13 | 15 | 19 | 20 | 27 | 39 | 41 | 48 | L H ^ Found in 3 steps
",
"With a load of 0.50, which of these statements are correct?
","Average number of steps to insert/find an item for a Closed hash table is 1.5Average number of steps to insert/find an item for anOpen hash table is 1.25
", , , , ,,"acp42 (acp42 - permission to this course revoked)
"
"Which of these statements is the Big-Oh transitivity rule?
", ,"if f(n)=O(g(n)) and g(n)=O(h(n)) then f(n)=O(h(n))
", , , ,"if f(n)=O(g(n)) and g(n)=O(h(n)) then f(n)=O(h(n))i.e if A<B & B<C then A<C
",
"What is the max number of comparisons needed to find a name with binary search in the following list:AaronAndreaBenBryceEmmaJamesJohnVictoria
", ,"3
", , , ,"log(n)
",
"A tree is a type of ....
", , , ,"Linked List
", ,"In the first trees lecture
",
"Suppose we have the following AVLTree. If we remove the root node 4 correctly, how could the binary treelook like after? (4) / \ / \ / \ / \ (2) (6) / \ / \ / \ / \ (1) (3) (5) (7) / \ / \ (0) (8)
", ,"5 is the root, 0, 3, 6, and 8 are leaves
", , , ,"The lecture slide states to replace the removal node's value by the greatest value of the left branchor the lowest value on the right branch.So if we chose 5 on the right branch, we would then need to balance the tree by rotating left on(6) \ (7) after rotate right = (7) \ / \ (8) (6) (8)then leave the left branch untouched to obtain leave nodes: 0, 3, 6, 8We can also choose 3 on the left branch, however, the leave nodes are balanced incorrectly.
",
"Which of the following statements is true?
", , ,"Selection Sort has an unstable default implementation and has O(n^2) complexity
", , ,"Merge Sort is stable and has O(nlog(n)) complexity.Quick Sort is not stable and has O(n^2) complexity.Insertion Sort is stable and has O(n^2) complexity.
",
"Which of these properties do not apply to big-Oh notation?
", , , ,"Proportionality:For all c>0: f(cn) = O(cf(n))
", ,"You have Proportionality:For all c>0: f(cn) = O(cf(n))confused withScaling:For all c>0: cf(n) = O(f(n)).Multiplying the n-value it acts on does not affect the order of the whole function
",
"Let c,N be real numbers, and f(n), g(n) be time complexity functions.The function f(n) is said to be O(g(n)) if:
", , , ,"For some value of c, f(n) < c*g(n), for all n>N.
", ,"A) This is the definition of big-omegaB) This lacks the constant c in the definitionC) This is for all n<N (inequality is wrong way round) i.e. the statement is true before N, rather than after ND) This is the correct choice
",
"Which of the following sorting algorithms is the fastest for nearly sorted data?
", , ,"Insertion sort
", , ,"Insertion sort only needs a few cycles in order to fully sort a nearly sorted list but becomes slower when the data is more out of order
",
"Which of the following sorts is not a real sort?
", , , ,"Dump Sort
", ,,"wleeanglin (wla24 - permission to this course revoked)
"
"Which definition for the types of traversal is incorrect?
", , ,"PREORDER TRAVERSAL1. Process the current node.2. Process the nodes in the right sub-tree.3. Process the nodes in the left sub-tree.
", , ,,"bh598 (bh598 - permission to this course revoked)
"
"It is faster to remove an item from the middle of a linked list or from the middle of an array?
","Linked list
", , , , ,,"bh598 (bh598 - permission to this course revoked)
"
"How many buckets would you need in your open hash table If you wish to store 10,000 items in an average of 1.45 steps? (To the nearest integer)
", ,"11,111
", , , ,"# steps = 1 + L/2 = 1.45therefore L = 0.9L = max keys to insert / total # of buckets in arrayso total # buckets in array = max keys to insert / L = 10,000 / 0.9 = 11,111
",
"Given the following selection of integers,2,5,11,14,17,24,51Which of the following would be valid AVL trees:1: 14 11 17 2 5 24 512: 24 14 51 5 17 2 11 3: 14 5 24 2 11 17 514: 51 17 24 2 5 11 14
", , , ,"3
", ,"3 is the only valid AVL tree, as it is the only BSTin which the heights of the left and right sub-trees of each node differ at most by 1.
",
"You should only use a closed hash table (with linear probing) if __________
", ,"You never need to remove elements.
", , , ,,"tmr38 (tmr38 - permission to this course revoked)
"
"Which of the following unbalanced AVL trees are impossible to balance? (NOTE: For these trees, elements that have the same value as the current node are placed to the left of the current node)1) 4 4 42) 9 8 83) 2 2 14) 5 1 7 1 1
", , ,"1 and 3
", , ,"1) cannot be balanced because same elements go the left of each other and therefore you cannot have 4 4 42) can be balanced to 8 using right rotation. 8 93) cannot be balanced because neither 2 nor 1 are allowed due to the same elements to the left consistency rule. 1 2 2 24) can be balanced to 1 using right rotation on the root node (5). 1 5 1 7
",
"What is in the ""root"" object of an empty tree?
", , , ,"Null
", ,"The root is a pointer and so will point to the first element, if it exists.If the tree is empty, there is no such first element and so it will point to Null - the pointer doesn't point to anything.""Null"" is incorrect as it is a stringA 'null' node is incorrect as it is a node and so an element of the tree exists, making it non-empty.
",
"Which of these sorting methods is slowest?
","Quick Sort
", , , , ,,"leogriff (ljig20 - permission to this course revoked)
"
"Which of these are stable?
", , , ,"Merge Sort
", ,"Merge sort is stable - there are no jumps when the list is merged
",
"What is interpolation search?
", ,"A search similar to binary search but with choosing a different element (eg. not the halfway one)
", , , ,,"mb24 (mb2412 - permission to this course revoked)
"
"When using QuickSelect, we use the k-th smallest element to simplify quick sort. On average, how many levels will there be?
", ,"log(n)
", , , ,"The answer is log(n) levels. It takes on average log(n) levels of partitions in order to get down to single elements to sort.
",
"Calculate the output of the pre-order traversal algorithm in the following tree a / \ b e /\ /\c d f g/\ /h i j
","a, b, c, h, i, d, e, f, g, j
", , , , ,,"tjs66 (tjs66 - permission to this course revoked)
"
"If an algorithm takes 1 second to process 1,000 elements and takes 8,000 seconds to process 20,000 results, what is its complexity?
", , ,"O(n3)
", , ,"For O(n3), doubling the value of n increases T by a factor of 8.20,000 / 1,000 = 20 - the factor increase of n203 = 8,000 seconds, so the complexity is O(n3)
",
"Which of the following statements comparing linked lists with arrays are true:A) In a Linked List, it would be faster to get to the 110th item.B) In a Linked List, it would be faster to remove an item from the middle of it.C) In an Array, it would be be faster to insert an item in the front of it.D) Arrays use less memory since they do not use storage for pointers.
", , ,"Only B and D
", , ,"A) Arrays are faster in this case, since in a Linked List you need to go through 109 positions in this case to reach the 100th position, where as you can access the 110th item in an Array in one go.B) In a Linked List, there is no shifting of elements when removing an item, where as in an Array you need to shift all the elements left one slot.C) In an Array, you need to shift all the items to the right one slot in order to insert the new item, where as in a Linked List you can add a new element in a few steps. (involving updating pointers)D) A Linked List uses pointers, so it needs extra storage for the pointers, where as an Array does not.
",
"Given a closed hash table with 50 buckets, what is the average number of steps it will take to insert/find an item if the maximum number of keys to insert is 40?
","3
", , , , ,"Load = 40/50 = 0.8Average number of steps = 1/2(1 + 1/(1-load)) = 1/2(1+ 1/0.2)) = 3
",
"If f(n) = 2^n+ 10, g(n) = 5nlog(n), and h(n) = n^2 + log(n), which of the following statements is true?
", , ,"f(n) = ?(h(n)), g(n) = O(h(n)), h(n) = O(f(n))
", , ,"In order of increasing complexity, the functions go g(n), h(n), f(n).So h(n) is a lower bound for f(n), h(n) is an upper bound for g(n), and f(n) is an upper bound for h(n).
",
"What is the right order of steps for the Post-order way to traverse a tree?
", ,"Process the nodes in the left sub-treeProcess the nodes in the right sub-treeProcess the current node
", , , ,,"leabaviere (lcyb20 - permission to this course revoked)
"
"Which of these sorts are ALL Stable?
", , ,"Merge sort, Insertion sort, Bubble sort.
", , ,"Insertion sort:T(n) for already or nearly-ordered arrays. T(n2) otherwise.Bubble sort:T(n) for already or nearly-ordered arrays (with a good implementation). T(n2) otherwiseMerge sort:T(n log2n) always. Used for sorting large amounts of data on disk (aka “external sorting”).
",
"What is the Birthday Problem?
", ,"A problem asking the likelyhood of two people having the same birthday on the same day out of n people.
", , , ,,"kiaraplds (kgp22 - permission to this course revoked)
"
"Which of the following statements a,b,c or d are all stable sorting algorithms?a) Insertion sort, Bubble sort, Merge sortb)Merge sort, Bubble sort, Shell sortc) Quick sort, Insertion sort, Heap sortd) Heap sort, Shell sort, Bubble sort
","a)
", , , , ,,"ses59 (ses59 - permission to this course revoked)
"
"What is the complexity of the following code?int searchArray(int arr[], int n, int forValue) { for ( int i = 0; i < n; i++ ) { if (arr[i] == forValue) { return i*2; } }}
", , , ,"T(n)
", ,"The correct answer is T(n). This is the correct answer as the for loop is cycled through n times. If the value is found then it is returned.
",
"What is a stable sorting algorithm?
","Algorithms which take into account the initial ordering when sorting – maintaining the order of equal-valued items.
", , , , ,"A stable sorting algorithms are algorithms which take into account the initial ordering when sorting – maintaining the order of equal-valued items.
",
"Which List structure is the quickest to traverse?
","Skip List
", , , , ,"A skip list has more pointers in the list nodes to traverse it quicker.
",
"Which statement about the trade-offs of having a big hash tables is true?
", ,"Big hash tables have fast search time and an inefficient use of memory.
", , , ,"Big hash tables with too many buckets which ensures really fast searches because the hash functions map to more unique indexes but waste a lot memory.
",
"What is the worst-cast runtime-complexity of Bubblesort?
", , , ,"O(n2)
", ,"Worst-Case is when the list is sorted in order backwards.In this case BubbleSort iterates through the list n times, and swaps the position of every pair it goes over for every iteration
",
"What is the best-case runtime-complexity ofBubble Sort?
", ,"O(n)
", , , ,"Best case scenario is where the list is already sorted.In this instance, bubblesort goes over every element once, and makes no changes
",
"In a tree, when is node called a leaf?
", , ,"When it does not point to any other nodes.
", , ,,"adham (aofge20 - permission to this course revoked)
"
"Which of the following are Carey’s 2 Rules of Sorting?
","Don’t choose a sorting algorithm until you understand the requirements of your problem.andAlways choose the simplest sorting algorithm possible that meets your requirements.
", , , , ,"You should use the requirements of the problem to inform your choice of algorithm. Once you have a choice of algorithm that fits these requirements you should always choose the simplest, most efficient option.
","ac2424 (ac2424 - permission to this course revoked)
"
"Which of the following are Carey’s 2 Rules of Sorting?
","Don’t choose a sorting algorithm until you understand the requirements of your problem.andAlways choose the simplest sorting algorithm possible that meets your requirements.
", , , , ,"You should use the requirements of the problem to inform your choice of algorithm. Once you have a choice of algorithm that fits these requirements you should always choose the simplest, most efficient option.
","ac2424 (ac2424 - permission to this course revoked)
"
"What makes a binary tree balanced
","Given any node: | # of nodes in left sub tree - # of nodes in right sub tree| = {0, 1}
", , , , ,"https://www.geeksforgeeks.org/avl-tree-set-1-insertion/
",
"in a linked list which of these methods has a guaranteed complexity of 1?
", ,"add(o)
", , , ,"all methods other than add have an average complexity of n, adding will always take a guaranteed time as it is always adding at a set location so doesn't need to traverse the list
","ac2424 (ac2424 - permission to this course revoked)
"
"in a linked list which of these methods has a guaranteed complexity of 1?
", ,"add(o)
", , , ,"all methods other than add have an average complexity of n, adding will always take a guaranteed time as it is always adding at a set location so doesn't need to traverse the list
","ac2424 (ac2424 - permission to this course revoked)
"
"What is linear probing?
", ,"scanning through a hash table to find empty space
", , , ,,"ac2424 (ac2424 - permission to this course revoked)
"
"A search engine 'Bugle' uses a system called PageRank to determine the order it shows results in.This involves solving a large matrix problem using an algorithm of order N2log(N) where the size of the matrix is N x N.Which one of the following statements is false?
", , , ,"The algorithm will always run faster than another algorithm of order N4
", ,"A & B) N2=O(N2log(N)) = O(N3) = O(2N),i.e for some real, non-negative constants w,x,y,z and N sufficiently large: w*(N2) < x*(N2log(N)) < y*N3 < z*2NC) Trivially trueD) For small N this is not necessarily true as the constant in front of the second algorithm could be very small compared to a large constant infront of the N2log(N) algorithm e.g.for (a) being the first algorithm, (b) the N4algorithm, and T being the actual run-time,we could have: T(a) = 0.00000001*N4, T(b) = 100000000*N2log(N), and so for N=10, T(a)>T(b).
",
"Which of the following is the output of In-order traversal on this tree: a / \ b e / \c d(Where the processing is simply printing the node value)
", , , ,"c b d a e
", ,"Using the notes from lecture 13:1. Process the nodes in the left sub-tree.2. Process the current node.3. Process the nodes in the right sub-tree.
",
"Consider a binary tree with numeric nodes where the left sub-tree consists of numbers less than the node, and the right sub-tree consists of numbers greater than the node.This tree is empty other than the root value: 10.The following numbers are inserted into the tree in order from left to right (i.e. 15 is inserted first):15, 6, 12, 4, 9, 11, 7, 8What is the height (number of levels) of the tree?
", , ,"5
", , ,"The tree should look like: 10 (1) / \ 6 15 (2) / \ / 4 9 12 (3) / / 7 11 (4) \ 8 (5)There are 5 levels, hence the height of the tree is 5
",
"Which of these is not an elementary operation?
","Looping over an array
", , , , ,,"tpz20 (tpz20 - permission to this course revoked)
"
"An implementation of selection sort runs for 2s to sort a list of 1,000 records. How long will it likely run to sort 10,000 records?
", , ,"200s
", , ,"Selection sort has a runtime complexity of?(n2), so increasing the number of records by a factor of 10 increases the time taken to sort by a factor of 102 = 100.100 x 2s = 200s, therefore we would expect it to take 200s to sort 10,000 records.
",
"An algorithm takes 1s for n = 100. Given that its asymptotic time complexity is?(n2), how many seconds do you expect it to take for n = 800?
", , , ,"64s
", ,"?(n2) means that doubling n increases T by factor 4 (slide 14 on lecture 4).We start at n = 100, taking 1s.So n = 200, would take 4 x 1s = 4s.n = 400 would take 4 x 4s = 16s.n = 800 takes 4 x 16s = 64s.Therefore the answer is 64s.
",
"Interpolation search is an improved version of Binary search. Given that it has time complexity O(log(log n)), which of the following correctly orders the time complexities from best to worst, for large n.
", , , , ," O(1), O(log(log n)), O(log n), O(n), O(nlogn)
","Binary seach has O(logn). We know interpolation search is faster than binary search, so this must be to the left of O(log n). We also know O(1) must be the quickest, as it doesn't change no matter how large the input n. Finally, O(nlogn) is slower than O(n), since there is an extra factor logn which is greater than 1 for large n. This leaves us with option E.
",
"You wish to use a standard closed hashtable with linear probing (to the right, i.e. in the direction of higher indices). The hash function has the form h(x) = (x*x) % 5 , and the hash table has slots 0, ... , 4. If you insert the elements 3, 2, 4, 1, 5 in that order, what does the hashtable look like at the end?
", , , ,"2, 4, 1, 5, 3
", ,"The correct answer is 2, 4, 1, 5, 3.We first insert 3: (3*3) % 5 = 9 % 5 = 4, so 3 goes in slot 4 (last one).Next insert 2: (2*2) % 5 = 4 % 5 = 4. However slot 4 is full, so we move one to the right, which loops us back to the front of the hashtable so we insert 2 in slot 0.Next insert 4: (4*4) % 5 = 16 % 5 = 1, so 4 goes in slot 1.Next insert 1: (1*1) % 5 = 1 % 5 = 1. Slot 1 is full so move one to the right and insert in slot 2, which is empty.Finally insert 5: (5*5) % 5 = 25 % 5 = 0. Slot 0 is full so move to the right. Slot 1 is also full so move right. Slot 2 is also full so move right. We find slot 3 is empty so we insert 5 into slot 3.
",
"What is the main advantage of considering an amortised runtime?
", ,"Worst-case runtime per operation can be too pessimistic.
", , , ,"Worst-case runtime per operation can be too pessimistic. Operations may usually be quick, and only sometimes slow. So the average may not be so bad.
",
"When for loops are nested, the asymptotic time complexity can be found by multiplying the order of each loop. If the for loops are not nested, big-O complexity is given by...
","the highest order of one of the loops.
", , , , ,"The highest order of one of the loops corresponds to the slowest performing loop, which gives us our upper bound.
",
"You are using a standard closed hashtable with linear probing (to the right). The hash function has the form h(x) = x % 5 and the hash table has slots 0,1,2,3,4. If you insert the elements 9,3,14,7,1 in this order, what does the hashtable look like at the end?
", ,"14,1,7,3,9
", , , ,"We first insert 9, which goes into slot 4: _,_,_,_,9We then insert 3, which goes into slot 3: _,_,_,3,9We then insert 14, which should go in slot 4. As slot 4 is full, we move to the next free slot which is slot 0: 14,_,_,3,9We then insert 7, which goes into slot 2: 14,_,7,3,9We finally insert 1, which goes into the remaining slot 1: 14,1,7,3,9 (which is answer B).
",
"What is the definition of a Lower Bound (Big-Omega)?
","1) (""g(n) is Big-Omega of f(n)"") iff there are constants c>0 and n0>0 so that for all n>n0: g(n) = c f(n)
", , , , ,,"dminnis1 (dnm28 - permission to this course revoked)
"
"Given a particular load L for an Open Hash Table, what is the average number of steps to insert or find an item?
", ,"
", , , ,"Answer given in lecture 9
",
"In which of the following cases is a linked list preferable to an array?1) Inserting a new element at the front of either2) Removing an element in the middle of either3) Getting the 200th element of either
", ,"1 and 2
", , , ,"Clearly reasoned in lecture 7
","chrisdix (csd31 - permission to this course revoked)
"
"In which of the following cases is a linked list preferable to an array?1) Inserting a new element at the front of either2) Removing an element in the middle of either3) Getting the 200th element of either
", ,"1 and 2
", , , ,"Clearly reasoned in lecture 7
","chrisdix (csd31 - permission to this course revoked)
"
"What is the theta time complexity of the following algorithm fragment (f(a,b))?for (int i=0; i<a+b; i++) {System.out.println(i);}for (int i=0; i<a*a*a; i++) {System.out.println(i);}
", , ,"
", , ,"From lecture 5, we must take into account both independant input sizes. Considering both loops, the first is order exactly a+band the second is a^3. Combining these leaves only a^3 + b
",
"Given the numbers [1,4,6,3,7,2,10]. What would be the final balanced AVL Tree?
", , ,"
", , ,,
"A binary search tree whose left subtree and right subtree differ in height by at most one unit is called..
", ,"AVL Tree
", , , ,,"vk407 (vk407 - permission to this course revoked)
"
"Which are the following statements are false?
","Selection sort has an average time complexity of O(n), is stable and is hard to implement in comparison with other sorting algorithms
", , , , ,"Selection sort is easy to implement, always has a time complexity of O(n2) and is unstable
",
"Given the int array 6, 5, 1, 4, 7, 8, 2, how many steps will it take to sort it in ascending order using bubble sort?
", , , ,"6
", ,"Initial array: 6 5 1 4 7 8 2Iteration 1: 5 1 4 6 7 2 8Iteration 2: 1 4 5 6 2 7 8Iteration 3: 1 4 5 2 6 7 8Iteration 4: 1 4 2 5 6 7 8Iteration 5: 1 2 4 5 6 7 8Final iteration to check (iteration 6): 1 2 4 5 6 7 8
",
"which of these sorts is stable
", , ,"Merge sort
", , ,"Merge sorts will not rearrange elements already in the correct order
",
"What is the definition of Space Complexity?
", ,"How much memory space an algorithm requires
", , , ,,"jv350 (jv350 - permission to this course revoked)
"
"When do you use Big-Theta notation when calculating time complexity?
", , ,"For exact estimation
", , ,"Big O is used for over-estimatingBig Omega is used for under-estimatingBig Theta is used for exact estimation
",
"Whats the average number of steps to find any items in anopen hash table of 1213 buckets with 1000 elements in the table?
", , ,"1.41
", , ,"First calculate the load factor:L = max element / total buckets= 1000 / 1213=0.82 (2 sf)Then the expected steps = 1 + L/2 = 1.41 (3 sf)
",
"which of the following questions is unanswerable given only that for functions f and gf(n) = ?(1)g(n) = O(n)but would be answerable given more information
", , , ,"?(g(n)) =O(g(n))
", ,"A is true,B is false and does not really make sense as there exists h such that ?(h(n)) >?(g(n) then h(n) = O(g(n)) andh(n) = O(f(n)) hence O(g(n)) = h(n) = O(f(n)) which impliesO(g(n)) = O(f(n)),C is false,D could be true or false depending on what?(g(n)) is,E is true
",
"Why we need to a binary tree which is height balanced?
","to avoid formation of skew trees
", , , , ,"In real world dealing with random values is often not possible, the probability that you are dealing with non random values(like sequential) leads to mostly skew trees, which leads to worst case. hence we make height balance.
",
"Which of the following code performs the partition operation correctly in QuickSort?
", ,"private static int partition(int[] arr, int low, int high){int left, right, pivot_item = arr[low];left = low;right = high;while(left <= right){while(arr[left] <= pivot_item){left++;}while(arr[right] > pivot_item){right--;}if(left < right){swap(arr, left, right);}}arr[low] = arr[right];arr[right] = pivot_item;return right;}
", , , ,"The array is partitioned such that the elements left to the pivot are lesser than the pivot while the elements right of the pivot are greater than the pivot.
",
"which of the following data structure are similar to skipList?
", , , ,"balanced binary search tree
", ,"all elements lesser than the top line elements are placed infront of it and greater ones after it. And skip lists have the same time complexities as balanced binary search trees.
",
"Select the option where the given data structure andcomplexity for search time (check that it contains an object) do not match.
", , ,"Doubly Linked List has search time complexity O(Log(n))
", , ,"A doubly linked list is simply a linked list with pointers to the previous element as well as the next element hence it has the same search complexity as a linked list, n. This is as the best way to search it is by using a linear search algorithm as it is an unordered list
",
"Which of the following statements about open hash tables is false
", ,"If an object is hashed to a slot that is already full then the object will be put in the next available slot after the slot mapped to in an open hash table.
", , , ,"Remember that an open hash table will put objects into linked lists and closed hash tables will put objects into the first available slots.Even though linked lists can hold multiple objects they will take longer to see if it contains an object if there are more objects to check.The load is the fullness of the hash table, hence if it is bigger it will take longer to do things.
",
"When implementing a singly linked list, which of the following statements is true?
", , , ,"Inserting an element has worst case time complexity of
", ,"When an element is added that comes anywhere other than first in the list, then the head pointer should stay the same, as the first element in the list has not changed.In a singly linked list, their is only one pointer for each element which allows forwards traversal of the list, there is no way to travel backwards.In cases where the element you are searching for is not the first one in the list, then more than 1 comparisons have to be made.When inserting an element at the end of a linked list (worst case), then the time complexity is theta(n).To remove the first element in a linked list, then you would do so by updating the head pointer to the element after it.
",
"What is the big O complexity f(n) of the following code?(A) for( int i = 0; i < n; i++){(B) for( int j = i; j < n; j++){(C) for( int k = 0; k < 4; k++){ System.out.println(""Hello World!""); } } }
", ,"n2
", , , ,"Let K be the constant operation time for the Loop (C).As the loop (C) always performs 4 print statements.Now, for i = 0: (B) performs (n) Loops of K. i = 1: (B) ... (n-1) ... i = 2: (B) ... (n-2) ... ... ... ... i = n: (B) ... (0) ...Then the loop (A) & (B) can be seen as this(n) * K + (n-1) * K + (n-2) * K + ... + (1) * K + (0) * KFor every increase in i, the loop (B) decreases.This can be simplified by the summation formulawhich yields:(n)(n+1)/2 * K = (K/2)(n^2 + n)Hence, the Big O complexity of ( n^2 )
",
"Which of these is not an example of a stable sort?
", , ,"Selection Sort
", , ,"Selection Sort is unstable, the rest are stable.
",
"Which of these is the correct order for the runtime complexity classes - from fastest to slowest, for large values of n?
","constant, log(n), sqrt(n), n, nlog(n), n^2, n^3, 2^n
", , , , ,"For large values of n, this answer shows the fastest running first and ends in the slowest
",
"Carey's two rules of sorting are:
",#NAME?, , , , ,,"am3132 (am3132 - permission to this course revoked)
"
"what is the theta complexity of this algorithm f(n)function int f(int n){ int c = 0; for (int i=1 i<n; i=i*2){ for (int j=0; j<i; j++){ c++; } } return c;}
", , , ,"n
", ,"The function outputs its complexity as c is incremented in the inner most loop so f(n) approximately equivalent to the number of operations. Try running this code yourself :public class complex { public static void main(String[] args) { double n = 128; //try changing n for yourself double c = 0; for (int i=1; i<n; i=i*2){ for (int j=0; j<i; j++){ c++; } } System.out.print((c - n)/n); }}If you try the code f(8) it will output 1 + 2 + 4 = 7or f(32) it will output 1 + 2 + 4 + 8 + 16 = 31or f(30) it will output 1 + 2 + 4 + 8 + 16 = 31As you can see the complexity is always take x - 1 (where x is n rounded up to the next power of 2And rounding does not affect the complexity and neither does subtracting oneHence the complexity is n
",
"Given the following sorted list of numbers:1, 2, 34, 45, 104, 287, 287, 299Using the binary search algorithm; how many comparisons would it take to determine if the number 0 is in the list (when using the floor function for finding the middle element of the list)?
", ,"3
", , , ,"Compare 45 with 0; take the lower half of the list: 1, 2, 34Compare 2 with 0; take the lower half of the list: 1Compare 1 with 0; this was the last element.So it takes 3 comparisons to determine 0 is not in the list.
",
"What is a stable sort?
", , ,"A sort which takes into account the initial ordering.
", , ,"A stable sort is a sorting algorithm which takes into account the initial ordering, and maintains the order of equal-valued items. Examples include: merge sort, bubble sort and insertion sort.
",
"When inserting a node in a doubly linked list, we must update:
", ,"The new node's next and previous pointerThe previous node's next pointerThe following node's previous pointer
", , , ,"We update the new node's next pointer to point to the following node, the new node's previous pointer to point to the previous node, the previous node's next pointer to the new node and the following node's previous pointer to the new node. The list has been updated.
",
"Which of the following sorting algorithms is stable?
", , , ,"InsertionSort
", ,"Insertion sort works by shifting elements rather than swapping them, so the original order of equivalent values is preserved after sorting.See lectures 10 and 11 for full details
",
"In which of the following data structures is it difficult (not recommended) to remove values from?
", , , ,"Closed hash tables (with Linear probing)
", ,"For Linked lists, and Doubly linked lists it is easy to remove values by just adjusting the next (and prev) pointers.For Arrays, it is easy to remove values by just assigning the position a null value.Open hash tables are essentially just arrays where the elements are linked lists, so values can be easily removed in the same way that you would for a linked list.Closed hash tables (with Linear probing) cause an issue though, as when you remove a value from a closed hash table, it creates a gap which can break your linear probing search algorithm.See Lecture 7 and 9 for full details.
",
"Given a particular load L for a Closed Hash Table w LP, what is the maximum number of steps to find the bucket?
", , , ,"1/(1-L)
", ,"Average # of steps = ½(1+ 1/(1-L)) for L < 1.0. ""1"" and ""1/(1-L)"" represent the minimum and maximum# steps to find a bucket, respectively.
",
"Which of the following sorting algorithms does not have a worst case time complexity of O(n2)?
", , ,"Merge sort
", , ,"Merge sort has worst time complexityO(n log(n))
",
"Which of the following bounds are correct for the run time of the following code?for ( int i = 0; i < n; i++) for ( int j = 0; j < n; j++) out.println(“Hapax Legomenon”)A)O( n2 )B)?( n2 )C) O(log n)D)O( n3)
", , , ,"A & B are correct, C & D are wrong
", ,"The code has run time that would be bounded by?(n2). Thus, B is correct. A is also correct because?(n2) implies bothO(n2) and O(n2).C and D are wrong; the code has higher complexity than log n so for large enough n, there would be no constant large enough to be an upper bound for this. Conversely, n3 increases much faster than n2 so for large n could not be a lower bound.Thus, D is the correct answer to the question.
",
"Suppose you are given that an element is definitely in the Hash Table. You search for this element in the Hash Table with linear probing. You calculate the bucket for the element's key using the hash function. However, when you check the appropriate bucket it contains a different key. Which of the following are possible reasons for this?A) The element was inserted in the Hash Table but then got over-written by another element with the same bucket number.B) The element is placed below it's bucket calculated by the hash function.C) The other key had the same bucket calculated by the hash function.D) The other key was forced to move down to the bucket because it's own bucket was already filled.
", , ,"B C D
", , ,"A contradicts the definition of a closed hash table with linear probing.B is a direct consequence of C or D, i.e. if the key's bucket is full it is placed in the first empty bucket that is found.Note that B could have also said the key is placed in a bucket above it's hash function bucket.
",
"For a Hash Table with T slots already containing n elements how likely are there going to be collisions in the Hash Table?
", , , ,"
", ,"This was approximated in Lecture 9 based on the Birthday Problem.
",
"For some constants a<b<c arrange the following time complexity functions in order slowest to fastest for large number of input n.A) B)C) D) E)
", , , , ," D B C A E
","Note that the constants do not play a role in this.When graphing the time complexity functions one can notice that for large n the functions are stacked in order D B C A E, with D being above all others and E being below all others.
",
"What is ""time complexity"" of an algorithm?
", , , , ," The number of instructions used by an algorithm as a function of the size of the input data.
","The definition was given in Lecture 3.
",
"Suppose you are searching for an element in a sorted list of size x using binary search.In how many steps no matter what element we are looking for can we find it?
", , , ,"log2(x)
", ,"The binary search works in the following way:1)Compare to the middle element2)If equals the middle element - searching is done2)If not either - get rid of the second half of the list if element should come before the middle element or get rid of the first half of the list if element should come after the middle element4)Repeat with the new shortened listWe are interested in the number of times we need to halve the size of the list (i.e. x) until we are unable to keep halving the list (i.e. reach 1). This can be done in precisely log2(x) steps. Therefore, we are guaranteed to either find the element or conclude element not in the list in log2(x) steps.
",
"Which of these are problems one might face working with Array-based Lists?A) Slow to add an element at the endB) Limited capacityC) Slow to insert/remove anywhere in the listD) Slow random access
", , ,"B and C
", , ,"In Lecture 6 the problems with an Array based List were discussed. Namely, we run into problems if an array gets full and it is more troublesome to insert/remove an element anywhere in the list.
",
"How many iterations of the bubble sort algorithm would it take to sort the following list in ascending order?3, 1, 4, 5, 9 ,2, 6
", , ,"5
", , ,"initial: 3, 1, 4, 5, 9 ,2, 6pass 1: 1, 3, 4, 5, 2, 6, 9pass 2: 1, 3, 4, 2, 5, 6, 9pass 3: 1, 3, 2, 4, 5, 6, 9pass 4: 1, 2, 3, 4, 5, 6, 9and one final iteration to check if the list is sorted= 5 iterations.
",
"Below are the rules for Big-O, are any of the statements A-D below FALSE?
", , , , ," No, all of the above are TRUE.
","They are all the correct definitions of the properties of Big-O.Transitivity: If A = B, and B = C, then also A = C.Scaling: Constant factors are small compared to large n.Sums: The larger function grows faster, so the smaller one can be ignored for large n.Product: For nested loops, each loop's f(n) can be multiplied together.
",
"Below is a function, how many elementary operations, in terms of n, are there in the body of the function?public int examQ(int num, int n){ int result = 0; for(int i=0; i<n; i++) { result = result + num; } return result;}
", , , ,"4n + 4
", ,"int result = 0; is 1 elementary operationint i = 0; is 1 elementary operationi < n; is n+1 elementary operationsi++; is n elementary operationsresult = ; is n elementary operations(including the fact it is in a loop)result + num; is n elementary operations(including the fact it is in a loop)return result; is 1 elementary operationSo overall, there are 1+1+n+1+n+n+n+1 = 4n+4 elementary operations
",
"What is an Abstract Data Type?
", ,"A coordinated group of data structures, algorithms and interface functions
", , , ,"B is the correct definition, as given in Lecture 2
",
"Imagine an empty closed hashtable that uses linear probing (to the right) to counter collisions.This closed hashtable can store a maximum of 5 data in 5 buckets labelled 0-4 in ascending order. It uses the hashing function f where:Where x is the data to be stored and f(x) is the bucket to store it in.If you were to insert the following data (from left to right) into this hashtable:6, 3, 2, 1, 5What order would the data be stored after insertion?
", , , ,"1, 5, 6, 3, 2
", ,"f(6) = 2 so place 6 in slot 2f(3) = 3 so place 3 in slot 3f(2) = 3 so place 3 in slot 4 as slot 3 is fullf(1) = 2 so place 1 in slot 0 as slots 2, 3 and 4 are fullf(5) = 0 so place 5 in slot 1 as slot 0 is full, , , , , , 6, , , , 6, 3, , , 6, 3, 21, , 6, 3, 21, 5, 6, 3, 2
",
"Consider the following runtimes for a list-sorting algorithm, with n as the size of the list and t as the time taken in seconds:n = 2000, t = 57n = 4000, t = 456n = 8000, t = 3648Which is the best approximation of the runtime complexity of the algorithm?
", ,"?()
", , , ,"The answer is?() because, as n doubles in size, the time taken is increasing by a factor of 8 which is .
",
"2 functions refer to the run-times of 2 algorithms:f(n)>0, g(n)>0a>0, A>0g(n) = A f(n) for all n>aWhich of the following is definitely true?
", ,"g(n) = O(f(n))
", , , ,"this is the definition forg(n) = O(f(n)) as seen in lecture 4
",
"Given three functions a(n) = 300n2, b(n)= 30nlog(n) and c(n)=n3- n2, which of the following statements is true?
", , , , ," None of these are true
","None of these are true.A is wrong because a is actually O(b) and c is O(a)B is wrong because c isO(b)C is wrong because c isO(a)D is wrong because a is O(c) and b is O(c)
",
"You plan to store data in a closed hash table with linear probing to the right. The hash function you are using is h(x) = x % 8, meaning there are 8 slots in your hash table; 0,1,2,3,4,5,6,7. If you insert the elements 14, 21, 13, 10, 6, 9, 1, 18 into the hash table, in that order, what would it look like at the end?
", ,"6, 9, 10, 1, 18, 21, 14, 13
", , , ,"B is correct. 14 goes in slot 6, as 14-6=8. Then 21 goes in slot 5, as 21-8-8=5. Next 13 would go in slot 5, so moves along to the right, where the next space is slot 7. 10 goes straight into slot 2 (10-8=2). 6 cannot go in slot 6 or 7, so goes in 0. 9-8=1, so 9 goes in slot 1. 1 then can't go in slot 1, or 2 as these are occupied, so goes in slot 3. Finally, 18 goes into slot 4, as this is the final empty space left.
",
"Which of the following is the correct definition for a function f(n) having asymptotic time complexity given byO(n²)?[For f(n) > 0 for n>0]
", , , ,"There exist constants c > 0 and n0 > 0 such that for all n > n0 : f(n) = cn2
", ,"O(n²) is the lower bound of the function; so f(n) must always be below cn2 after some n0.
",
"The runtime for the following code fragment is . What is f(n)?for (int i=0; i<n; i++) for (int j=0; j<i/10; j++) for (int k=1; k<n; k=2*k) System.out.println(i);
", , ,"
", , ,"Constant factors such as 1/10 can be ignored. The total number of iterations of the two outer loops together is given by the sum 1+2+...+n which is. The innermost loop doubles k in every iteration until n is reached, so this is. The loops are nested, therefore the overall complexity is.
",
